{"version":3,"sources":["/Users/alexei/dev/eva/packages/eva/index.ts","/Users/alexei/dev/react-native-ui-kitten/src/eva-icons/evaIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/eva-icons/index.ts","/Users/alexei/dev/react-native-ui-kitten/src/eva-icons/createIconsMap.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/theme/theme.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/style/style.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/style/styleConsumer.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/mapping/mappingContext.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/theme/themeContext.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/style/styleConsumer.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/theme/themeConsumer.component.tsx","/Users/alexei/dev/eva/packages/processor/js/src/service/common/common.service.ts","/Users/alexei/dev/eva/packages/processor/js/src/service/mapping/mapping.service.ts","/Users/alexei/dev/eva/packages/processor/js/src/service/style/style.service.ts","/Users/alexei/dev/eva/packages/processor/js/src/processor/mapping/mappingProcessor.ts","/Users/alexei/dev/eva/packages/processor/js/src/processor/meta/metaProcessor.ts","/Users/alexei/dev/eva/packages/processor/js/src/processor/schema/schemaProcessor.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/mapping/mappingProvider.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/theme/themeProvider.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/style/styleProvider.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/modal/modalResolver.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/modal/modal.service.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/modal/modalPanel.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/style/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/theme/application/applicationProvider.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/animation/animation.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/animation/pulseAnimation.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/animation/shakeAnimation.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/animation/zoomAnimation.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/avatar/avatar.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/support/components/arrow/arrow.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/support/services/props.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/support/services/i18n/i18nLayoutFlexMap.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/support/services/i18n/i18nLayout.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/support/services/validation.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/support/services/webEventResponder.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/support/components/checkmark/checkmark.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/support/components/tabIndicator/tabIndicator.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/support/components/chevron/chevron.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/bottomNavigation/bottomNavigation.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/text/text.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/bottomNavigation/bottomNavigationTab.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/bottomNavigation/bottomNavigationTab.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/button/button.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/button/button.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/buttonGroup/buttonGroup.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/components/calendarHeader.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/components/calendarMonthHeader.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/viewPager/viewPager.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/components/calendarPager.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/components/picker/calendarPickerRow.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/components/picker/calendarPickerCell.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/components/picker/calendarPicker.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/components/calendarDateContent.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/service/date.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/i18n/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/i18n/en.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/service/nativeDate.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/service/helpers.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/service/calendarData.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/divider/divider.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/baseCalendar.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/calendar.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/card/card.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/list/listItem.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/list/listItem.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/card/cardHeader.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/service/rangeDate.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/calendar/rangeCalendar.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/checkbox/checkbox.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/checkbox/checkbox.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/popover/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/popover/popoverView.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/popover/measure.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/popover/placement.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/popover/popover.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/datepicker/baseDatepicker.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/datepicker/datepicker.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/datepicker/rangeDatepicker.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/list/list.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/menu/menuItem.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/menu/menuItem.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/menu/subMenu.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/menu/menu.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/menu/menu.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/drawer/drawer.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/drawer/drawerHeaderFooter.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/select/selectOption.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/select/selectOption.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/select/selectGroupOption.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/select/selectOptionsList.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/select/selection.strategy.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/select/select.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/select/select.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/icon/service/iconRegistry.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/icon/icon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/icon/iconAnimation.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/icon/iconRegistry.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/support/typings/props.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/input/input.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/input/input.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/layout/layout.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/modal/modal.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/overflowMenu/overflowMenu.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/radio/radio.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/radio/radio.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/radioGroup/radioGroup.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/spinner/animation.ts","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/spinner/spinner.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/tab/tabBar.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/tab/tabView.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/tab/tab.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/tab/tab.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/toggle/toggle.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/toggle/toggle.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/tooltip/tooltip.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/topNavigation/topNavigation.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/topNavigation/topNavigationAction.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/framework/ui/topNavigation/topNavigationAction.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/avatar/avatarShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/avatar/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/common/showcaseSettings.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/common/showcaseItem.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/common/showcaseSection.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/common/showcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/themes/registry.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/themes/themeContext.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/common/showcase.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/avatar/avatar.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/bottomNavigation/bottomNavigationShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/bottomNavigation/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/bottomNavigation/bottomNavigation.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/button/buttonShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/button/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/button/button.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/buttonGroup/buttonGroupShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/buttonGroup/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/buttonGroup/buttonGroup.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/checkbox/checkboxShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/checkbox/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/checkbox/checkbox.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/drawer/drawerShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/drawer/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/drawer/drawer.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/icon/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/icon/iconShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/icon/icon.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/calendar/calendarShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/moment/momentDate.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/date-fns/dateFnsDate.service.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/calendar/calendarCustomItem.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/calendar/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/calendar/calendar.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/input/inputShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/input/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/input/input.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/layout/layoutShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/layout/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/layout/layout.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/list/listShowcase.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/list/listItemShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/list/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/list/list.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/menu/menuShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/menu/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/menu/menu.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/popover/popoverShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/popover/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/popover/popover.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/radio/radioShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/radio/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/radio/radio.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/radioGroup/radioGroupShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/radioGroup/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/radioGroup/radioGroup.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/spinner/spinnerShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/spinner/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/spinner/spinner.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/tabView/tabViewShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/tabView/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/tabView/tabView.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/tooltip/tooltipShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/tooltip/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/tooltip/tooltip.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/text/textShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/text/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/text/text.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/toggle/toggleShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/toggle/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/toggle/toggle.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/topNavigation/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/topNavigation/topNavigationShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/topNavigation/topNavigation.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/overflowMenu/overflowMenuShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/overflowMenu/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/overflowMenu/overflowMenu.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/sample/sample.component.web.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/sample/sample.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/modal/modalShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/modal/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/modal/modal.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/select/selectShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/select/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/select/select.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/datepicker/datepickerShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/datepicker/rangeDatepickerShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/datepicker/datepicker.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/rangeCalendar/rangeCalendarShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/rangeCalendar/type.ts","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/rangeCalendar/rangeCalendar.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/card/cardShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/card/cardExamples.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/card/type.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/card/card.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/home.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/avatar/avatarSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/avatar/avatarRemoteImages.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/avatar/avatarSize.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/avatar/avatarShape.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/avatar/avatarInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationTabInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationTabSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationTabWithExternalSourceIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationTabWithIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationWithIcons.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/bottomNavigation/bottomNavigationWithoutIndicator.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonAppearances.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonGhost.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonOutline.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonWithIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonSize.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/button/buttonStatus.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/buttonGroup/buttonGroupAppearance.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/buttonGroup/buttonGroupInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/buttonGroup/buttonGroupSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/buttonGroup/buttonGroupSize.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/buttonGroup/buttonGroupStatus.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarBoundingMonth.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarBounds.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarCustomDay.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarCustomLocale.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarFilterShowcase.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarMoment.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/calendarStartDayOfWeek.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/calendar/rangeCalendarSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/card/cardCustomHeader.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/card/cardEvaHeader.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/card/cardFooter.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/card/cardHeaderFooter.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/card/cardSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/card/cardStatuses.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/checkbox/checkboxSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/checkbox/checkboxStatus.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/checkbox/checkboxText.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/checkbox/checkboxInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/checkbox/checkboxIndeterminate.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datePickerBoundingMonth.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerCustomDay.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerFilter.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerCustomLocale.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerMoment.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/datepickerWithIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/datepicker/rangeDatepickerSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerWithIcons.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerHeader.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerHeaderFooterInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerHeaderFooterSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerHeaderFooterWithAccessory.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerHeaderFooterWithExternalSourceIcons.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerFooter.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerCustomHeader.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/drawer/drawerNotificationBadgeItem.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconWithinButton.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconWithinInput.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconExternalSource.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconAnimation.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconAnimationInfinite.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/icon/iconInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputSize.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputStatus.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputWithCaption.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputWithIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputWithExternalSourceIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/input/inputWithLabel.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/layout/layoutSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/layout/layoutLevel.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/layout/layoutInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listCompositeItem.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listItemInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listItemSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listItemWithAccessory.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listItemWithExternalIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listItemWithIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/list/listSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/menu/menuSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/menu/menuWithSubMenu.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/menu/menuAppearance.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/menu/menuWithIcons.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/menu/menuInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/overflowMenu/overflowMenuAppearance.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/overflowMenu/overflowMenuExternalSourceIcons.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/overflowMenu/overflowMenuSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/overflowMenu/overflowMenuWithDisabledItems.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/overflowMenu/overflowMenuWithIcons.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/popover/popoverSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/popover/popoverPlacement.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/radio/radioSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/radio/radioWithText.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/radio/radioStatus.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/radio/radioInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/radioGroup/radioGroupSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectMultiSelect.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectWithGroups.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectCustomIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectStatus.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectMultiPreselectedInline.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/select/selectMultiPreselectedReference.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/spinner/spinnerLoadingData.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/spinner/spinnerSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/spinner/spinnerSizes.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/spinner/spinnerStatuses.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabBarSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabViewInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabViewLazyLoading.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabViewSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabWithExternalSourceIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tab/tabWithIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/text/textAppearances.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/text/textCategories.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/text/textInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/text/textSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/text/textStatuses.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/toggle/toggleSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/toggle/toggleStatus.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/toggle/toggleSize.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/toggle/toggleWithText.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/toggle/toggleInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tooltip/tooltipInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tooltip/tooltipSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tooltip/tooltipWithExternalSourceIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tooltip/tooltipWithIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/tooltip/tooltipPlacement.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationActionExternalSourceIcon.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationActionInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationActions.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationActionSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationAlignments.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/topNavigation/topNavigationWithMenu.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/viewPager/viewPagerInlineStyling.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/viewPager/viewPagerLazyLoading.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/ui/screen/showcases/viewPager/viewPagerSimpleUsage.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/navigation/drawerNavigation.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/navigation/sharingHeight.container.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/navigation/navigation.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/icons/ant.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/icons/feather.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/icons/fontAwesome.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/icons/material.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/app.component.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/icons/materialCommunity.tsx","/Users/alexei/dev/react-native-ui-kitten/src/playground/App.tsx","/Users/alexei/dev/react-native-ui-kitten/node_modules/moment/locale sync /^/.//.*$","/Users/alexei/dev/react-native-ui-kitten/src/playground/src/assets/brand-logo.png"],"names":["mapping","require","light","dark","EvaIcon","content","props","Icon","this","tintColor","restProps","fill","EvaIconsPack","name","icons","Proxy","get","target","findIconByName","SYMBOL_REFERENCE","findThemeValue","theme","value","isReferenceKey","toThemeKey","startsWith","substring","createThemedStyle","Object","keys","reduce","acc","current","mappingValue","fallback","getThemeValue","StyleConsumerService","context","meta","safe","style","generatedConfig","docRoot","message","join","console","error","appearance","getDefaultAppearance","getDefaultVariants","getDefaultStates","source","interaction","styleInfo","getStyleInfo","generatedMapping","getGeneratedStyleMapping","JSON","stringify","toLowerCase","warn","withStyledProps","createDefaultProps","withValidParameters","themedStyle","info","componentStyles","styleKeys","styles","query","findGeneratedQuery","invalidParameters","forEach","key","parameters","includes","push","length","variantProps","getDerivedVariants","stateProps","getDerivedStates","variants","map","variant","states","matches","appearances","filter","default","transformObject","variantGroups","group","find","state","isDefault","undefined","p","prop","isState","isAssigned","transform","nextValue","keyQuery","split","compareArrays","lhs","rhs","reducer","MappingContext","React","createContext","ThemeContext","styled","Component","styledComponentName","Wrapper","init","onInit","service","defaultProps","onDispatch","setState","renderWrappedElement","forwardedRef","ref","dispatch","StyledElement","Consumer","ResultComponent","forwardRef","displayName","hoistNonReactStatics","withStyles","createStyles","createThemedStyles","withThemedProps","ThemedElement","ThemedComponent","toObject","array","c","hasOwnProperty","getComponentDefaultAppearance","component","getComponentMapping","getComponentDefaultState","getAppearance","getAppearanceMapping","getVariantMapping","groupValue","groupNameValue","getStateMapping","SEPARATOR_MAPPING_ENTRY","createStyle","normalizedAppearance","normalize","normalizeAppearance","normalizedVariants","defaultVariants","getComponentDefaultVariants","normalizeVariants","normalizedStates","stateWeight","separator","preprocess","createStateVariations","result","next","nextItem","concat","shift","sort","getStateVariationWeight","normalizeStates","indexOf","appearanceMapping","apce","getStatelessAppearanceMapping","variantMapping","getStatelessVariantMapping","stateMapping","getStateAppearanceMapping","getStateVariantMapping","currentToken","nextToken","withStrictTokens","parts","createStyleEntry","params","Boolean","noNulls","Set","noDuplicates","items","MappingProcessor","getComponentMappingMeta","componentMapping","getComponentVariants","getComponentStates","concatComponentVariants","concatComponentStates","concatVariantGroups","lhsValue","rhsValue","MetaProcessor","entries","controlMeta","nextAppearanceEntries","stateless","withStates","withVariants","withVariantStates","createAllStyles","prevAppearanceStyles","nextAppearanceStyles","withControlMeta","control","controlEntry","SchemaProcessor","mappingProcessor","metaProcessor","themeMapping","components","strictTheme","strict","process","MappingProvider","children","Provider","PureComponent","ThemeProvider","StyleProvider","ModalResolver","onBackdropPress","allowBackdrop","onStartShouldSetResponder","onResponderRelease","onStartShouldSetResponderCapture","renderComponentChild","cloneElement","renderComponentChildren","Children","renderWithBackDrop","TouchableOpacity","container","onPress","activeOpacity","renderWithoutBackDrop","View","notVisibleWrapper","pointerEvents","renderComponent","derivedProps","componentChildren","dialog","contentWrapper","visible","StyleSheet","create","absoluteFillObject","position","width","height","alignSelf","ModalService","panel","element","config","show","identifier","update","hide","Interaction","State","ModalPanel","Map","delete","generateUniqueComponentKey","Math","random","toString","areThereAnyComponents","size","renderModal","index","renderModals","Array","from","values","mount","unmount","set","panelChild","childElement","flex","ApplicationProvider","schemaProcessor","custom","customizedMapping","merge","customMapping","DEFAULT_CONFIG","cycles","useNativeDriver","Animation","counter","running","onAnimationEnd","stop","start","endCallback","callback","animation","end","easing","Easing","linear","duration","PulseAnimation","Animated","Value","restConfig","startAnimation","timing","toValue","endAnimation","sequence","scale","offset","ShakeAnimation","translateX","ZoomAnimation","AvatarComponent","getComponentStyle","roundCoefficient","containerParameters","baseStyle","flatten","borderRadius","componentStyle","Image","Avatar","Arrow","flatStyle","borderLeftWidth","borderRightWidth","borderBottomWidth","borderBottomColor","backgroundColor","borderLeftColor","borderRightColor","allWithPrefix","styleName","obj","styleKey","FlexStartEndMapper","toI18n","rtl","endsWith","FLEX_PREFIX","I18nLayoutFlexMap","alignContent","alignItems","justifyContent","flexDirection","FLEX_ROW_PREFIX","flexWrap","FLEX_WRAP_PREFIX","I18nLayoutService","I18nManager","isRTL","ltr","i18nStyle","currentStyleValue","i18nStyleValue","isValidString","WebEventResponderInstance","eventHandlers","WebEventResponder","onMouseEnter","onMouseLeave","onFocus","onBlur","CheckMark","shape","borderWidth","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","borderColor","left","top","right","isAnimated","toI18nStyle","rotate","TabIndicator","contentOffset","onContentOffsetAnimationStateChanged","onContentOffsetAnimationStateEnd","createOffsetAnimation","animationDuration","animated","select","onLayout","event","indicatorWidth","nativeEvent","layout","scrollToOffset","selectedPosition","positions","addListener","nextProps","scrollToIndex","removeAllListeners","rest","Chevron","getDirectionStyle","direction","containerTopRotate","containerRightRotate","containerLeftRotate","marginHorizontal","directionStyle","translateY","BottomNavigationComponent","onTabSelect","onSelect","selectedIndex","indicatorHeight","indicatorBackgroundColor","item","indicator","renderIndicatorElement","indicatorStyle","renderTabElement","selected","renderTabElements","tabElements","indicatorElement","BottomNavigation","TextComponent","Text","BottomNavigationTabComponent","iconWidth","iconHeight","iconMarginVertical","iconTintColor","textMarginVertical","textFontFamily","textFontSize","textLineHeight","textFontWeight","textColor","text","marginVertical","fontFamily","fontSize","lineHeight","fontWeight","color","icon","renderIconElement","iconElement","renderTitleElement","title","titleStyle","titleElement","BottomNavigationTab","bottomNavigationTabRef","createRef","webEventResponder","HOVER","outlineWidth","ButtonComponent","onPressIn","ACTIVE","onPressOut","textMarginHorizontal","iconMarginHorizontal","renderTextElement","textStyle","containerProps","childStyles","textElement","Button","buttonRef","FOCUSED","ButtonGroupComponent","dividerBackgroundColor","dividerWidth","button","isFirstElement","isLastElement","count","renderButtonElement","status","shapeStyle","borderEndWidth","borderEndColor","startShapeStyle","borderTopStartRadius","borderBottomStartRadius","endShapeStyle","borderTopEndRadius","borderBottomEndRadius","renderButtonElements","buttonElements","overflow","ButtonGroup","CalendarHeader","renderSpecificTitleIcon","renderTitleIcon","iconStyle","renderLeftIcon","lateralIcon","renderRightIcon","renderLateralNavigationControls","subContainer","headerButton","onNavigationLeftPress","onNavigationRightPress","onTitlePress","lateralNavigationAllowed","headerButtonText","paddingVertical","paddingHorizontal","minWidth","minHeight","CalendarMonthHeader","data","ViewPager","containerRef","contentWidth","contentOffsetValue","panResponder","PanResponder","onMoveShouldSetPanResponder","abs","dx","dy","i18nOffset","nextSelectedIndex","sign","getChildCount","onPanResponderMove","selectedPageOffset","setValue","onPanResponderRelease","vx","onOffsetChange","round","contentView","shouldLoadComponent","contentContainer","getContainerStyle","prevProps","childCount","panHandlers","CalendarPager","viewPagerRef","setTimeout","createChildElement","date","CalendarPickerRow","renderItem","CalendarPickerCellComponent","getContainerBorderRadius","firstRangeItem","lastRangeItem","contentBorderWidth","contentBorderRadius","contentBorderColor","contentBackgroundColor","contentTextFontSize","contentTextLineHeight","contentTextFontWeight","contentTextColor","contentTextFontFamily","contentText","renderContentElement","shouldComponentUpdate","bounding","today","CalendarPickerCell","CalendarPicker","isFirstRangeItem","range","isLastRangeItem","renderCellElement","rangedArray","category","isItemSelected","disabled","isItemDisabled","isItemToday","shouldItemUpdate","renderRowElement","rowStyle","CalendarDateContent","VIEW_MODE_DATE","id","navigationNext","VIEW_MODE_YEAR","pickNext","VIEW_MODE_MONTH","CalendarViewModes","DATE","MONTH","YEAR","DateService","locale","date1","date2","compareDates","isBetweenIncluding","isSameDay","isSameMonth","isSameYear","DAYS_IN_WEEK","MONTHS_IN_YEAR","TranslationWidth","EN","dayNames","short","long","monthNames","LOCALE_DEFAULT","DEFAULT_OPTIONS","startDayOfWeek","NativeDateService","options","i18n","setFechaLocaleData","format","isNaN","parse","getTime","Date","getDate","getMonth","getFullYear","getDay","SHORT","getMonthNameByIndex","getFechaMonthNames","getFechaDayNames","shiftDayOfWeekNames","fecha","num","createDate","month","setDate","min","getMonthEnd","year","setFullYear","splice","dayNamesShort","LONG","monthNamesShort","batch","batchSize","res","chunkIndex","floor","bound","producer","i","arr","DEFAULT_DATE_OPTIONS","holiday","CalendarDataService","dateService","createDayPickerData","dateRange","weeks","createDates","withBoundingMonths","createMonthPickerData","rows","columns","yearStart","getYearStart","monthRange","addMonth","createYearPickerData","yearRange","addYear","createDayPickerPagerData","startDate","endDate","numberOfDayPickers","getNumberOfMonths","createYearPickerPagerData","numberOfYears","getNumberOfYears","numberOfYearPickers","max","ceil","getYear","activeMonth","days","createDateRangeForMonth","withRangedDates","startOfWeekDayDiff","getStartOfWeekDayDiff","calendarRange","withRangedStartDates","withRangedStartEndDates","day","compareDatesSafe","isSameStartDate","isSameEndDate","isBetween","isShouldAddPrevBoundingMonth","addPrevBoundingMonth","isShouldAddNextBoundingMonth","addNextBoundingMonth","firstWeek","numberOfBoundingDates","unshift","createPrevBoundingDays","lastWeek","pop","createNextBoundingDays","daysInMonth","getNumberOfDaysInMonth","slice","startOfMonth","getMonthStart","getWeekStartDiff","getFirstDayOfWeek","getDayOfWeek","monthDate","DividerComponent","Divider","PICKER_ROWS","PICKER_COLUMNS","VIEWS_IN_PICKER","FORMAT_DAY","FORMAT_MONTH","FORMAT_YEAR","FORMAT_HEADER_DATE","FORMAT_HEADER_MONTH","FORMAT_HEADER_YEAR","BaseCalendarComponent","viewMode","startView","visibleDate","getSelectedDate","dataService","calendarDayPagerRef","calendarYearPagerRef","scrollToToday","onDaySelect","onMonthSelect","nextVisibleDate","onYearSelect","onDayPickerPagerSelect","onYearPickerPagerSelect","onPickerNavigationPress","onHeaderNavigationLeftPress","pagerRef","getCurrentPagerRef","onHeaderNavigationRightPress","shouldUpdateDayItem","shouldUpdateDayElement","getCalendarStyle","maxWidth","maxHeight","headerContainer","headerPaddingHorizontal","headerPaddingVertical","titleFontSize","titleFontWeight","titleLineHeight","titleColor","titleFontFamily","divider","dividerMarginVertical","daysHeaderContainer","rowMarginHorizontal","row","rowMinHeight","getWeekdayStyle","weekdayTextFontSize","weekdayTextFontWeight","weekdayTextLineHeight","weekdayTextColor","weekdayTextFontFamily","getIsDaySelected","isDaySelected","isMonthSelected","isSameMonthSafe","isYearSelected","isSameYearSafe","isDayDisabled","minDayStart","maxDayStart","isBetweenIncludingSafe","isDateFitsFilter","isMonthDisabled","minMonthStart","maxMonthStart","isYearDisabled","minYearStart","maxYearStart","getYearEnd","isDayToday","isSameDaySafe","isMonthToday","isYearToday","isDateFitsBounds","isDayPickerInViewPort","visibleDayPickerIndex","isYearPickerInViewPort","visibleYearPickerIndex","createHeaderTitle","getCalendarPagerIndex","isLateralNavigationAllowed","renderWeekdayElement","weekday","renderDayElement","renderDayIfNeeded","boundingMonth","renderDay","renderMonthElement","monthCell","renderYearElement","yearCell","renderDayPickerElement","getDayPickerData","renderDayPickerPagerElement","Fragment","getDayOfWeekNames","renderMonthPickerElement","renderMonth","renderYearPickerElement","renderYear","renderYearPickerPagerElement","renderPickerElement","renderCalendarFooter","renderFooter","renderCalendarHeader","titleSelector","aspectRatio","CalendarComponent","selectionChanged","disablingChanged","Calendar","CardComponent","headerStyles","bodyStyles","footerStyles","accentStyles","titleStyles","descriptionStyles","header","body","bodyPaddingVertical","bodyPaddingHorizontal","footer","footerPaddingVertical","footerPaddingHorizontal","titleMarginHorizontal","description","descriptionColor","descriptionMarginHorizontal","accent","accentBackgroundColor","accentHeight","renderDivider","renderHeader","headerStyle","accentStyle","descriptionStyle","renderBody","childrenStyles","Card","ListItemComponent","onLongPress","descriptionFontFamily","descriptionFontSize","descriptionFontWeight","descriptionLineHeight","accessoryMarginHorizontal","accessory","contentStyles","renderContentElementChildren","descriptionElement","renderDescriptionElement","renderAccessoryElement","accessoryElement","renderTemplateChildren","textAlign","ListItem","listItemRef","CardHeader","RangeDateService","createRangeForStart","createRangeForStartEnd","RangeCalendarComponent","rangeDateService","createRange","rangeChanged","rangeStartPlaceChanged","rangeEndPlaceChanged","RangeCalendar","CheckBoxComponent","onChange","checked","iconBorderRadius","outlineHeight","outlineBorderRadius","outlineBackgroundColor","highlightContainer","selectContainer","highlight","createHitSlopInsets","bottom","renderSelectIconElement","renderIndeterminateIconElement","indeterminate","selectContainerStyle","hitSlopInsets","hitSlop","CheckBox","checkboxRef","Point","x","y","Size","Frame","origin","other","zero","point","OffsetRect","Offsets","MARGIN","rawValue","MARGIN_HORIZONTAL","MARGIN_VERTICAL","MARGIN_LEFT","MARGIN_TOP","MARGIN_RIGHT","MARGIN_BOTTOM","offsetValue","parseString","applyToRect","rect","PopoverPlacements","typeOf","LEFT","TOP","RIGHT","BOTTOM","LEFT_START","LEFT_END","TOP_START","TOP_END","RIGHT_START","RIGHT_END","BOTTOM_START","BOTTOM_END","leftOf","centerVerticalOf","offsets","bounds","alignment","frame","fitsStart","fitsTop","fitsBottom","parent","family","fits","topOf","centerHorizontalOf","fitsLeft","fitsRight","rightOf","fitsEnd","bottomOf","PLACEMENT_DEFAULT","PopoverView","placement","derivedIndicatorStyle","isVertical","isStart","isEnd","isReverse","indicatorPrimaryRotate","indicatorSecondaryRotate","containerTranslate","indicatorTranslate","indicatorOffset","i18nVerticalIndicatorTranslate","containerStyle","contentStyle","rawPlacement","MeasureElement","onResult","node","findNodeHandle","UIManager","measureInWindow","w","h","window","Dimensions","bindToWindow","measuredElement","MeasureNode","onChildMeasure","tag","renderMeasuringElement","PLACEMENT_FAMILIES","PopoverPlacementService","preferredValue","findRecursive","families","oneOfCurrentFamily","findFromFamily","oneOfReversedFamily","reverse","firstTruthy","nextPlacement","preferredFrame","familyValue","familyFrame","WINDOW","WINDOW_BOUNDS","TAG_CHILD","TAG_CONTENT","PopoverComponent","placementService","handleVisibility","popoverId","updatePopoverElement","renderPopoverElement","popoverPlacement","popoverElement","popoverVisible","onMeasure","placementOptions","createPlacementOptions","showPopoverModal","createPlacement","popoverFrame","positionStyle","positionedPopoverElement","derivedStyle","measuringProps","popover","popoverInvisible","renderChildElement","child","opacity","Popover","BaseDatepickerComponent","getComponentStyles","popoverMarginHorizontal","indent","toggleVisible","dispatchActive","getComponentTitle","renderControlChildren","renderControl","popoverStyle","renderCalendar","placeholder","DatepickerComponent","formatDateToString","Datepicker","RangeDatepickerComponent","RangeDatepicker","ListComponent","listRef","scrollToEnd","getItemStyle","keyExtractor","itemStyle","itemElement","FlatList","List","MenuItemComponent","menuIndex","indicatorStyles","iconStyles","renderIcon","renderTitle","renderAccessory","restStyles","zIndex","MenuItem","menuItemRef","MAIN_ITEM_KEY","DIVIDER_ELEMENT_KEY","SUB_ITEMS_MEASURE_TAG","SubMenuComponent","subItemsVisible","subItemsHeight","subItemsAnimation","iconAnimation","subItemsExpandAnimate","spring","animateIcon","onMainItemPress","onSubItemPress","subItemsPaddingHorizontal","onSubMenuMeasure","getIsSelected","isMainItemDividerExist","isSubItemDividerExist","subItems","renderMainItemAccessory","animatedStyle","interpolate","inputRange","outputRange","renderMenuItem","isMainItem","onPressHandler","mainMenuItemAccessory","renderSubItemsInvisible","invisibleMenu","renderSubItems","sub","isSelected","dividerElement","prevState","mainItem","invisibleSubs","SubMenu","MenuService","tempIndex","MenuComponent","isDividerAbsent","areThereSubItems","setIndexes","ItemSeparatorComponent","Menu","DrawerComponent","renderMenu","showsVerticalScrollIndicator","bounces","menu","Drawer","DrawerHeaderFooter","SelectOptionComponent","onMultiSelectItemPress","renderDefaultItem","renderMultiSelectItem","multiSelectText","multiSelect","SelectOption","selectOptionRef","SelectGroupOptionComponent","itemPaddingHorizontal","getMainItemStatus","subItemsSelectedStatusArray","someSelected","some","everySelected","every","renderSubItem","option","strategy","returningOption","separators","renderSubItemsElements","renderMultiSelectMainElement","subItemsElements","subItem","itemStatus","renderDefaultMainElement","renderMainElement","mainElement","SelectGroupOption","SelectOptionsList","dropdownItem","SelectionStrategy","selectedOption","verifyData","option1","option2","hasOptionSubItems","subTexts","MultiSelectStrategy","isArray","selectOptionWithSubOptions","selectDefaultOption","compareOptions","removeOption","enabledItems","isSelectedOptionExist","findIndex","processData","Error","SingleSelectStrategy","MEASURED_CONTROL_TAG","SelectComponent","optionsListWidth","setVisibility","onItemSelect","onControlMeasure","createSelectionStrategy","handleVisibleChange","startIconAnimation","textStyles","placeholderStyles","optionsListStyles","labelStyle","outlineStyles","placeholderColor","placeholderFontFamily","placeholderFontSize","placeholderFontWeight","placeholderLineHeight","placeholderMarginHorizontal","outline","padding","outlinePadding","optionsList","optionsListMaxHeight","optionsListBorderRadius","optionsListBorderColor","optionsListBorderWidth","label","labelColor","marginBottom","labelMarginBottom","renderLabelElement","renderDefaultIconElement","valueStyle","placeholderStyle","getPlaceholder","numberOfLines","ellipsizeMode","renderOptionsListElement","additionalOptionsListStyle","renderControlElement","controlStyle","optionsListElement","labelElement","controlElement","flexGrow","outlineContainer","Select","selectRef","isVisible","throwPackNotFoundError","throwIconNotFoundError","pack","IconRegistryService","packs","registerIconPack","has","defaultPack","iconsPack","getPackOrThrow","getDefaultPack","getIconFromPack","getIconPack","shouldThrow","stopAnimation","toProps","getIconAnimation","animationConfig","release","registeredIcon","getIcon","toReactElement","IconRegistry","findDefaultIconPack","requestedPackIndex","registerIcons","defaultIconPack","register","setDefaultIconPack","defaultIcons","FlexStyleProps","InputComponent","textInputRef","focus","blur","isFocused","clear","onTextFieldFocus","onTextFieldBlur","onIconPress","allOf","allWithRest","inputContainerStyle","labelFontSize","labelLineHeight","labelFontWeight","captionMarginTop","captionColor","captionFontSize","captionLineHeight","captionFontWeight","captionIconWidth","captionIconHeight","captionIconMarginRight","captionIconTintColor","inputContainer","captionContainer","marginTop","captionIcon","marginRight","captionLabel","renderIconTouchableElement","TouchableWithoutFeedback","renderCaptionElement","captionTextStyle","caption","renderCaptionIconElement","captionElement","captionIconElement","TextInput","placeholderTextColor","editable","flexShrink","flexBasis","Input","inputRef","LayoutComponent","Layout","initialWindowSize","initialContentSize","baseModalTestId","Modal","contentSize","getAbsoluteRelatedStyle","windowSize","renderBaseModal","absoluteRelatedStyle","testID","backdropStyle","modal","backdrop","renderMeasureNode","measureStyledModal","hiddenModal","OverflowMenuComponent","renderPopoverContentElement","initialNumToRender","contentElement","OverflowMenu","RadioComponent","Radio","radioRef","RadioGroupComponent","onRadioChange","renderRadioElement","renderRadioElements","radioElements","RadioGroup","PI2","OFFSET_MIN","PI","OFFSET_MAX","BaseBezierEasing","bezier","StartArcEasing","progress","EndArcEasing","SpinnerAnimation","arcSize","createFrameRange","createContainerInterpolation","animationValue","toDegValue","createArcInterpolation","createArcInterpolationInputRange","createArcInterpolationOutputRange","animationFrames","boundedProgress","toStyleTransformProp","containerInterpolation","startArcInterpolation","endArcInterpolation","SpinnerComponent","containerSize","arc","renderArcElement","absolute","noOverflow","animating","animatingChanged","Spinner","TabBarComponent","tabIndicatorRef","indicatorBorderRadius","isTabSelected","TabBar","TabViewChildren","tabs","TabView","tabBarRef","onBarSelect","onPagerOffsetChange","tabBar","tabCount","onPagerSelect","tab","toArray","tabBarStyle","TabComponent","Tab","tabRef","ToggleComponent","onStartShouldSetPanResponder","onStartShouldSetPanResponderCapture","onMoveShouldSetPanResponderCapture","onPanResponderTerminationRequest","onPanResponderGrant","thumbTranslateAnimationActive","stopAnimations","animateThumbWidth","thumbWidth","animateEllipseScale","e","gestureState","toggle","thumbHeight","thumbBorderRadius","thumbBackgroundColor","interpolatedBackgroundColor","getInterpolatedColor","thumbScale","animateThumbScale","toggleContainer","ellipseContainer","ellipse","ellipseScaleAnimation","thumb","thumbWidthAnimation","elevation","thumbTranslateAnimation","animateThumbTranslate","startColor","endColor","Toggle","toggleRef","TooltipComponent","childrenStyle","contentChildren","Tooltip","TopNavigationComponent","getAlignmentDependentStyles","containerCentered","titleContainer","titleContainerCentered","rightControlsContainer","rightControlsContainerStart","titleTextAlign","subtitleTextAlign","subtitleFontFamily","subtitleFontSize","subtitleLineHeight","subtitleFontWeight","subtitleColor","subtitle","leftControlContainer","leftControl","rightControls","subtitleStyle","renderActionElements","alignmentStyles","subtitleElement","leftControlElement","rightControlElements","TopNavigation","TopNavigationActionComponent","touchableProps","TopNavigationAction","topNavigationActionRef","AvatarShowcase","uri","avatarShowcase","sections","ThemesIcon","SettingsIcon","TrashIcon","ShowcaseSettings","themesMenuVisible","settingsMenuVisible","createSettingMenuItem","setting","createThemeMenuItem","onThemeSelect","onResetButtonPress","onSettingSelect","createThemesMenuItems","createSettingsMenuItems","toggleThemesMenu","toggleSettingsMenu","toggleRtl","Updates","ShowcaseItem","renderElement","showcaseElement","titleLabel","ShowcaseSection","section","ShowcaseComponent","Showcase","renderShowcaseElement","renderSectionElement","renderSectionItem","showcase","listItemElement","borderStyle","itemBorder","themes","toggleTheme","ShowcaseContainer","settings","onReset","AvatarContainer","BottomNavigationShowcase","bottomNavigationShowcase","bottomNavigationSettings","propertyName","BottomNavigationContainer","ButtonShowcase","IconElement","buttonShowcase","buttonSettings","ButtonContainer","ButtonGroupShowcase","buttonGroupShowcase","buttonGroupSettings","ButtonGroupContainer","CheckBoxShowcaseComponent","CheckBoxShowcase","checkboxShowcase","checkboxSettings","CheckBoxContainer","DrawerShowcase","drawerShowcase","DrawerContainer","iconShowcase","iconSettings","DEFAULT_ICON","IconShowcase","iconName","animationTimeout","clearTimeout","autoCapitalize","autoCorrect","onChangeText","IconContainer","CalendarShowcase","withFooter","footerContainer","footerDivider","moment","_rollupMoment","_moment","MomentDateService","setLocale","setMomentLocaleData","clone","add","months","years","utc","localeData","defaultFormat","firstDayOfWeek","endOf","startOf","isValid","momentLocaleData","longDateFormat","monthsShort","weekdaysShort","weekdays","rollupParse","dateFnsParse","formatDate","rollupFormat","dateFnsFormat","DateFnsService","formatOptions","parseDate","now","defaultCalendar","calendarShowcase","CalendarCustomItem","todayTitle","CalendarContainer","InputShowcase","inputShowcase","inputSettings","InputContainer","LayoutShowcase","layoutShowcase","layoutSettings","LayoutContainer","ListShowcase","ListItemShowcase","ListItemIconShowcase","StarIcon","ListItemAccessoryShowcase","AccessoryElement","ListItemIconAccessoryShowcase","listShowcase","renderListItem","listSettings","renderIconListItem","renderAccessoryListItem","renderIconAccessoryListItem","ListContainer","MenuShowcase","menuShowcase","menuSettings","MenuContainer","PopoverShowcase","popoverShowcase","popoverSettings","PopoverContainer","RadioShowcaseComponent","RadioShowcase","radioShowcase","radioSettings","RadioContainer","RadioGroupShowcase","radioGroupShowcase","RadioGroupContainer","SpinnerShowcase","WhiteSpinner","DefaultSpinner","blackSpinnerContainer","spinnerShowcase","spinnerSettings","SpinnerContainer","TabViewShowcase","tabViewShowcase","TabViewContainer","TooltipShowcase","tooltipVisible","tooltipShowcase","tooltipSettings","TooltipContainer","TextShowcase","textShowcase","textSettings","TextContainer","ToggleShowcaseComponent","ToggleShowcase","titleSection","stateSection","toggleShowcase","toggleSettings","ToggleContainer","RightControlIcon","rightControlsTopNavigation","leftControlTopNavigation","rightControlsSection","leftControlSection","subtitleSection","topNavigationShowcase","topNavigationSettings","TopNavigationShowcase","TopNavigationContainer","OverflowMenuShowcase","menuVisible","selectedMenuIndex","withIconMenuItems","withDisabledItemMenuItems","defaultOverflowMenu","withIcons","withDisabledItem","defaultSection","overflowMenuShowcase","overflowMenuSettings","OverflowMenuContainer","SampleComponent","passwordVisible","onPasswordIconPress","renderPasswordIcon","profileImage","isDark","setTheme","level","secureTextEntry","Sample","cardContainer","cardHeader","themeToggleContainer","themeText","welcomeContainer","formContainer","formInput","formInputBox","signInButton","SampleContainer","nextTheme","ModalShowcase","modalVisible","customModalPosition","customStyledModal","customStyledModalBackdrop","customStyledSection","customModalBackdropAllowed","customModalBackdropNotAllowed","closeOnBackdrop","customBackdropAllowingSection","modalShowcase","ModalContainer","SelectShowcaseComponent","preselectedItem","dropdown","SelectShowcase","defaultSelectOption","withGroupsSelectOption","defaultSelect","disabledSelect","multiSelectSelect","multiSelectSection","groupSelect","withGroupsSection","withIconSelect","withIconSection","withLabelSelect","withCustomPlaceholderSelect","customTextsSection","preselectedReference","preselectedReferenceMultiSelect","preselectedReferenceSection","preselectedInline","preselectedInlineMultiSelect","preselectedInlineSection","selectShowcase","selectSettings","SelectContainer","DatepickerShowcase","RangeDatepickerShowcase","datepicker","DatepickerContainer","showcaseContainer","RangeCalendarShowcase","RangeCalendarContainer","CardShowcase","CardBodyContent","EvaCardHeader","CardFooter","bodyText","headerTextContainer","headerText","headerImage","footerControl","defaultCard","evaHeaderCard","evaHeaderSection","customHeaderCard","CustomCardHeader","customHeaderSection","footerCard","footerSection","headerFooterCard","headerFooterSection","cardShowcase","cardSettings","CardContainer","routes","HomeScreen","onItemPressMobile","route","renderWebListItem","routeName","renderMobileListItem","Platform","web","AvatarSimpleUsageShowcase","AvatarRemoteImagesShowcase","AvatarSizeShowcase","AvatarShapeShowcase","AvatarInlineStylingShowcase","avatar","BottomNavigationInlineStylingShowcase","bottomNavigation","BottomNavigationSimpleUsageShowcase","BottomNavigationTabInlineStylingShowcase","tabTitle","BottomNavigationTabSimpleUsageShowcase","DashboardIcon","BottomNavigationTabWithExternalSourceIconShowcase","BottomNavigationTabWithIconShowcase","BottomNavigationWithIconsShowcase","BottomNavigationWithoutIndicatorShowcase","ButtonAppearancesShowcase","ButtonGhostShowcase","ButtonOutlineShowcase","ButtonWithIconShowcase","ButtonSimpleUsageShowcase","ButtonSizeShowcase","ButtonStatusShowcase","ButtonGroupAppearanceShowcase","buttonGroup","ButtonGroupInlineStylingShowcase","margin","ButtonGroupSimpleUsageShowcase","ButtonGroupSizeShowcase","ButtonGroupStatusShowcase","CalendarBoundingMonthShowcase","CalendarBoundsShowcase","CalendarCustomDayShowcase","dayContainer","CalendarCustomLocaleShowcase","CalendarFilterShowcase","CalendarMomentShowcase","CalendarSimpleUsageShowcase","CalendarStartDayOfWeekShowcase","RangeCalendarSimpleUsageShowcase","CustomHeader","CardCustomHeaderShowcase","card","Header","CardEvaHeaderShowcase","Footer","CardFooterShowcase","CardHeaderFooterShowcase","CardSimpleUsageShowcase","CardStatusesShowcase","CheckboxSimpleUsageShowcase","checked1","checkbox","CheckboxStatusShowcase","primaryChecked","successChecked","infoChecked","warningChecked","dangerChecked","basicChecked","CheckboxTextShowcase","CheckboxInlineStylingShowcase","CheckboxIndeterminateShowcase","mainCheckboxChecked","mainCheckboxIndeterminate","checkbox1Checked","checkbox2Checked","checkbox3Checked","someChecked","everyChecked","leftSpace","DatepickerBoundingMonthShowcase","DatepickerCustomDayShowcase","DatepickerFilterShowcase","DatepickerCustomLocaleShowcase","DatepickerMomentShowcase","DatepickerSimpleUsageShowcase","CalendarIcon","DatepickerWithIconShowcase","RangeDatepickerSimpleUsageShowcase","DrawerSimpleUsageShowcase","MessagesIcon","DrawerWithIconsShowcase","PersonIcon","DrawerHeaderShowcase","DrawerHeaderFooterInlineStylingShowcase","drawerHeader","drawerHeaderTitle","drawerHeaderDescription","ProfileIcon","DrawerHeaderFooterSimpleUsageShowcase","LogoutIcon","LogoutButton","DrawerHeaderFooterWithAccessoryShowcase","DrawerHeaderFooterWithExternalSourceIconShowcase","DrawerFooterShowcase","DrawerCustomHeaderShowcase","NotificationBadge","DrawerNotificationBadgeItemShowcase","badge","IconSimpleUsageShowcase","IconWithinButtonShowcase","liked","IconWithinInputShowcase","RemoteBulbIcon","IconExternalSourceShowcase","IconAnimationShowcase","IconAnimationInfiniteShowcase","IconInlineStylingShowcase","InputInlineStylingShowcase","inputValue","input","inputText","inputLabel","inputCaption","InputSimpleUsageShowcase","InputSizeShowcase","smallValue","mediumValue","largeValue","InputStatusShowcase","primaryValue","successValue","infoValue","warningValue","dangerValue","InputWithCaptionShowcase","isValidInputValue","InputWithIconShowcase","InputWithExternalSourceIconShowcase","InputWithLabelShowcase","LayoutSimpleUsageShowcase","LayoutLevelShowcase","LayoutInlineStylingShowcase","additionalContainerStyle","SAMPLE_DATA","ListCompositeItemShowcase","renderItemAccessory","renderItemIcon","list","ListInlineStylingShowcase","contentContainerStyle","ListItemInlineStylingShowcase","listItem","listItemTitle","listItemDescription","ListItemSimpleUsageShowcase","ListItemWithAccessoryShowcase","RemoteStarIcon","ListItemWithExternalIconShowcase","ListItemWithIconShowcase","ListSimpleUsageShowcase","MenuSimpleUsageShowcase","MenuWithSubMenuShowcase","MenuAppearanceShowcase","MenuWithIconsShowcase","MenuInlineStylingShowcase","menuItemTitle","OverflowMenuWithoutDividerShowcase","OverflowMenuExternalSourceIconsShowcase","OverflowMenuSimpleUsageShowcase","OverflowMenuWithDisabledItemsShowcase","OverflowMenuWithIconsShowcase","PopoverSimpleUsageShowcase","popoverContent","PopoverPlacementShowcase","RadioSimpleUsageShowcase","radio","RadioWithTextShowcase","RadioStatusShowcase","RadioInlineStylingShowcase","radioText","RadioGroupSimpleUsageShowcase","SelectSimpleUsageShowcase","SelectMultiSelectShowcase","SelectWithGroupsShowcase","SelectCustomIconShowcase","SelectStatusShowcase","selectedOptionPrimary","selectedOptionSuccess","selectedOptionInfo","selectedOptionDanger","selectedOptionWarning","selectedOptionBasic","SelectInlineStylingShowcase","SelectMultiPreselectedInlineShowcase","SelectMultiPreselectedReferenceShowcase","SpinnerDataLoadingShowcase","loading","SpinnerSimpleUsageShowcase","SpinnerSizesShowcase","SpinnerStatusesShowcase","TabBarSimpleUsageShowcase","TabInlineStylingShowcase","TabSimpleUsageShowcase","TabViewInlineStylingShowcase","tabView","tabViewIndicator","TabViewLazyLoadingShowcase","TabViewSimpleUsageShowcase","TabWithExternalSourceIconShowcase","TabWithIconShowcase","TextAppearancesShowcase","TextCategoriesShowcase","TextInlineStylingShowcase","TextSimpleUsageShowcase","TextStatusesShowcase","ToggleSimpleUsageShowcase","ToggleStatusShowcase","ToggleSizeShowcase","tinyChecked","smallChecked","mediumChecked","largeChecked","giantChecked","ToggleWithTextShowcase","ToggleInlineStylingShowcase","TooltipInlineStylingShowcase","tooltipText","TooltipSimpleUsageShowcase","InfoIcon","TooltipWithExternalSourceIconShowcase","TooltipWithIconShowcase","TooltipPlacementShowcase","BackIcon","TopNavigationActionExternalSourceIconShowcase","EditIcon","TopNavigationActionInlineStylingShowcase","action","MenuIcon","BackAction","EditAction","MenuAction","TopNavigationActionsShowcase","onBackPress","TopNavigationActionSimpleUsageShowcase","TopNavigationAlignmentsShowcase","TopNavigationInlineStylingShowcase","topNavigation","TopNavigationSimpleUsageShowcase","TopNavigationWithMenuShowcase","ViewPagerInlineStylingShowcase","ViewPagerLazyLoadingShowcase","ViewPagerSimpleUsageShowcase","DrawerNavigation","selectedRoute","drawerItems","safeArea","ColorPaletteIcon","sharingHeightContainer","setMenuVisible","themeContext","onThemesButtonPress","postLayoutChangeEvent","layoutChangeMessage","selectedTheme","optionsContainer","MenuNavigator","createStackNavigator","initialRouteName","headerMode","ios","android","DrawerNavigator","createDrawerNavigator","contentComponent","Router","createBrowserApp","history","createAppContainer","AntDesignIconsPack","AntDesignIcon","IconProvider","FeatherIconsPack","FeatherIcon","FontAwesomeIconsPack","FontAwesomeIcon","MaterialIconsPack","MaterialIcon","MaterialCommunityIcon","App","currentTheme","webpackContext","req","webpackContextResolve","__webpack_require__","o","code","resolve","module","exports"],"mappings":"sOAAaA,EAAUC,EAAQ,KAClBC,EAAQD,EAAQ,KAChBE,EAAOF,EAAQ,K,0DCKfG,EAAb,WAEE,WAAoBC,GAAyB,iBAAzBA,UAFtB,mDAKwBC,GACpB,IAAMC,EAAsBC,KAAKH,QAGzBI,EAA4BH,EAA5BG,UAAcC,EAJ4B,IAIdJ,EAJc,eAMlD,OACE,kBAACC,EAAD,KACEI,KAAMF,GACFC,QAdZ,KCHaE,EAAmC,CAC9CC,KAAM,MACNC,MCAO,IAAIC,MAAM,GAAI,CACnBC,IADmB,SACfC,EAAYJ,GACd,OAAO,IAAIT,EAAQc,yBAAeL,Q,oDCAlCM,EAA2B,IAmBjC,SAASC,EAAeP,EAAcQ,GACpC,IAAMC,EAAaD,EAAMR,GAEzB,OAAIU,EAAeD,GAGVF,EAFkBI,EAAWF,GAEJD,GAG3BC,EAMT,SAASC,EAAeD,GACtB,OAAO,GAAGA,GAAQG,WAAWN,GAM/B,SAASK,EAAWF,GAClB,OAAO,GAAGA,GAAQI,UAAU,G,8NCvCvB,SAASC,EAAkB3B,EAA0BqB,GAC1D,OAAOO,OAAOC,KAAK7B,GAAS8B,QAAO,SAACC,EAAgBC,GAClD,IAAMC,EAAoBjC,EAAQgC,GAElC,O,iVAAO,CAAP,GAAYD,EAAZ,OAAkBC,EDEf,SAAuBnB,EAAcQ,EAAkBa,GAC5D,OAAIX,EAAeV,GAGVO,EAFkBI,EAAWX,GAEJQ,IAAUa,EAGrCd,EAAeP,EAAMQ,IAAUa,ECTRC,CAAcF,EAAcZ,EAAOY,OAC9D,I,ijBCGL,IAQaG,EAAb,WAKE,WAAYvB,EAAcwB,GAOxB,GAPgD,YAChD7B,KAAKK,KAAOA,EAEZL,KAAK8B,KAAO9B,KAAK+B,KAAKF,EAAQG,MAAM3B,IAAO,SAAC4B,GAC1C,OAAOA,EAAgBH,SAGpB9B,KAAK8B,KAAM,CACd,IAAMI,EAAkB,sDAElBC,EAAkB,CAAC,KAClBnC,KAAKK,KADY,+BAEtB,oFAFsB,+BAGD6B,EAHC,+DAItB,6FAJsB,+BAKDA,EALC,2CAMtBE,KAAK,MAEPC,QAAQC,MAAMH,IAvBpB,yDAgCI,OAAO,GAAEI,WAJkBvC,KAAKwC,wBACYxC,KAAKyC,qBAGjD,GAF2CzC,KAAK0C,sBA9BpD,sCAmC2CC,EACAd,EACAe,GAEvC,IAAMC,EAAuB7C,KAAK8C,aAAaH,EAAQC,GAEjDG,EAAoC/C,KAAKgD,yBAAyBnB,EAAQG,MAAOa,GAEvF,IAAKE,EAAkB,CACrB,IAEMZ,EAAkB,CACnBnC,KAAKK,KADc,yEAEoB4C,KAAKC,UAAUL,EAAW,KAAM,GAFpD,8FAGqB7C,KAAKK,KAAK8C,cAH/B,QAItBf,KAAK,MAIP,OAFAC,QAAQe,KAAKjB,GAENnC,KAAKqD,gBAAL,KAA0BV,EAA1B,GAAqC3C,KAAKsD,sBAAwBzB,EAASe,GAGpF,IAAMpD,EAAUQ,KAAKuD,oBAAoBR,GAEzC,OAAO,KACFJ,EADL,CAEE9B,MAAOgB,EAAQhB,MACf2C,YAAarC,EAAkB3B,EAASqC,EAAQhB,WA9DtD,+CAkEmEmB,EACAyB,GAAmC,IAAD,OAEjG,OAAOzD,KAAK+B,KAAKC,EAAMhC,KAAKK,OAAO,SAACqD,GAClC,IAAMC,EAAsBvC,OAAOC,KAAKqC,EAAgBE,QAClDC,EAAgB,EAAKC,mBAAmBL,EAAME,GAEpD,OAAOD,EAAgBE,OAAOC,QAzEpC,0CA6E8BrE,GAA4C,IAAD,OAC/DuE,EAA8B,GASpC,GAPA3C,OAAOC,KAAK7B,GAASwE,SAAQ,SAACC,GACvB7C,OAAOC,KAAK,EAAKS,KAAKoC,YAAYC,SAASF,KAC9CF,EAAkBK,KAAKH,UAChBzE,EAAQyE,OAIc,IAA7BF,EAAkBM,OAAc,CAClC,IAEMlC,EAAkB,CACnBnC,KAAKK,KADc,kDAEH0D,EACnB,+CAHsB,0HAKtB3B,KAAK,MAEPC,QAAQe,KAAKjB,GAGf,OAAO3C,IApGX,mCAuGuDM,EAAU8C,GAC7D,IAAM0B,EAA2BtE,KAAKuE,mBAAmBvE,KAAK8B,KAAMhC,GAC9D0E,EAAyBxE,KAAKyE,iBAAiBzE,KAAK8B,KAAMhC,GAE1D4E,EAAqBtD,OAAOC,KAAKiD,GAAcK,KAAI,SAACC,GACxD,OAAON,EAAaM,MAGhBC,EAAmBzD,OAAOC,KAAKmD,GAErC,MAAO,CACLjC,WAAYzC,EAAMyC,WAClBmC,SAAUA,EACVG,OAAO,GAAD,WAAMA,GAAN,IAAiBjC,OApH7B,6CAwH0C,IAAD,OAC/BkC,EAAoB1D,OAAOC,KAAKrB,KAAK8B,KAAKiD,aAAaC,QAAO,SAACzC,GACnE,OAAqD,IAA9C,EAAKT,KAAKiD,YAAYxC,GAAY0C,WAG3C,OAAOH,EAAQA,EAAQT,OAAS,KA7HpC,2CAiII,OAAOrE,KAAKkF,gBAAgBlF,KAAK8B,KAAKqD,eAAe,SAACT,EAAUU,GAC9D,OAAOhE,OAAOC,KAAKqD,EAASU,IAAQC,MAAK,SAACT,GAExC,OAA4C,IAArCF,EAASU,GAAOR,GAASK,gBApIxC,yCA0II,OAAOjF,KAAKkF,gBAAgBlF,KAAK8B,KAAK+C,QAAQ,SAACA,EAAQS,GACrD,IAAMC,GAA+C,IAA1BV,EAAOS,GAAOL,QAEzC,OAAOM,QAAwBC,OA7IrC,yCAiJ6D1D,EAAuBhC,GAChF,OAAOE,KAAKkF,gBAAgBpF,GAAO,SAAC2F,EAAMC,GAGxC,OAF2BtE,OAAOC,KAAKS,EAAKqD,eAAehB,SAASuB,GAEjDD,EAAEC,QAAQF,OArJnC,uCAyJ2D1D,EAAuBhC,GAC9E,OAAOE,KAAKkF,gBAAgBpF,GAAO,SAAC2F,EAAMC,GACxC,IAAMC,EAAmBvE,OAAOC,KAAKS,EAAK+C,QAAQV,SAASuB,GACrDE,GAAkC,IAAZH,EAAEC,GAE9B,OAAOC,GAAWC,OA9JxB,sCAyK4C9E,EAAU+E,GAClD,OAAOzE,OAAOC,KAAKP,GAAOQ,QAAO,SAACC,EAAiB0C,GACjD,IAAM6B,EAAiBD,EAAU/E,EAAOmD,GAExC,OAAO6B,EAAS,KACXvE,EADW,OAEb0C,EAAM6B,IACLvE,IACH,MAjLP,yCAmM6BkC,EAAiBd,GAAuC,IAAD,OAC1EkB,EAAe,CACnBJ,EAAKlB,YADc,WAEhBkB,EAAKiB,UAFW,IAGhBjB,EAAKoB,SASV,OAN0BlC,EAAOqC,QAAO,SAACf,GACvC,IAAM8B,EAAqB9B,EAAI+B,MAnNG,KAqNlC,OAAO,EAAKC,cAAcpC,EAAOkC,MAGpB,KAhNnB,oCAyNwBG,EAAeC,GACnC,OAAID,EAAI7B,SAAW8B,EAAI9B,QAIhB6B,EAAI5E,QAAO,SAACC,EAAcC,GAAf,OAA4CD,GAAO4E,EAAIhC,SAAS3C,MAAU,KA9NhG,2BA0OqBV,EAAsBsF,EAA0B1E,GACjE,OAAIZ,EACKsF,EAAQtF,GAGVY,MA/OX,KCtBa2E,EAAgDC,IAAMC,cAF9B,ICQxBC,EAAyCF,IAAMC,cAF5B,I,8NCiHzB,IAAME,EAAS,SAAmBC,GAGvC,IAAKA,EAAUC,oBAEb,OADAtE,QAAQe,KAAK,8DACN,KAL6F,IAchGwD,EAdgG,mLAgB7FtB,MAAe,CACpB1C,YAAa,IAjBqF,EAoB5FiE,MAAgB,EApB4E,EA0B5FC,OAAS,SAACjF,GAGhB,EAAKkF,QAAU,IAAInF,EAAqB8E,EAAUC,oBAAqB9E,GACvE,EAAKmF,aAAe,EAAKD,QAAQzD,qBAEjC,EAAKuD,MAAO,GAhCsF,EAmC5FI,WAAa,SAACrE,GACpB,EAAKsE,SAAS,CAAEtE,iBApCkF,EAuC5FS,gBAAkB,SAACV,EAAWd,GAAyC,IACrEe,EAAgB,EAAK0C,MAArB1C,YAEF9C,E,iVAAoB,IAAQ,EAAKkH,aAAb,GAA8BrE,GAExD,OAAO,EAAKoE,QAAQ1D,gBAAgBvD,EAAO+B,EAASe,IA5C8C,EA+C5FuE,qBAAuB,SAACtF,GACzB,EAAKgF,MACR,EAAKC,OAAOjF,GAF0D,MAKjC,EAAK/B,MAApCsH,EALgE,EAKhEA,aAAiBlH,EAL+C,wBAMlEJ,EAAkC,EAAKuD,gBAAgBnD,EAAgB2B,GAE7E,OACE,kBAAC6E,EAAD,OACM5G,EADN,CAEEuH,IAAKD,EACLE,SAAU,EAAKL,eA3D+E,wDAiElG,IAAMM,EAAgBvH,KAAKmH,qBAE3B,OACE,kBAACd,EAAemB,SAAhB,MAA0B,SAAC5D,GAAD,OACxB,kBAAC4C,EAAagB,SAAd,MAAwB,SAAC3G,GAAD,OACtB,kBAAC0G,EAAD,CAAevF,MAAO4B,EAAQ/C,MAAOA,cAtEuD,GAchFyF,IAAMI,WA0EtBe,EAAkBnB,IAAMoB,YAXN,SAAC5H,EAAsBuH,GAC7C,OAGE,kBAACT,EAAD,OACM9G,EADN,CAEEsH,aAAcC,QAapB,OANAI,EAAgBE,YAAcjB,EAAUiB,aAAejB,EAAUrG,KAGjEuH,IAAqBH,EAAiBf,GAG/Be,G,ijBCnIF,IAAMI,EAAa,SAAmBnB,EACAoB,GAAkE,IAQvGlB,EARsG,mLAUlGmB,mBAAqB,SAAC/F,EAAwBnB,GACpD,OAAOO,OAAOC,KAAKW,GAAOV,QAAO,SAACC,EAAgBC,GAChD,OAAO,KAAKD,EAAZ,OAAkBC,EAAUL,EAAkBa,EAAMR,GAAUX,OAC7D,KAbqG,EAgBlGmH,gBAAkB,SAACrF,EAAWd,GACpC,IAAMG,EAAyB8F,EAAeA,EAAajG,EAAQhB,OAAS,GAE5E,OAAO,KACF8B,EADL,CAEE9B,MAAOgB,EAAQhB,MACf2C,YAAa,EAAKuE,mBAAmB/F,EAAOH,EAAQhB,UAtBkD,EA0BlGsG,qBAAuB,SAACtF,GAAsC,IAAD,EAC5B,EAAK/B,MAApCsH,EAD2D,EAC3DA,aAAiBlH,EAD0C,wBAE7DJ,EAAsB,EAAKkI,gBAAgB9H,EAAgB2B,GAEjE,OACE,kBAAC6E,EAAD,OACM5G,EADN,CAEEuH,IAAKD,MAjC+F,wDAuCxG,IAAMa,EAAgBjI,KAAKmH,qBAE3B,OACE,kBAACX,EAAagB,SAAd,MAAwB,SAAC3G,GAAD,OACtB,kBAACoH,EAAD,CAAepH,MAAOA,WA3C8E,GAQtFyF,IAAMI,WAoDtBwB,EAAkB5B,IAAMoB,YAXN,SAAC5H,EAAsBuH,GAC7C,OAGE,kBAACT,EAAD,OACM9G,EADN,CAEEsH,aAAcC,QAapB,OANAa,EAAgBP,YAAcjB,EAAUiB,aAAejB,EAAUrG,KAGjEuH,IAAqBM,EAAiBxB,GAG/BwB,G,gPCpJF,SAASnG,EAAWjB,EAAsBsF,GAC/C,GAAItF,EACF,OAAOsF,EAAQtF,GA8CZ,SAASqH,EAASC,GACvB,OAAOA,EAAM9G,QAAO,SAACmE,EAAG4C,GAMtB,OALI5C,GAAKA,EAAE6C,eAAeD,EAAE,IAC1B5C,EAAE4C,EAAE,I,iVAAJ,IAAe5C,EAAE4C,EAAE,IAAnB,GAA2BA,EAAE,IAE7B5C,EAAE4C,EAAE,IAAMA,EAAE,GAEP5C,IACN,ICvDE,SAAS8C,GAA8B/I,EACAgJ,GAI5C,OAAOzG,EAFsC0G,GAAoBjJ,EAASgJ,IAE5C,SAAC1H,GAAuC,IAC5DiE,EAAgBjE,EAAMgB,KAAtBiD,YAER,OAAO3D,OAAOC,KAAK0D,GAAaM,MAAK,SAAC9C,GACpC,OAA2C,IAApCwC,EAAYxC,GAAY0C,cAqB9B,SAASyD,GAAyBlJ,EACAgJ,GAIvC,OAAOzG,EAFsC0G,GAAoBjJ,EAASgJ,IAE5C,SAAC1H,GAAuC,IAC5D+D,EAAW/D,EAAMgB,KAAjB+C,OAER,OAAOzD,OAAOC,KAAKwD,GAAQQ,MAAK,SAACC,GAC/B,OAAiC,IAA1BT,EAAOS,GAAOL,cA+FpB,SAASwD,GAAoBjJ,EACAgJ,GAElC,OAAOhJ,EAAQgJ,GAGjB,SAASG,GAAcnJ,EACAgJ,EACAjG,GAIrB,OAAOR,EAFsC0G,GAAoBjJ,EAASgJ,IAE5C,SAAC1H,GAC7B,OAAOA,EAAMiE,YAAYxC,MAI7B,SAASqG,GAAqBpJ,EACAgJ,EACAjG,GAI5B,OAAOR,EAFyC4G,GAAcnJ,EAASgJ,EAAWjG,IAEpD,SAACzB,GAC7B,OAAOA,EAAMtB,WAIjB,SAASqJ,GAAkBrJ,EACAgJ,EACAjG,EACAqC,GAIzB,OAAO7C,EAFyC4G,GAAcnJ,EAASgJ,EAAWjG,IAEpD,SAACzB,GAC7B,OAAOiB,EAAKjB,EAAMqE,eAAe,SAAC2D,GAMhC,OAAO/G,EAJWX,OAAOC,KAAKyH,GAAYzD,MAAK,SAACD,GAC9C,YAAsCI,IAA/BsD,EAAW1D,GAAOR,OAGJ,SAACmE,GACtB,OAAOD,EAAWC,GAAgBnE,YAM1C,SAASoE,GAAgBxJ,EAAsB8F,GAE7C,OAAOvD,EAAKvC,EAAQ8F,OAAO,SAACxE,GAC1B,OAAOA,EAAMwE,M,qjBC3KV,IAAM2D,GAA0B,IAkDhC,SAASC,GAAY1J,EACAgJ,EACAjG,GAG2C,IAF3CmC,EAE0C,uDAFrB,GACrBG,EAC0C,uDADvB,GACnBhE,EAA0C,uDAArB,GAEzCsI,EAsHD,SAA6B3J,EACAgJ,EACAjG,GAIlC,OAAO6G,GAAU,CAFiBb,GAA8B/I,EAASgJ,GAEpCjG,IA5HE8G,CAAoB7J,EAASgJ,EAAWjG,GACzE+G,EA8ID,SAA2B9J,EACAgJ,EACA9D,GAEhC,IAAM6E,ED7MD,SAAqC/J,EACAgJ,GAI1C,OAAOzG,EAFsC0G,GAAoBjJ,EAASgJ,IAE5C,SAAC1H,GAAyC,IAC9DqE,EAAkBrE,EAAMgB,KAAxBqD,cAER,OAAO/D,OAAOC,KAAK8D,GAAeR,KAAI,SAACS,GACrC,OAAOhE,OAAOC,KAAK8D,EAAcC,IAAQC,MAAK,SAACT,GAC7C,OAAiD,IAA1CO,EAAcC,GAAOR,GAASK,iBCmMTuE,CAA4BhK,EAASgJ,GAEvE,OAAOY,GAAU,GAAD,WAAKG,GAAL,IAAyB7E,KApJJ+E,CAAkBjK,EAASgJ,EAAW9D,GACrEgF,EA6KD,SAAyBlK,EACAgJ,EACA3D,EACA8E,GACwD,IAAxDC,EAAuD,uDAAnCX,GAI5CY,EAAuBT,GAAU,CAFVV,GAAyBlJ,EAASgJ,IAEzB,WAAmB3D,KACzD,GAA0B,IAAtBgF,EAAWxF,OACb,OAAOwF,EAKT,OAOF,SAASC,EAAsBjF,EAAkB+E,GAAqD,IAAlCG,EAAiC,uDAAd,GACrF,GAAsB,IAAlBlF,EAAOR,OACT,OAAO0F,EAGT,IAAMC,EAAOnF,EAAOvD,QAAO,SAACC,EAAeC,GACzC,IAAMyI,EAAW1I,EAAIoD,KAAI,SAAA7D,GAAK,OAAIA,EAAMoJ,OAAON,EAAWpI,MAC1D,MAAM,GAAN,WAAWD,GAAX,IAAmB0I,MAClB,CAACpF,EAAOsF,UAEX,OAAOL,EAAsBjF,EAAQ+E,EAAT,cAAwBG,GAAxB,IAAmCC,KAnB5CF,CAAsB,IAAID,GAAaD,EAAW,IAEnDQ,MAAK,SAAClE,EAAaC,GAGnC,OAFkBkE,GAAwBnE,EAAK0D,EAAWD,GACxCU,GAAwBlE,EAAKyD,EAAWD,MA9LzBW,CAAgB9K,EAASgJ,EAAW3D,GAAQ,SAACS,GAC9E,OAAOT,EAAO0F,QAAQjF,MAGlBkF,EAA0ClJ,GAAO6H,GAAsB,SAAAsB,GAC3E,ODeG,SAAuCjL,EACAgJ,EACAjG,GAI5C,OAAOR,EAFgC6G,GAAqBpJ,EAASgJ,EAAWjG,IAEjD,SAACzB,GACDA,EAArBwE,MAER,OAH2E,IAC9CxE,EAD8C,cCrBpE4J,CAA8BlL,EAASgJ,EAAWiC,MAGrDE,EAAuCrJ,GAAOgI,GAAoB,SAAA1E,GACtE,OAAOtD,GAAO6H,GAAsB,SAAAsB,GAClC,ODoCC,SAAoCjL,EACAgJ,EACAjG,EACAqC,GAIzC,OAAO7C,EAF6B8G,GAAkBrJ,EAASgJ,EAAWjG,EAAYqC,IAE1D,SAAC9D,GACEA,EAArBwE,MAER,OAHwE,IAC3CxE,EAD2C,cC3C/D8J,CAA2BpL,EAASgJ,EAAWiC,EAAM7F,SAI1DiG,EAAqCvJ,GAAOoI,GAAkB,SAAApE,GAWlE,OAAO,MAVwBhE,GAAO6H,GAAsB,SAAAsB,GAC1D,ODRC,SAAmCjL,EACAgJ,EACAjG,EACA+C,GAIxC,OAAOvD,EAFgC6G,GAAqBpJ,EAASgJ,EAAWjG,IAEjD,SAACzB,GAC9B,OAAOkI,GAAgBlI,EAAOwE,MCArBwF,CAA0BtL,EAASgJ,EAAWiC,EAAMnF,MAS7D,GANkDhE,GAAOgI,GAAoB,SAAA1E,GAC3E,OAAOtD,GAAO6H,GAAsB,SAAAsB,GAClC,ODYD,SAAgCjL,EACAgJ,EACAjG,EACAqC,EACAU,GAIrC,OAAOvD,EAF6B8G,GAAkBrJ,EAASgJ,EAAWjG,EAAYqC,IAE1D,SAAC9D,GAC3B,OAAOkI,GAAgBlI,EAAOwE,MCrBnByF,CAAuBvL,EAASgJ,EAAWiC,EAAM7F,EAASU,aAavE,OA8KF,SAA0B9F,EAA+BqB,GACvD,OAAOO,OAAOC,KAAK7B,GAAS8B,QAAO,SAACC,EAA2ByI,GAC7D,IAAMgB,EAA8BxL,EAAQwK,GACtCiB,EAA2BpK,EAAMmK,IAAiBA,EAExD,OAAO,MAAKzJ,EAAZ,OAAkByI,EAAOiB,MACxB,IApLIC,CANsC,MACxCV,EADwC,GAExCG,EAFwC,GAGxCE,GAGsChK,GAuL7C,SAASwJ,GAAwB/E,EACAsE,EACAD,GAE/B,IAAMwB,EAAQ7F,EAAMU,MAAM4D,GAC1B,OAAOuB,EAAM7J,QAAO,SAACC,EAAaC,GAChC,OAAOD,EAAMoI,EAAYnI,GAAW2J,EAAM9G,SACzC,GAiCL,SAAS+G,GAAiB5L,EACAgJ,EACAvE,EACA1B,GAGqD,IAFrDqC,EAEoD,uDAFlC,GAClBU,EACoD,uDADpC,GAChBzE,EAAoD,uDAA/B,GAW7C,MAAO,CAACoD,EATMiF,GACZ1J,EACAgJ,EACAjG,EACAqC,EAAQoB,MAAMiD,IACd3D,EAAMU,MAAMiD,IACZpI,IAMJ,SAASuI,GAAUiC,GACjB,OF5TK,SAAoBA,GACzB,OAAOA,EAAOrG,OAAOsG,SE2TdC,CFxUF,SAAyBF,GAC9B,OAAO,IAAI,IAAIG,IAAIH,IEuUJI,CAAaJ,IAY9B,SAAS/J,GAAOoK,EAAiB1B,GAC/B,OAAO0B,EAAMpK,QAAO,SAACC,EAAKC,GAAN,aAAwBD,EAAxB,GAAgCyI,EAAKxI,MAAa,ICpWjE,IAAMmK,GAAb,gFAEiBN,GAA8C,IAAD,OAC1D,OAAOjK,OAAOC,KAAKgK,GAAQ/J,QAAO,SAACC,EAAwBiH,GACzD,MAAM,GAAN,WACKjH,GADL,IAEK,EAAKqK,wBAAwBP,EAAQ7C,OAEzC,MARP,8CAWkChJ,EAA2BgJ,GAAuC,IAAD,OACzFqD,EAAuCrM,EAAQgJ,GAErD,OAAOpH,OAAOC,KAAKwK,EAAiB9G,aAAaJ,KAAI,SAACpC,GACpD,MAAO,CACLlC,KAAMmI,EACNjG,WAAYA,EACZmC,SAAU,EAAKoH,qBAAqBtM,EAASgJ,GAC7C3D,OAAQ,EAAKkH,mBAAmBvM,EAASgJ,SAnBjD,2CAwB+BhJ,EAA2BgJ,GACtD,IAAM9D,EFsBH,SAA8BlF,EACAgJ,GAInC,OAAOzG,EAFsC0G,GAAoBjJ,EAASgJ,IAE5C,SAAC1H,GAA2C,IAChEqE,EAAkBrE,EAAMgB,KAAxBqD,cAER,OAAO/D,OAAOC,KAAK8D,GAAeR,KAAI,SAACS,GACrC,OAAOhE,OAAOC,KAAK8D,EAAcC,UE/BN0G,CAAqBtM,EAASgJ,GAE3D,OAAOxI,KAAKgM,wBAAL,IAAiCtH,MA3B5C,yCA8B6BlF,EAA2BgJ,GACpD,IAAM3D,EF8BH,SAA4BrF,EACAgJ,GAIjC,OAAOzG,EAFsC0G,GAAoBjJ,EAASgJ,IAE5C,SAAC1H,GAAyC,IAC9D+D,EAAW/D,EAAMgB,KAAjB+C,OAER,OAAOzD,OAAOC,KAAKwD,MEtCMkH,CAAmBvM,EAASgJ,GAErD,OAAOxI,KAAKiM,sBAAL,IAA+BpH,MAjC1C,8CAoCkCH,GAAwD,IAAD,OAAjCqF,EAAiC,uDAAd,GACvE,GAAwB,IAApBrF,EAASL,OACX,OAAO0F,EAGT,IAAMG,EAASxF,EAASpD,QAAO,SAACC,EAAeC,GAC7C,MAAM,GAAN,WAAWD,GAAX,IAAmB,EAAK2K,oBAAoB3K,EAAKC,OAChDkD,EAASyF,SAEZ,OAAOnK,KAAKgM,wBAAwBtH,EAA7B,cAA2CqF,GAA3C,IAAsDG,OA7CjE,0CAgD8BhE,EAAeC,GACzC,OAAOD,EAAI5E,QAAO,SAACC,EAAe4K,GAChC,IAAMjC,EAAS/D,EAAIxB,KAAI,SAAAyH,GACrB,OAAOD,EAASjC,OAAOjB,GAAyBmD,MAElD,MAAM,GAAN,WAAW7K,GAAX,IAAmB2I,MAClB,MAtDP,4CAyDgCrF,GAAoD,IAAlCkF,EAAiC,uDAAd,GACjE,GAAsB,IAAlBlF,EAAOR,OACT,OAAO0F,EAGT,IAAMG,EAASrF,EAAOvD,QAAO,SAACC,EAAeC,GAC3C,IAAMwI,EAAOzI,EAAIoD,KAAI,SAAA7D,GAAK,OAAIA,EAAMoJ,OAAOjB,GAAyBzH,MACpE,MAAM,GAAN,WAAWD,GAAX,IAAmByI,MAClB,CAACnF,EAAOsF,UAEX,OAAOnK,KAAKiM,sBAAsBpH,EAA3B,cAAuCkF,GAAvC,IAAkDG,SAnE7D,K,qjBCQO,IAAMmC,GAAb,gFAEiBhB,GAAqD,IAC1D7L,EAAyB6L,EAAzB7L,QAASsC,EAAgBuJ,EAAhBvJ,KAAMjB,EAAUwK,EAAVxK,MAEjByL,EAAUxK,EAAKR,QAAO,SAACC,EAAqBgL,GAAkC,IAC1ElM,EAAuCkM,EAAvClM,KAAMkC,EAAiCgK,EAAjChK,WAAYmC,EAAqB6H,EAArB7H,SAAUG,EAAW0H,EAAX1H,OAE9B2H,EFsFL,SAAyBhN,EACAgJ,EACAjG,EACAmC,EACAG,EACAhE,GAE9B,IAAM4L,EAAYrB,GAAiB5L,EACjCgJ,EACAjG,EACAA,EACA,GACA,GACA1B,GAGI6L,EAAa7H,EAAOvD,QAAO,SAACC,EAAkCC,GAClE,IAAMyC,EAAM1B,EAAW2H,OAAOjB,GAAyBzH,GACjDwI,EAAOoB,GAAiB5L,EAASgJ,EAAWvE,EAAK1B,EAAY,GAAIf,EAASX,GAChF,MAAM,GAAN,WAAWU,GAAX,CAAgByI,MACf,IAEG2C,EAAejI,EAASC,KAAI,SAAAC,GAChC,IAAMX,EAAM1B,EAAW2H,OAAOjB,GAAyBrE,GACvD,OAAOwG,GAAiB5L,EAASgJ,EAAWvE,EAAK1B,EAAYqC,EAAS,GAAI/D,MAGtE+L,EAAoBlI,EAASpD,QAAO,SAACC,EAAkCC,GAC3E,IAAMwI,EAAOnF,EAAOF,KAAI,SAAAW,GACtB,IAAMrB,EAAM1B,EAAW2H,OAAOjB,GAAyBzH,EAASyH,GAAyB3D,GACzF,OAAO8F,GAAiB5L,EAASgJ,EAAWvE,EAAK1B,EAAYf,EAAS8D,EAAOzE,MAE/E,MAAM,GAAN,WAAWU,GAAX,IAAmByI,MAClB,IAEH,MAAM,CACJyC,GADF,WAEKC,GAFL,IAGKC,GAHL,IAIKC,IE7H6BC,CAAgBrN,EAASa,EAAMkC,EAAYmC,EAAUG,EAAQhE,GACrFiM,EAAuBvL,EAAIlB,GAC3B0M,EAAuB5E,EAASqE,GAEtC,OAAO,MAAKjL,EAAZ,OAAkBlB,EAAlB,MAA8ByM,EAA9B,GAAuDC,OACtD,IAEH,OAAO/M,KAAKgN,gBAAgBxN,EAAS8M,KAfzC,sCAkB0B9M,EAA2BwC,GACjD,OAAOZ,OAAOC,KAAKW,GAAOV,QAAO,SAACC,EAAqB0L,GACrD,IAAMC,EAAuC,CAC3CpL,KAAMtC,EAAQyN,GAASnL,KACvB8B,OAAQ5B,EAAMiL,IAGhB,OAAO,MAAK1L,EAAZ,OAAkB0L,EAAUC,MAC3B,QA1BP,KCfaC,GAAb,yCAEUC,iBAAqC,IAAIzB,GAFnD,KAGU0B,cAA+B,IAAIhB,GAH7C,4CAKiBhB,GAAqC,IAC9BiC,EAAsCjC,EAAlDkC,WAAkCC,EAAgBnC,EAAxBoC,OAE5B3L,EAA0B9B,KAAKoN,iBAAiBM,QAAQJ,GAE9D,OAAOtN,KAAKqN,cAAcK,QAAQ,CAChClO,QAAS8N,EACTxL,KAAMA,EACNjB,MAAO2M,QAbb,KCFaG,GAAb,yIAEoC,IAAD,EACF3N,KAAKF,MAA1B8D,EADuB,EACvBA,OAAQgK,EADe,EACfA,SAEhB,OACE,kBAACvH,EAAewH,SAAhB,CACE/M,MAAO8C,GACNgK,OART,GAAqCtH,IAAMwH,eCM9BC,GAAb,yIAEoC,IAAD,EACH/N,KAAKF,MAAzBe,EADuB,EACvBA,MAAO+M,EADgB,EAChBA,SAEf,OACE,kBAACpH,EAAaqH,SAAd,CACE/M,MAAOD,GACN+M,OART,GAAmCtH,IAAMwH,eCG5BE,GAAb,yIAEoC,IAAD,EACKhO,KAAKF,MAAjC8D,EADuB,EACvBA,OAAQ/C,EADe,EACfA,MAAO+M,EADQ,EACRA,SAEvB,OACE,kBAAC,GAAD,CAAiBhK,OAAQA,GACvB,kBAAC,GAAD,CAAe/C,MAAOA,GACnB+M,QARX,GAAmCtH,IAAMwH,e,0BCS5BG,GAAb,mLAMUC,gBAAkB,WAAa,IAAD,EACO,EAAKpO,MAAxCqO,EAD4B,EAC5BA,cAAeD,EADa,EACbA,gBAEnBC,GACFD,KAVN,EAcUE,0BAA4B,WAClC,OAAO,GAfX,EAkBUC,mBAAqB,aAlB/B,EAsBUC,iCAAmC,WACzC,OAAO,GAvBX,EA0BUC,qBAAuB,SAAC5L,GAC9B,OAAO2D,IAAMkI,aAAa7L,EAAQ,CAChCX,MAAO,CAACW,EAAO7C,MAAMkC,MAAO,EAAKlC,MAAMkC,UA5B7C,EAgCUyM,wBAA0B,SAAC9L,GACjC,OAAO2D,IAAMoI,SAAS/J,IAAIhC,EAAQ,EAAK4L,uBAjC3C,EAoCUI,mBAAqB,SAACnG,GAG5B,OACE,kBAACoG,GAAA,EAAD,CACE5M,MAAO4B,GAAOiL,UACdC,QAAS,EAAKZ,gBACda,cAAe,GACdvG,IA5CT,EAiDUwG,sBAAwB,SAACxG,GAC/B,OACE,kBAACyG,GAAA,EAAD,CAAMjN,MAAO4B,GAAOsL,mBAClB,kBAACD,GAAA,EAAD,CACEjN,MAAO4B,GAAOiL,UACdM,cAAc,SACf3G,IAvDT,EA4DU4G,gBAAkB,WAA8D,IAAD,EAChC,EAAKtP,MAAlD8N,EAD6E,EAC7EA,SAAUO,EADmE,EACnEA,cAAkBkB,EADiD,oCAE/EC,EAA+C,EAAKb,wBAAwBb,GAE5E2B,EACJ,kBAACN,GAAA,EAAD,OACMI,EADN,CAEErN,MAAO4B,GAAO4L,eACdpB,0BAA2B,EAAKA,0BAChCC,mBAAoB,EAAKA,mBACzBC,iCAAkC,EAAKA,iCACvCa,cAAc,aACbG,GAGL,OAAOnB,EACL,EAAKQ,mBAAmBY,GAAU,EAAKP,sBAAsBO,IA5EnE,wDAgFI,OAAOvP,KAAKF,MAAM2P,QAAUzP,KAAKoP,kBAAoB,SAhFzD,GAAmC9I,IAAMI,WAA5BuH,GAEJjH,aAA4C,CACjDyI,SAAS,GAiFb,IAAM7L,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAWa,KAAWE,mBACtBV,kBAAmB,CACjBW,SAAU,WACVC,MAAO,EACPC,OAAQ,GAEVP,eAAgB,CACdQ,UAAW,gBCfFC,GAAe,I,yCA7C1BC,MAAgC,K,0CAEnBA,GACXlQ,KAAKkQ,MAAQA,I,gCAIblQ,KAAKkQ,MAAQ,O,2BAGHC,EACAC,GAEV,GAAIpQ,KAAKkQ,MACP,OAAOlQ,KAAKkQ,MAAMG,KAAKF,EAASC,K,6BAItBE,EAAoB1C,GAC5B5N,KAAKkQ,OACPlQ,KAAKkQ,MAAMK,OAAOD,EAAY1C,K,2BAItB0C,GACV,GAAItQ,KAAKkQ,MACP,OAAOlQ,KAAKkQ,MAAMM,KAAKF,O,qOClDtB,IC/BKG,GAQAC,GDuBCC,GAAb,mLAESrL,MAAyB,CAC9BiI,WAAY,IAAIqD,KAHpB,EAcSJ,KAAO,SAACF,GACb,IAAM/C,EAA2C,EAAKjI,MAAMiI,WAG5D,OAFAA,EAAWsD,OAAOP,GAClB,EAAKpJ,SAAS,CAAEqG,eACT,IAlBX,EA+CUuD,2BAA6B,WACnC,OAAOC,KAAKC,SAASC,SAAS,IAAI/P,UAAU,IAhDhD,EAmDUgQ,sBAAwB,WAC9B,OAAO,EAAK5L,MAAMiI,YAA6C,IAA/B,EAAKjI,MAAMiI,WAAW4D,MApD1D,EAuDUC,YAAc,SAAChB,EAAyBiB,GAC9C,OACE,kBAAC,GAAD,OACMjB,EAAOD,QAAQrQ,MADrB,CAEE2P,SAAS,EACTxL,IAAKoN,EACLlD,cAAeiC,EAAOjC,cACtBD,gBAAiBkC,EAAOlC,kBACvBkC,EAAOD,UA/DhB,EAoEUmB,aAAe,WACrB,OAAOC,MAAMC,KAAK,EAAKlM,MAAMiI,WAAWkE,UAAU9M,IAAI,EAAKyM,cArE/D,mEAOInB,GAAayB,MAAM1R,QAPvB,6CAWIiQ,GAAa0B,YAXjB,2BAqBcxB,EACAC,GAEV,IAAMnM,EAAcjE,KAAK8Q,6BACnBvD,EAA2CvN,KAAKsF,MAAMiI,WACzDqE,IAAI3N,E,mVAD0C,IAChCmM,EADgC,CACxBD,aAIzB,OAFAnQ,KAAKkH,SAAS,CAAEqG,eAETtJ,IA9BX,6BAiCgBqM,EAAoB1C,GAChC,IAAMiE,EAA8B7R,KAAKsF,MAAMiI,WAAW/M,IAAI8P,GACxDwB,EAAyDD,EAAW1B,QAE1E0B,EAAW1B,QAAU7J,IAAMkI,aAAasD,EAAc,CACpDlE,SAAUA,IAGZ,IAAML,EAA2CvN,KAAKsF,MAAMiI,WAC5DA,EAAWsD,OAAOP,GAClB/C,EAAWqE,IAAItB,EAAYuB,GAC3B7R,KAAKkH,SAAS,CAAEqG,iBA5CpB,+BAyEI,OACE,kBAAC0B,GAAA,EAAD,CAAMjN,MAAO4B,GAAOiL,WACjB7O,KAAKF,MAAM8N,SACX5N,KAAKkR,yBAA2BlR,KAAKsR,oBA5E9C,GAAgChL,IAAMI,WAkFhC9C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTkD,KAAM,KE3CGC,GAAb,YAIE,WAAYlS,GAAkC,IAAD,eAC3C,4BAAMA,KAHAmS,gBAAmC,IAAI9E,GAEF,EASrCrF,aAAe,SAACtI,EAAqB0S,GAC3C,IAAMC,EAAgCC,IAAM,GAAI5S,EAAS0S,GAEzD,OAAO,EAAKD,gBAAgBvE,QAAQyE,IAZO,MAED,EAAKrS,MAAvCN,EAFmC,EAEnCA,QAAS6S,EAF0B,EAE1BA,cAEXzO,GAJqC,EAEX/C,MAED,EAAKiH,aAAatI,EAAS6S,IAJf,OAM3C,EAAK/M,MAAQ,CAAE1B,UAN4B,EAJ/C,sDAoBI,OACE,kBAAC,GAAD,CACE/C,MAAOb,KAAKF,MAAMe,MAClB+C,OAAQ5D,KAAKsF,MAAM1B,QACnB,kBAAC,GAAD,KACG5D,KAAKF,MAAM8N,eAzBtB,GAAyCtH,IAAMI,Y,SDxEnC+J,K,cAAAA,E,gBAAAA,E,kBAAAA,E,8BAAAA,E,mBAAAA,Q,cAQAC,K,kBAAAA,E,oBAAAA,E,qBAAAA,Q,2OEVL,IAAM4B,GAAkC,CAC7CC,OAAQ,EACRC,iBAAiB,GAUGC,GAAtB,WAUE,WAAYrC,GAAa,IAAD,wBAPdsC,QAAkB,EAOJ,KALdC,SAAmB,EAKL,KAwBdC,eAAiB,SAAC7I,GAC1B,EAAK2I,SAAW,EACZ,EAAKA,UAAY,EAAKtC,OAAOmC,QAC/B,EAAKM,OAEH,EAAKF,SACP,EAAKG,MAAM,EAAKC,aAEb,EAAKJ,UACR,EAAKD,QAAU,EACf,EAAKK,aAAe,EAAKA,YAAYhJ,GACrC,EAAKgJ,YAAc,OAlCrB/S,KAAKoQ,O,mVAAL,IACKkC,GADL,GAEKlC,GAbT,0CAiBe4C,GACXhT,KAAK+S,YAAcC,EACnBhT,KAAK2S,SAAU,EAEf3S,KAAKiT,UAAUH,MAAM9S,KAAK4S,kBArB9B,6BAyBI5S,KAAK2S,SAAU,EAEf3S,KAAKiT,UAAUJ,SA3BnB,gCA+BI7S,KAAK6S,WA/BT,K,ukBCJA,IAAMP,GAAuC,CAC3CQ,MAAO,EACPI,IAAK,KACLC,OAAQC,KAAOC,OACfC,SAAU,KAUCC,GAAb,YAuBE,WAAYnD,GAAgC,IAAD,sBACzC,kCAAWkC,GAAX,GAA8BlC,MACzBtP,MAAQ,IAAI0S,KAASC,MAAM,EAAKrD,OAAO0C,OAFH,EAvB7C,uDAI0D,IAAD,EACf9S,KAAKoQ,OAAnC0C,EAD6C,EAC7CA,MAAOI,EADsC,EACtCA,IAAQQ,EAD8B,uBAG/CC,EAA8CH,KAASI,OAAO5T,KAAKc,MAArB,IAClD+S,QAASX,GACNQ,IAGCI,EAA4CN,KAASI,OAAO5T,KAAKc,MAArB,IAChD+S,QAASf,GACNY,IAGL,OAAOF,KAASO,SAAS,CACvBJ,EACAG,QAnBN,uCA6BI,MAAO,CAEL9R,MAAO,CACL6D,UAAW,CAAC,CAAEmO,MAAOhU,KAAKc,cAhClC,GAAoC2R,I,qjBCdpC,IAAMH,GAAuC,CAC3CQ,MAAO,EACPmB,OAAQ,IACRd,OAAQC,KAAOC,OACfC,SAAU,GACVf,OAAQ,GAUG2B,GAAb,YAuBE,WAAY9D,GAAgC,IAAD,sBACzC,kCAAWkC,GAAX,GAA8BlC,MACzBtP,MAAQ,IAAI0S,KAASC,MAAM,EAAKrD,OAAO0C,OAFH,EAvB7C,uDAI0D,IAAD,EACZ9S,KAAKoQ,OAA/B6D,GADsC,EAC7CnB,MAD6C,EACtCmB,QAAWP,EAD2B,0BAG/CC,EAA8CH,KAASI,OAAO5T,KAAKc,MAArB,IAClD+S,QAAS7T,KAAK0S,QAAU,IAAM,GAAKuB,EAASA,GACzCP,IAGCI,EAA4CN,KAASI,OAAO5T,KAAKc,MAArB,IAChD+S,QAAS7T,KAAK0S,QAAU,IAAM,EAAIuB,GAAUA,GACzCP,IAGL,OAAOF,KAASO,SAAS,CACvBJ,EACAG,QAnBN,uCA6BI,MAAO,CAEL9R,MAAO,CACL6D,UAAW,CAAC,CAAEsO,WAAYnU,KAAKc,cAhCvC,GAAoC2R,I,qjBCfpC,IAAMH,GAAsC,CAC1CQ,MAAO,EACPI,IAAK,GACLC,OAAQC,KAAOC,OACfC,SAAU,KAUCc,GAAb,YAuBE,WAAYhE,GAA+B,IAAD,sBACxC,kCAAWkC,GAAX,GAA8BlC,MACzBtP,MAAQ,IAAI0S,KAASC,MAAM,EAAKrD,OAAO0C,OAFJ,EAvB5C,uDAI0D,IAAD,EACf9S,KAAKoQ,OAAnC0C,EAD6C,EAC7CA,MAAOI,EADsC,EACtCA,IAAQQ,EAD8B,uBAG/CC,EAA8CH,KAASI,OAAO5T,KAAKc,MAArB,IAClD+S,QAASX,GACNQ,IAGCI,EAA4CN,KAASI,OAAO5T,KAAKc,MAArB,IAChD+S,QAASf,GACNY,IAGL,OAAOF,KAASO,SAAS,CACvBJ,EACAG,QAnBN,uCA6BI,MAAO,CAEL9R,MAAO,CACL6D,UAAW,CAAC,CAAEmO,MAAOhU,KAAKc,cAhClC,GAAmC2R,I,wOC8B5B,IAAM4B,GAAb,mLAIUC,kBAAoB,SAAC3R,GAAkC,IACrD4R,EAA6C5R,EAA7C4R,iBAAqBC,EAD+B,IACP7R,EADO,sBAItD8R,EAAwB/E,KAAWgF,QAAQ,CAC/CF,EACA,EAAK1U,MAAMkC,QAMb,O,mVAAO,EACL2S,aAH2BJ,EAAmBE,EAAU1E,QAIrD0E,IAlBT,wDAsBmD,IAAD,EACRzU,KAAKF,MAAnC0D,EADsC,EACtCA,YAAgBtD,EADsB,uBAExC0U,EAA6B5U,KAAKsU,kBAAkB9Q,GAE1D,OACE,kBAACqR,GAAA,EAAD,OACM3U,EADN,CAEE8B,MAAO4S,SA7Bf,GAAqCtO,IAAMI,WAA9B2N,GAEJ1N,oBAA8B,SAiChC,IAAMmO,GAASrO,EAAoB4N,I,qBC5E7BU,GAAb,mLAEUT,kBAAoB,SAAC3R,GAC3B,IAAMqS,EAAuBtF,KAAWgF,QAAQ/R,GAEhD,MAAO,CACLkM,UAAW,CAEToG,gBAAiBD,EAAUlF,MAE3BoF,iBAAkBF,EAAUlF,MAE5BqF,kBAAmBH,EAAUjF,OAC7BqF,kBAAmBJ,EAAUK,gBAC7BC,gBAAiB,cACjBC,iBAAkB,cAClBF,gBAAiB,iBAhBzB,wDAqBkD,IAAD,EACjBrV,KAAKF,MAAzBkC,EADqC,EACrCA,MAAUlC,EAD2B,iBAEvC8U,EAAiB5U,KAAKsU,kBAAkBtS,GAE9C,OACE,kBAACiN,GAAA,EAAD,OACMnP,EADN,CAEEkC,MAAO,CAACA,EAAO4B,GAAOiL,UAAW+F,EAAe/F,kBA5BxD,GAA2BvI,IAAMI,WAkC3B9C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,K,qjBCWN,SAAS2G,GAAc7S,EAAmBsB,GAC/C,OAAO7C,OAAOC,KAAKsB,GAChBqC,QAAO,SAACyQ,GAAD,OAAuBA,EAAUtR,SAASF,MACjD3C,QAAO,SAACoU,EAAgBC,GACvB,OAAO,MACFD,EADL,OAEGC,EAAWhT,EAAOgT,OAEpB,I,aCvDDC,GAAmD,CACvDC,OADuD,SAChD/U,EAAegV,GACpB,OAAKA,GAAQhV,EAAMG,WAdK,QAkBGH,EAAMiV,SAdL,OAiBhBC,aAGFA,WATDlV,IA0DAmV,GAAkE,CAC7EC,aAAcN,GACdO,WAAYP,GACZ5F,UAAW4F,GACXQ,eAAgBR,GAChBS,cA7CkD,CAClDR,OADkD,SAC3C/U,EAAegV,GACpB,OAAKA,GAAQhV,EAAMG,WAlCS,OAsCDH,EAAMiV,SAlCD,WAJJ,MA4ClBO,cATDxV,IA2CXyV,SAzBmD,CACnDV,OADmD,SAC5C/U,EAAegV,GACpB,OAAKA,GAAQhV,EAAMG,WAtDU,QA0DFH,EAAMiV,SAAN,YA1DE,OAgEnBS,eATD1V,K,yjBCjBA2V,GAAoB,I,gFA9B7B,OAAOC,KAAYC,Q,6BAGJC,EAAQd,GACvB,OAAO9V,KAAK2W,QAAUb,EAAMc,I,kCAWXjU,GAA4D,IAAzCmT,EAAwC,uDAAzB9V,KAAK2W,QAClDE,EAAuBzV,OAAOC,KAAK4U,IAAmB3U,QAAO,SAACU,EAAkB0D,GACpF,IAAMoR,EAAoBnU,EAAO+C,GACjC,GAAIoR,EAAmB,CACrB,IAAMC,EAAiBd,GAAkBvQ,GAAMmQ,OAAOiB,EAAmBhB,GACzE,OAAO,MAAK9T,EAAZ,OAAoB0D,EAAOqR,IAG7B,OAAO/U,IACN,IAEH,OAAO,MAAKW,EAAZ,GAAuBkU,O,MCpCdG,GAAgB,SAACrU,GAC5B,SAAIA,GAAUA,EAAO0B,OAAS,ICMnB4S,GAGX,WAAYnX,GAAoC,YAC9CE,KAAKkX,cAAgBpX,GAuBZqX,G,oFAlBG/G,GACZ,OAAO,IAAI6G,GAA0B,CACnCG,aAAc,WACZhH,EAAOgH,cAAgBhH,EAAOgH,gBAEhCC,aAAc,WACZjH,EAAOiH,cAAgBjH,EAAOiH,gBAEhCC,QAAS,WACPlH,EAAOkH,SAAWlH,EAAOkH,WAE3BC,OAAQ,WACNnH,EAAOmH,QAAUnH,EAAOmH,gB,KCXnBC,GAAb,mLAMUlD,kBAAoB,SAAC3R,GAAkC,IACrDmN,EAAmCnN,EAAnCmN,MAAOC,EAA4BpN,EAA5BoN,OAAQsF,EAAoB1S,EAApB0S,gBAEvB,MAAO,CACLxG,UAAW,CACTiB,MAAOA,EACPC,OAAQA,GAGV0H,MAAO,CACLC,YAAqB,KAAR5H,EACb6H,oBAA8B,GAAT5H,EACrB6H,qBAA+B,GAAT7H,EACtB8H,uBAAiC,GAAT9H,EACxB+H,wBAAkC,GAAT/H,EACzBgI,YAAa1C,EACbA,gBAAiBA,GAEnB2C,KAAM,CACJA,KAAc,KAARlI,EACNmI,IAAa,IAARnI,EACLC,OAAiB,IAATA,GAEVmI,MAAO,CACLA,MAAe,KAARpI,EACPC,OAAiB,KAATA,KA/BhB,wDAoCoC,IAAD,EACD/P,KAAKF,MAA3BkC,EADuB,EACvBA,MAAOmW,EADgB,EAChBA,WADgB,EAEWnY,KAAKsU,kBAAkB5E,KAAWgF,QAAQ1S,IAA5E6M,EAFuB,EAEvBA,UAAW4I,EAFY,EAEZA,MAAOO,EAFK,EAELA,KAAME,EAFD,EAECA,MAE1BxR,EAAYyR,EAAa3E,KAASvE,KAAOA,KAE/C,OACE,kBAACvI,EAAD,CAAW1E,MAAO,CAAC6M,EAAWjL,GAAOiL,YACnC,kBAACnI,EAAD,CAAW1E,MAAO,CAACyV,EAAOO,EAAMpU,GAAO6T,MAAO7T,GAAOoU,QACrD,kBAACtR,EAAD,CAAW1E,MAAO,CAACyV,EAAOS,EAAOtU,GAAO6T,MAAO7T,GAAOsU,cA7C9D,GAA+B5R,IAAMI,WAAxB8Q,GAEJxQ,aAAe,CACpBmR,YAAY,GAgDhB,IAAMvU,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW4H,GAAkB2B,YAAY,CACvC/B,cAAe,MACfxQ,UAAW,CAAC,CAAEwS,OAAQ,YAExBZ,MAAO,CACL5H,SAAU,YAEZmI,KAAM,CACJnS,UAAW,CAAC,CAAEwS,OAAQ,YAExBH,MAAO,CACLrS,UAAW,CAAC,CAAEwS,OAAQ,a,+NC7DnB,IAAMC,GAAb,mLAQUC,cAAgC,IAAI/E,KAASC,MAAM,GAR7D,EAuDU+E,qCAAuC,SAAClT,KAvDlD,EA2DUmT,iCAAmC,SAAC1O,KA3D9C,EA+DU2O,sBAAwB,SAACrN,GAC/B,IAAMsN,EAA4BtN,EAAOuN,SAAW,EAAK9Y,MAAM6Y,kBAAoB,EAEnF,OAAOnF,KAASI,OAAO,EAAK2E,cAAe,CACzC1E,QAAS4C,GAAkBoC,OAAOxN,EAAO4I,QAAS5I,EAAO4I,QACzDX,SAAUqF,EACVxF,OAAQC,KAAOC,UArErB,EAyEUyF,SAAW,SAACC,GAClB,EAAKC,eAAiBD,EAAME,YAAYC,OAAOpJ,MAE/C,EAAKqJ,eAAe,CAClBlF,OAAQ,EAAK+E,eAAiB,EAAKlZ,MAAMsZ,iBACzCR,UAAU,KA9EhB,EAkFUtE,kBAAoB,WAG1B,MAAO,CACLxE,MAH2B,IAAM,EAAKhQ,MAAMuZ,UAGvC,IAGLxT,UAAW,CAAC,CAAEsO,WAAY,EAAKoE,kBAzFrC,mEAWIvY,KAAKuY,cAAce,YAAYtZ,KAAKwY,wCAXxC,4CAc+Be,GAC3B,OAAOvZ,KAAKF,MAAMsZ,mBAAqBG,EAAUH,mBAfrD,2CAkB+B,IACD/H,EAAUrR,KAAKF,MAAjCsZ,iBAERpZ,KAAKwZ,cAAc,CAAEnI,QAAOuH,UAAU,MArB1C,6CAyBI5Y,KAAKuY,cAAckB,uBAzBvB,oCAoCuBpO,GAAgD,IAC3DgG,EAAmBhG,EAAnBgG,MAAUqI,EADgD,IACvCrO,EADuC,WAE5D4I,EAAiBjU,KAAKgZ,eAAiB3H,EAE7CrR,KAAKmZ,e,mVAAL,EAAsBlF,UAAWyF,MAxCrC,qCAmDwBrO,GACpBrL,KAAK0Y,sBAAsBrN,GAAQyH,MAAM9S,KAAKyY,oCApDlD,+BA6FkD,IAAD,EACbzY,KAAKF,MAA7BkC,EADqC,EACrCA,MAAU9B,EAD2B,iBAEvC0U,EAA4B5U,KAAKsU,oBAEvC,OACE,kBAACd,GAAA,EAASvE,KAAV,OACM/O,EADN,CAEE4Y,SAAU9Y,KAAK8Y,SACf9W,MAAO,CAACA,EAAO4S,UArGvB,GAAkCtO,IAAMI,WAA3B4R,GAEJtR,aAA2C,CAChDoS,iBAAkB,EAClBT,kBAAmB,KCJhB,IAAMgB,GAAb,mLAOUC,kBAAoB,WAG1B,OAFsB,EAAK9Z,MAAnB+Z,WAGN,IAAK,MACH,OAAOjW,GAAOkW,mBAChB,IAAK,QACH,OAAOlW,GAAOmW,qBAChB,IAAK,OACH,OAAOnW,GAAOoW,oBAChB,QACE,OAAO,OAlBf,EAsBU1F,kBAAoB,SAAC3R,GAAkC,IAE3DmN,EAIEnN,EAJFmN,MACAC,EAGEpN,EAHFoN,OACWsF,EAET1S,EAFF1C,UAIF,MAAO,CACL4O,UAAW,CACTiB,MAAOA,EACPC,OAAQA,EACRkK,iBANAtX,EADFsX,kBAUAxC,MAAO,CACLQ,IAAc,IAATlI,EACL2H,YAAqB,IAAR5H,EACb6H,oBAA8B,GAAT5H,EACrB6H,qBAA+B,GAAT7H,EACtB8H,uBAAiC,GAAT9H,EACxB+H,wBAAkC,GAAT/H,EACzBgI,YAAa1C,EACbA,gBAAiBA,GAEnB2C,KAAM,CACJA,KAAc,IAARlI,EACNC,OAAiB,IAATA,GAEVmI,MAAO,CACLA,MAAe,IAARpI,EACPC,OAAiB,IAATA,KArDhB,wDA0DoC,IAAD,EACD/P,KAAKF,MAA3BkC,EADuB,EACvBA,MAAOmW,EADgB,EAChBA,WADgB,EAEWnY,KAAKsU,kBAAkB5E,KAAWgF,QAAQ1S,IAA5E6M,EAFuB,EAEvBA,UAAW4I,EAFY,EAEZA,MAAOO,EAFK,EAELA,KAAME,EAFD,EAECA,MAC1BgC,EAA4Bla,KAAK4Z,oBAEjClT,EAAYyR,EAAa3E,KAASvE,KAAOA,KAE/C,OACE,kBAACvI,EAAD,CAAW1E,MAAO,CAAC6M,EAAWqL,EAAgBlY,IAC5C,kBAAC0E,EAAD,CAAW1E,MAAO,CAACyV,EAAOO,EAAMpU,GAAO6T,MAAO7T,GAAOoU,QACrD,kBAACtR,EAAD,CAAW1E,MAAO,CAACyV,EAAOS,EAAOtU,GAAO6T,MAAO7T,GAAOsU,cApE9D,GAA6B5R,IAAMI,WAAtBiT,GAEJ3S,aAAe,CACpBmR,YAAY,EACZ0B,UAAW,UAsEf,IAAMjW,GAAS8L,KAAWC,OAAO,CAC/BmK,mBAAoB,CAClBjU,UAAW,CAAC,CAAEwS,OAAQ,YAExB2B,oBAAqB,CACnBnU,UAAW,CAAC,CAAEwS,OAAQ,WAExB0B,qBAAsB,CACpBlU,UAAW,CAAC,CAAEwS,OAAQ,YAExBZ,MAAO,CACL5H,SAAU,YAEZmI,KAAM,CACJnS,UAAW,CAAC,CAAEwS,OAAQ,UAAY,CAAE8B,WAAY,KAElDjC,MAAO,CACLrS,UAAW,CAAC,CAAEwS,OAAQ,SAAW,CAAE8B,WAAY,OCatCC,GAAb,mLAQUC,YAAc,SAAChJ,GACjB,EAAKvR,MAAMwa,UAAY,EAAKxa,MAAMya,gBAAkBlJ,GACtD,EAAKvR,MAAMwa,SAASjJ,IAV1B,EAcUiD,kBAAoB,SAAC3R,GAAkC,IACrD6X,EAAsE7X,EAAtE6X,gBAAiBC,EAAqD9X,EAArD8X,yBAEzB,MAAO,CACL5L,UAJ0D,IACkBlM,EADlB,gDAK1D+X,KAAM,GACNC,UAAW,CACT5K,OAAQyK,EACRnF,gBAAiBoF,KAtBzB,EA2BUG,uBAAyB,SAACvB,EAAmBrX,GAAwC,IAAD,EAChD,EAAKlC,MAAvC+a,EADkF,EAClFA,eAAgBN,EADkE,EAClEA,cAExB,OACE,kBAAC,GAAD,CACEtW,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAO+W,UAAWE,GACjCzB,iBAAkBmB,EAClBlB,UAAWA,KAnCnB,EAwCUyB,iBAAmB,SAAC3K,EAAqCkB,GAC/D,OAAO/K,IAAMkI,aAAa2B,EAAS,CACjClM,IAAKoN,EACLrP,MAAO,CAAC4B,GAAO8W,KAAMvK,EAAQrQ,MAAMkC,OACnC+Y,SAAU1J,IAAU,EAAKvR,MAAMya,cAC/BD,SAAU,kBAAM,EAAKD,YAAYhJ,OA7CvC,EAiDU2J,kBAAoB,SAACrY,GAC3B,OAAO2D,IAAMoI,SAAS/J,IAAIhC,EAAQ,EAAKmY,mBAlD3C,EAqDUrM,wBAA0B,SAACzM,GACjC,IAAMiZ,EAA4C,EAAKD,kBAAkB,EAAKlb,MAAM8N,UAIpF,MAAM,CAFwB5L,EAAM2Y,UAAU5K,OAAS,GAGrC,EAAK6K,uBAAuBK,EAAY5W,OAAQrC,EAAM2Y,YADxE,WAEKM,KA5DT,wDAgEkD,IAAD,EACGjb,KAAKF,MAA7C0D,EADqC,EACrCA,YAAaxB,EADwB,EACxBA,MAAUqN,EADc,iCAEHrP,KAAKsU,kBAAkB9Q,GAAzDqL,EAFqC,EAErCA,UAAcnL,EAFuB,uBAIF1D,KAAKyO,wBAAwB/K,GAJ3B,UAItCwX,EAJsC,KAIjBD,EAJiB,WAM7C,OACE,kBAAChM,GAAA,EAAD,OACMI,EADN,CAEErN,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW7M,KACpCkZ,EACAD,OA3ET,GAA+C3U,IAAMI,WAAxC0T,GAEJzT,oBAA8B,mBAF1ByT,GAIJpT,aAA+C,CACpDuT,cAAe,GA4EnB,IAAM3W,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,OAEjBqE,KAAM,CACJ3I,KAAM,GAER4I,UAAW,CACT9K,SAAU,cAIDsL,GAAmB1U,EAA8B2T,I,iDC7JjDgB,GAAb,yIAIoD,IAAD,EACCpb,KAAKF,MAA7C0D,EADuC,EACvCA,YAAaxB,EAD0B,EAC1BA,MAAUqN,EADgB,+BAG/C,OACE,kBAAC,KAAD,OACMA,EADN,CAEErN,MAAO,CAACwB,EAAaxB,UAV7B,GAAmCsE,IAAMI,WAA5B0U,GAEJzU,oBAA8B,OAchC,IAAM0U,GAAO5U,EAAkB2U,ICLzBE,GAAb,mLAIUxM,QAAU,WACZ,EAAKhP,MAAMwa,UACb,EAAKxa,MAAMwa,UAAU,EAAKxa,MAAMib,WANtC,EAUUzG,kBAAoB,SAAC3R,GAAkC,IAE3D4Y,EAWE5Y,EAXF4Y,UACAC,EAUE7Y,EAVF6Y,WACAC,EASE9Y,EATF8Y,mBACAC,EAQE/Y,EARF+Y,cACAC,EAOEhZ,EAPFgZ,mBACAC,EAMEjZ,EANFiZ,eACAC,EAKElZ,EALFkZ,aACAC,EAIEnZ,EAJFmZ,eACAC,EAGEpZ,EAHFoZ,eACAC,EAEErZ,EAFFqZ,UAIF,MAAO,CACLnN,UAhB0D,IAaxDlM,EAbwD,oKAiB1DsZ,KAAM,CACJC,eAAgBP,EAChBQ,WAAYP,EACZQ,SAAUP,EACVQ,WAAYP,EACZQ,WAAYP,EACZQ,MAAOP,GAETQ,KAAM,CACJ1M,MAAOyL,EACPxL,OAAQyL,EACRU,eAAgBT,EAChBxb,UAAWyb,KAvCnB,EA4CUe,kBAAoB,SAACza,GAC3B,IAAM0a,EAA2B,EAAK5c,MAAM0c,KAAKxa,GAEjD,OAAOsE,IAAMkI,aAAakO,EAAa,CACrCzY,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAO4Y,KAAME,EAAY5c,MAAMkC,UAjDpD,EAqDU2a,mBAAqB,SAAC3a,GAAmC,IAAD,EAChC,EAAKlC,MAA3B8c,EADsD,EACtDA,MAAOC,EAD+C,EAC/CA,WAEf,OACE,kBAAC,GAAD,CACE5Y,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAOqY,KAAMY,IAC3BD,IA5DT,EAiEUnO,wBAA0B,SAACzM,GAA4C,IAAD,EACpD,EAAKlC,MAArB0c,EADoE,EACpEA,KAAMI,EAD8D,EAC9DA,MAEd,MAAO,CACLJ,GAAQ,EAAKC,kBAAkBza,EAAMwa,MACrCxF,GAAc4F,IAAU,EAAKD,mBAAmB3a,EAAMia,QAtE5D,wDA0E8D,IAAD,EACZjc,KAAKF,MAA1CkC,EADiD,EACjDA,MAAOwB,EAD0C,EAC1CA,YAAgBtD,EAD0B,iCAEfF,KAAKsU,kBAAkB9Q,GAAzDqL,EAFiD,EAEjDA,UAAcnL,EAFmC,uBAGrB1D,KAAKyO,wBAAwB/K,GAHR,YAGlDgZ,EAHkD,KAGrCI,EAHqC,KAKzD,OACE,kBAAClO,GAAA,EAAD,KACEG,cAAe,GACX7O,EAFN,CAGE8B,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW7M,GACrC8M,QAAS9O,KAAK8O,UACb4N,EACAI,OAtFT,GAAkDxW,IAAMI,WAA3C4U,GAEJ3U,oBAA8B,sBA0FvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTuH,eAAgB,SAChBD,WAAY,UAEd8F,KAAM,GACNO,KAAM,KAGKO,GAAsBtW,EAAiC6U,ICzJvDyB,GAAb,mLAGUC,uBAA+C1W,IAAM2W,YAH/D,EAIUC,kBAA+C/F,GAAkBxH,OAAlB,SAJzD,EAMSyH,aAAe,WACpB,EAAK4F,uBAAuBxb,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAE5D,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBAVjB,EAcSC,aAAe,WACpB,EAAK2F,uBAAuBxb,QAAQ1B,MAAMwH,SAAS,IAE/C,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBAlBjB,EAsBSC,QAAU,WACX,EAAKxX,MAAMwX,SACb,EAAKxX,MAAMwX,WAxBjB,EA4BSC,OAAS,WACV,EAAKzX,MAAMyX,QACb,EAAKzX,MAAMyX,UA9BjB,wDAkCiD,IAAD,EACZvX,KAAKF,MAA7BkC,EADoC,EACpCA,MAAU9B,EAD0B,iBAG5C,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAKgd,uBACVhb,MAAO,CAACA,EAAO4B,GAAOuM,gBA1C9B,GAAyC7J,IAAMI,WAgDzC9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,KCkBLC,GAAb,mLAIUvO,QAAU,SAACiK,GACb,EAAKjZ,MAAMgP,SACb,EAAKhP,MAAMgP,QAAQiK,IANzB,EAUUuE,UAAY,SAACvE,GACnB,EAAKjZ,MAAMwH,SAAS,CAACmJ,GAAY8M,SAE7B,EAAKzd,MAAMwd,WACb,EAAKxd,MAAMwd,UAAUvE,IAd3B,EAkBUyE,WAAa,SAACzE,GACpB,EAAKjZ,MAAMwH,SAAS,IAEhB,EAAKxH,MAAM0d,YACb,EAAK1d,MAAM0d,WAAWzE,IAtB5B,EA0BUzE,kBAAoB,SAAC3R,GAAkC,IAE3DqZ,EAWErZ,EAXFqZ,UACAJ,EAUEjZ,EAVFiZ,eACAC,EASElZ,EATFkZ,aACAC,EAQEnZ,EARFmZ,eACAC,EAOEpZ,EAPFoZ,eACA0B,EAME9a,EANF8a,qBACAlC,EAKE5Y,EALF4Y,UACAC,EAIE7Y,EAJF6Y,WACAE,EAGE/Y,EAHF+Y,cACAgC,EAEE/a,EAFF+a,qBAIF,MAAO,CACL7O,UAhB0D,IAaxDlM,EAbwD,wKAiB1DsZ,KAAM,CACJM,MAAOP,EACPG,WAAYP,EACZQ,SAAUP,EACVQ,WAAYP,EACZQ,WAAYP,EACZ9B,iBAAkBwD,GAEpBjB,KAAM,CACJ1M,MAAOyL,EACPxL,OAAQyL,EACRvb,UAAWyb,EACXzB,iBAAkByD,KAvD1B,EA4DUC,kBAAoB,SAAC3b,GAC3B,OACE,kBAAC,GAAD,CACEiC,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAOqY,KAAM,EAAKnc,MAAM8d,YACtC,EAAK9d,MAAM8N,WAjEpB,EAsEU6O,kBAAoB,SAACza,GAC3B,IAAM0a,EAA2B,EAAK5c,MAAM0c,KAAKxa,GAEjD,OAAOsE,IAAMkI,aAAakO,EAAa,CACrCzY,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAO4Y,KAAME,EAAY5c,MAAMkC,UA3EpD,EA+EUyM,wBAA0B,SAACzM,GAA4C,IAAD,EACjD,EAAKlC,MAAxB0c,EADoE,EACpEA,KAAM5O,EAD8D,EAC9DA,SAEd,MAAO,CACL4O,GAAQ,EAAKC,kBAAkBza,EAAMwa,MACrCxF,GAAcpJ,IAAa,EAAK+P,kBAAkB3b,EAAMia,QApF9D,wDAwF8D,IAAD,EACPjc,KAAKF,MAA/C0D,EADiD,EACjDA,YAAaxB,EADoC,EACpCA,MAAU6b,EAD0B,iCAEnB7d,KAAKsU,kBAAkB9Q,GAArDqL,EAFiD,EAEjDA,UAAciP,EAFmC,uBAGtB9d,KAAKyO,wBAAwBqP,GAHP,YAGlDpB,EAHkD,KAGrCqB,EAHqC,KAKzD,OACE,kBAACnP,GAAA,EAAD,KACEG,cAAe,GACX8O,EAFN,CAGE7b,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW7M,GACrC8M,QAAS9O,KAAK8O,QACdwO,UAAWtd,KAAKsd,UAChBE,WAAYxd,KAAKwd,aAChBd,EACAqB,OAtGT,GAAqCzX,IAAMI,WAA9B2W,GAEJ1W,oBAA8B,SA0GvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfD,eAAgB,SAChBD,WAAY,UAEd8F,KAAM,GACNO,KAAM,KAGKwB,GAASvX,EAAoB4W,IC3L7BW,GAAb,mLAEUC,UAAkC3X,IAAM2W,YAFlD,EAGUC,kBAA+C/F,GAAkBxH,OAAlB,SAHzD,EAKSyH,aAAe,WACpB,EAAK6G,UAAUzc,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAE/C,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBATjB,EAaSC,aAAe,WACpB,EAAK4G,UAAUzc,QAAQ1B,MAAMwH,SAAS,IAElC,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBAjBjB,EAqBSC,QAAU,WACf,EAAK2G,UAAUzc,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAYyN,UAE/C,EAAKpe,MAAMwX,SACb,EAAKxX,MAAMwX,WAzBjB,EA6BSC,OAAS,WACd,EAAK0G,UAAUzc,QAAQ1B,MAAMwH,SAAS,IAElC,EAAKxH,MAAMyX,QACb,EAAKzX,MAAMyX,UAjCjB,wDAqCoC,IAAD,EACCvX,KAAKF,MAA7BkC,EADuB,EACvBA,MAAU9B,EADa,iBAG/B,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAKie,UACVjc,MAAO,CAACA,EAAO4B,GAAOuM,gBA7C9B,GAA4B7J,IAAMI,WAmD5B9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,K,yjBCXZe,G,mLAII7J,kBAAoB,SAAC3R,GAAkC,IACrDyb,EAAiEzb,EAAjEyb,uBAAwBC,EAAyC1b,EAAzC0b,aAAiB7J,EADW,IACa7R,EADb,2CAG5D,MAAO,CACLkM,UAAU,MACL2F,EADI,CAEPkD,YAAalD,EAAoBkD,YAAc,MAEjD4G,OAAQ,CACN5G,YAAa2G,EACbtG,YAAaqG,K,EAKXG,eAAiB,SAAClN,GACxB,OAAiB,IAAVA,G,EAGDmN,cAAgB,SAACnN,GACvB,OAAOA,IAAU/K,IAAMoI,SAAS+P,MAAM,EAAK3e,MAAM8N,UAAY,G,EAGvD8Q,oBAAsB,SAACvO,EAAwBkB,EAAerP,GAAqC,IAAD,EACnE,EAAKlC,MAAlCyC,EADgG,EAChGA,WAAY4O,EADoF,EACpFA,KAAMwN,EAD8E,EAC9EA,OAClBhK,EAA4B3S,EAAM6M,UAAlC8F,aAFgG,EAGxD3S,EAAMsc,OAA9C5G,EAHgG,EAGhGA,YAAaK,EAHmF,EAGnFA,YAEf6G,GAAyB,EAAKJ,cAAcnN,IAAU,CAC1DwN,eAAgBnH,EAChBoH,eAAgB/G,GAGZgH,EAA6B,EAAKR,eAAelN,IAAU,CAC/D2N,qBAAsBrK,EACtBsK,wBAAyBtK,GAGrBuK,EAA2B,EAAKV,cAAcnN,IAAU,CAC5D8N,mBAAoBxK,EACpByK,sBAAuBzK,GAGzB,OAAOrO,IAAMkI,aAAa2B,EAAS,CACjClM,IAAKoN,EACL9O,WAAYA,EACZ4O,KAAMA,EACNwN,OAAQA,EACR3c,MAAO,CAACmO,EAAQrQ,MAAMkC,MAAO4B,GAAO0a,OAAQM,EAAYG,EAAiBG,M,EAIrEG,qBAAuB,SAAC1c,EAAsBX,GACpD,OAAOsE,IAAMoI,SAAS/J,IAAIhC,GAAQ,SAACwN,EAAwBkB,GACzD,OAAO,EAAKqN,oBAAoBvO,EAASkB,EAAOrP,O,wDAIJ,IAAD,EACahC,KAAKF,MAAvD0D,EADqC,EACrCA,YAAaxB,EADwB,EACxBA,MAAO4L,EADiB,EACjBA,SAAayB,EADI,0CAEvCuF,EAA4B5U,KAAKsU,kBAAkB9Q,GAEnD8b,EAAkCtf,KAAKqf,qBAAqBzR,EAAUgH,GAE5E,OACE,kBAAC3F,GAAA,EAAD,OACMI,EADN,CAEErN,MAAO,CAAC4S,EAAe/F,UAAWjL,GAAOiL,UAAW7M,KACnDsd,O,GAxE0BhZ,IAAMI,WAAnCyX,GAEGxX,oBAA8B,cA4EvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfkJ,SAAU,UAEZjB,OAAQ,CACN3J,aAAc,EACd+C,YAAa,KAIJ8H,GAAc/Y,EAAyB0X,ICzHvCsB,GAAb,mLAEUC,wBAA0B,SAAC1d,EAA8B6X,GAC/D,OACE,kBAAC,GAAD,CACE7X,MAAOA,EACP6X,UAAWA,KANnB,EAWU8F,gBAAkB,SAAC3d,GAAuC,IACxD4d,EAAc,EAAK9f,MAAnB8f,UAER,OAAO,EAAKF,wBAAwBE,EAAW,WAdnD,EAiBUC,eAAiB,SAAC7d,GAAuC,IACvD4d,EAAc,EAAK9f,MAAnB8f,UAER,OAAO,EAAKF,wBAAwB,CAACE,EAAWhc,GAAOkc,aAAc,SApBzE,EAuBUC,gBAAkB,SAAC/d,GAAuC,IACxD4d,EAAc,EAAK9f,MAAnB8f,UAER,OAAO,EAAKF,wBAAwB,CAACE,EAAWhc,GAAOkc,aAAc,UA1BzE,EA6BUE,gCAAkC,WACxC,OACE,kBAAC/Q,GAAA,EAAD,CAAMjN,MAAO4B,GAAOqc,cAClB,kBAAC,GAAD,CACEje,MAAO4B,GAAOsc,aACd3d,WAAW,QAEXia,KAAM,EAAKqD,eACX/Q,QAAS,EAAKhP,MAAMqgB,wBAEtB,kBAAC,GAAD,CACEne,MAAO4B,GAAOsc,aACd3d,WAAW,QAEXia,KAAM,EAAKuD,gBACXjR,QAAS,EAAKhP,MAAMsgB,2BA5C9B,wDAkDkD,IAAD,EAC8CpgB,KAAKF,MAAxFkC,EADqC,EACrCA,MAAO6a,EAD8B,EAC9BA,WAAYwD,EADkB,EAClBA,aAAczD,EADI,EACJA,MAAO0D,EADH,EACGA,yBAA6BpgB,EADhC,gFAG7C,OACE,kBAAC+O,GAAA,EAAD,KAAMjN,MAAO,CAAC4B,GAAOiL,UAAW7M,IAAY9B,GAC1C,kBAAC,GAAD,CACE8B,MAAO4B,GAAOsc,aACd3d,WAAW,QACXqb,UAAW,CAACf,EAAYjZ,GAAO2c,kBAE/B/D,KAAMxc,KAAK2f,gBACX7Q,QAASuR,GACRzD,GAEF0D,GAA4BtgB,KAAKggB,uCAhE1C,GAAoC1Z,IAAMI,WAsEpC9C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfF,WAAY,SACZC,eAAgB,iBAElB8J,aAAc,CACZM,gBAAiB,EACjBC,kBAAmB,EACnBC,SAAU,GACVC,UAAW,IAEbJ,iBAAkB,CAChBtG,iBAAkB,GAEpB6F,YAAa,CACX7F,iBAAkB,GAEpBgG,aAAc,CACZ5J,cAAe,MACfF,WAAY,YClGHyK,GAAb,yIAEkD,IAAD,EACG5gB,KAAKF,MAA7CkC,EADqC,EACrCA,MAAO6e,EAD8B,EAC9BA,KAAMjT,EADwB,EACxBA,SAAa1N,EADW,mCAG7C,OACE,kBAAC+O,GAAA,EAAD,OACM/O,EADN,CAEE8B,MAAO,CAAC4B,GAAOiL,UAAW7M,KACzB6e,EAAKlc,IAAIiJ,QATlB,GAAyCtH,IAAMI,WAezC9C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTuH,eAAgB,SAChBC,cAAe,S,yOCsBZ,IAAMyK,GAAb,mLAOUC,aAAsCza,IAAM2W,YAPtD,EAQU+D,aAAuB,EARjC,EASUC,mBAA6B,EATvC,EAUU1I,cAAgC,IAAI/E,KAASC,MAAM,EAAKwN,oBAVlE,EAWUC,aAAqCC,KAAaxR,OAAb,SAX/C,EA4BSyR,4BAA8B,SAACrI,EAA8BzT,GAGlE,GAFkCyL,KAAKsQ,IAAI/b,EAAMgc,IAAM,GAAKvQ,KAAKsQ,IAAI/b,EAAMgc,IAAMvQ,KAAKsQ,IAAI/b,EAAMic,IAE1E,CACpB,IAAMC,EAAqB/K,GAAkBoC,OAAOvT,EAAMgc,IAAKhc,EAAMgc,IAC/DG,EAA4B,EAAK3hB,MAAMya,cAAgBxJ,KAAK2Q,KAAKF,GAEvE,OAAOC,GAAqB,GAAKA,EAAoB,EAAKE,gBAG5D,OAAO,GAtCX,EAyCSC,mBAAqB,SAAC7I,EAA8BzT,GACzD,IAAMkc,EAAqB/K,GAAkBoC,OAAO,EAAKmI,cAAe,EAAKA,cACvEa,EAA6B,EAAK/hB,MAAMya,cAAgBiH,EAE9D,EAAKjJ,cAAcuJ,SAASxc,EAAMgc,GAAKO,IA7C3C,EAgDSE,sBAAwB,SAAChJ,EAA8BzT,GAC5D,GAAIyL,KAAKsQ,IAAI/b,EAAM0c,KAAO,IAAOjR,KAAKsQ,IAAI/b,EAAMgc,KAAO,GAAM,EAAKN,aAAc,CAC9E,IACM3P,EADqBoF,GAAkBoC,OAAOvT,EAAMgc,IAAKhc,EAAMgc,IAClC,EAAI,EAAKxhB,MAAMya,cAAgB,EAAI,EAAKza,MAAMya,cAAgB,EACjG,EAAKf,cAAc,CAAEnI,QAAOuH,UAAU,QACjC,CACL,IAAMvH,EAAgB,EAAKvR,MAAMya,cACjC,EAAKf,cAAc,CAAEnI,QAAOuH,UAAU,MAvD5C,EAmESO,eAAiB,SAAC9N,GACvB,EAAKqN,sBAAsBrN,GAAQyH,MAAM,EAAK2F,mCApElD,EAuEUK,SAAW,SAACC,GAClB,EAAKiI,aAAejI,EAAME,YAAYC,OAAOpJ,MAAQ,EAAK6R,gBAE1D,EAAKnI,cAAc,CACjBnI,MAAO,EAAKvR,MAAMya,iBA3ExB,EA+EU/B,qCAAuC,SAAClT,GAC9C,EAAK2b,mBAAqBxK,GAAkBoC,QAAQvT,EAAMxE,MAAOwE,EAAMxE,OAEnE,EAAKhB,MAAMmiB,gBACb,EAAKniB,MAAMmiB,eAAe,EAAKhB,qBAnFrC,EAuFUxI,iCAAmC,SAAC1O,GAC1C,IAAMwQ,EAAwB,EAAK0G,mBAAqB,EAAKD,aAEzDzG,IAAkB,EAAKza,MAAMya,eAAiB,EAAKza,MAAMwa,UAC3D,EAAKxa,MAAMwa,SAASvJ,KAAKmR,MAAM3H,KA3FrC,EA+FU7B,sBAAwB,SAACrN,GAC/B,IAAMsN,EAA4BtN,EAAOuN,SAAW,IAAM,EAE1D,OAAOpF,KAASI,OAAO,EAAK2E,cAAe,CACzC1E,QAAS4C,GAAkBoC,QAAQxN,EAAO4I,OAAQ5I,EAAO4I,QACzDd,OAAQC,KAAOC,OACfC,SAAUqF,KArGhB,EAyGUpK,qBAAuB,SAAC5L,EAAsB0O,GACpD,IAAM8Q,EAAmC,EAAKriB,MAAMsiB,oBAAoB/Q,GAAS1O,EAAS,KAE1F,OACE,kBAACsM,GAAA,EAAD,CAAMjN,MAAO4B,GAAOye,kBACjBF,IA9GT,EAmHU1T,wBAA0B,SAAC9L,GACjC,OAAO2D,IAAMoI,SAAS/J,IAAIhC,EAAQ,EAAK4L,uBApH3C,EAuHUoT,cAAgB,WACtB,OAAOrb,IAAMoI,SAAS+P,MAAM,EAAK3e,MAAM8N,WAxH3C,EA2HU0U,kBAAoB,WAC1B,MAAO,CACLxS,MAAU,IAAM,EAAK6R,gBAAhB,IAGL9b,UAAW,CAAC,CAAEsO,WAAY,EAAKoE,kBAhIrC,mEAcIvY,KAAKuY,cAAce,YAAYtZ,KAAKwY,wCAdxC,yCAiB4B+J,GACxB,GAAIA,EAAUhI,gBAAkBva,KAAKF,MAAMya,cAAe,CACxD,IAAMlJ,EAAgBrR,KAAKF,MAAMya,cACjCva,KAAKwZ,cAAc,CAAEnI,QAAOuH,UAAU,OApB5C,6CAyBI5Y,KAAKuY,cAAckB,uBAzBvB,oCA2DuBpO,GAAsD,IACjEgG,EAAmBhG,EAAnBgG,MAAUqI,EADsD,IAC7CrO,EAD6C,WAElEmX,EAAaxiB,KAAK2hB,gBAAkB,EACpC1N,EAAiBjU,KAAKghB,cAAgB3P,EAAQ,EAAI,EAAIA,EAAQmR,EAAaA,EAAanR,GAE9FrR,KAAKmZ,e,mVAAL,EAAsBlF,UAAWyF,MAhErC,+BAoIkD,IAAD,EACH1Z,KAAKF,MAAvCkC,EADqC,EACrCA,MAAO4L,EAD8B,EAC9BA,SAAa1N,EADiB,4BAG7C,OACE,kBAACsT,GAAA,EAASvE,KAAV,OACM/O,EADN,CAEEmH,IAAKrH,KAAK+gB,aACV/e,MAAO,CAAC4B,GAAOiL,UAAW7M,EAAOhC,KAAKsiB,qBACtCxJ,SAAU9Y,KAAK8Y,UACX9Y,KAAKkhB,aAAauB,aACrBziB,KAAKyO,wBAAwBb,QA9ItC,GAA+BtH,IAAMI,WAAxBoa,GAEJ9Z,aAAwC,CAC7CuT,cAAe,EACf6H,oBAAqB,kBAAe,IAgJxC,IAAMxe,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,OAEjBgM,iBAAkB,CAChBtQ,KAAM,EACNjC,MAAO,UCvME4S,GAAb,mLAMUC,aAA2Crc,IAAM2W,YAN3D,EAQU3C,SAAW,SAACjJ,GAElBuR,YAAW,WACT,EAAK9iB,MAAMwa,SAASjJ,OAX1B,EAeU+Q,oBAAsB,SAAC/Q,GAC7B,OAAI,EAAKvR,MAAMsiB,qBACN,EAAKtiB,MAAMsiB,oBAAoB/Q,IAjB5C,EAsBUwR,mBAAqB,SAACC,EAA2BzR,GACvD,OAAI,EAAK+Q,oBAAoB/Q,GACpB,EAAKvR,MAAM8N,SAASkV,EAAMzR,GAE5B,MA1BX,6DAEuBhG,GACnBrL,KAAK2iB,aAAanhB,QAAQgY,cAAcnO,KAH5C,+BA6BqC,IAAD,EACSrL,KAAKF,MAAtC+gB,EADwB,EACxBA,KAAmB3gB,GADK,EAClB0N,SADkB,4BAGhC,OACE,kBAAC,GAAD,OACM1N,EADN,CAEEmH,IAAKrH,KAAK2iB,aACVP,oBAAqBpiB,KAAKoiB,oBAC1B9H,SAAUta,KAAKsa,WACduG,EAAKlc,IAAI3E,KAAK6iB,yBAtCvB,GAAsCvc,IAAMI,WCO/Bqc,GAAb,yIAEkD,IAAD,EACK/iB,KAAKF,MAA/CkC,EADqC,EACrCA,MAAO6e,EAD8B,EAC9BA,KAAMmC,EADwB,EACxBA,WAAe9iB,EADS,qCAG7C,OACE,kBAAC+O,GAAA,EAAD,OACM/O,EADN,CAEE8B,MAAO,CAAC4B,GAAOiL,UAAW7M,KACzB6e,EAAKlc,IAAIqe,QATlB,GAA0C1c,IAAMI,WAe1C9C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfkJ,SAAU,Y,yjBCHR0D,G,mLAgBInU,QAAU,WACZ,EAAKhP,MAAMwa,UACb,EAAKxa,MAAMwa,SAAS,EAAKxa,MAAMgjB,O,EAI3BI,yBAA2B,SAACvO,GAAqC,IAAD,EAC5B,EAAK7U,MAAvCqjB,EAD8D,EAC9DA,eAAgBC,EAD8C,EAC9CA,cAExB,OAAID,EACK,CACLtL,uBAAwBlD,EACxBmD,wBAAyB,EACzBH,oBAAqBhD,EACrBiD,qBAAsB,GAGtBwL,EACK,CACLvL,uBAAwB,EACxBC,wBAAyBnD,EACzBgD,oBAAqB,EACrBC,qBAAsBjD,GAInB,I,EAGDL,kBAAoB,SAAC3R,GAAkC,IAE3D0gB,EAWE1gB,EAXF0gB,mBACAC,EAUE3gB,EAVF2gB,oBACAC,EASE5gB,EATF4gB,mBACAC,EAQE7gB,EARF6gB,uBACAC,EAOE9gB,EAPF8gB,oBACAC,EAME/gB,EANF+gB,sBACAC,EAKEhhB,EALFghB,sBACAC,EAIEjhB,EAJFihB,iBACAC,EAGElhB,EAHFkhB,sBACAlP,EAEEhS,EAFFgS,aAIF,MAAO,CACL9F,UAAU,MAhBgD,IAaxDlM,EAbwD,4NAgBjD,GAEJ,EAAKugB,yBAAyBvO,IAEnC0N,iBAAkB,CAChB3K,YAAa2L,EACb1O,aAAc2O,EACdvL,YAAawL,EACblO,gBAAiBmO,GAEnBM,YAAa,CACX1H,SAAUqH,EACVnH,WAAYqH,EACZtH,WAAYqH,EACZnH,MAAOqH,EACPzH,WAAY0H,K,EAKVE,qBAAuB,SAACphB,EAAyBX,GACvD,OAAOW,GAAUA,EAAO,EAAK7C,MAAMgjB,KAAM,CACvCjU,UAAW7M,EAAMqgB,iBACjBpG,KAAMja,EAAM8hB,e,qEA3EavK,GAC3B,OAAIA,EAAUyK,uBACLzK,EAAUyK,sBAAsBhkB,KAAKF,MAAOyZ,K,+BA6EK,IAAD,EACcvZ,KAAKF,MAApEkC,EADiD,EACjDA,MAAOwB,EAD0C,EAC1CA,YAA6BoK,GADa,EAC7BkV,KAD6B,EACvBmB,SADuB,EACbrW,UAAa1N,EADA,8DAEfF,KAAKsU,kBAAkB9Q,GAAzDqL,EAFiD,EAEjDA,UAAcnL,EAFmC,qBAIzD,OACE,kBAACkL,GAAA,EAAD,KACEG,cAAe,EACfD,QAAS9O,KAAK8O,SACV5O,EAHN,CAIE8B,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW7M,KACpChC,KAAK+jB,qBAAqBnW,EAAUlK,Q,GAlGA4C,IAAMI,WAA7Cuc,GAEGtc,oBAA8B,eAFjCsc,GAIGjc,aAAe,CACpB+T,UAAU,EACVmJ,OAAO,GAkGX,IAAMtgB,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTkD,KAAM,KAIGoS,GAAqB1d,EAAOwc,IC7G5BmB,GAAb,mLAUUC,iBAAmB,SAAC3J,EAA2B4J,GACrD,OAA+B,IAAxBA,EAAM/Z,QAAQmQ,IAXzB,EAcU6J,gBAAkB,SAAC7J,EAA2B4J,GACpD,OAAOA,EAAM/Z,QAAQmQ,KAAU4J,EAAMjgB,OAAS,GAflD,EAkBUmgB,kBAAoB,SAAC9J,EAA2BrJ,GACtD,IAAMgT,EAA4B,EAAKA,iBAAiB3J,EAAM,EAAK+J,aAC7DF,EAA2B,EAAKA,gBAAgB7J,EAAM,EAAK+J,aAEjE,OACE,kBAACN,GAAD,CACElgB,IAAKoN,EACLyR,KAAMpI,EACNgK,SAAU,EAAK5kB,MAAM4kB,SACrB3J,SAAU,EAAKjb,MAAM6kB,eAAejK,GACpCkK,SAAU,EAAK9kB,MAAM+kB,eAAenK,GACpCuJ,SAAUvJ,EAAKuJ,SACfC,MAAO,EAAKpkB,MAAMglB,YAAYpK,GAC9B4J,MAAO5J,EAAK4J,MACZnB,eAAgBkB,EAChBjB,cAAemB,EACfjK,SAAU,EAAKxa,MAAMwa,SACrB0J,sBAAuB,EAAKlkB,MAAMilB,kBACjC,EAAKjlB,MAAMkjB,aApCpB,EAyCUgC,iBAAmB,SAACtK,EAA6BrJ,GAAgD,IAC/F4T,EAAa,EAAKnlB,MAAlBmlB,SAER,OACE,kBAAC,GAAD,CACEjjB,MAAOijB,EACPhhB,IAAKoN,EACLwP,KAAMnG,EACNsI,WAAY,EAAKwB,qBAjDzB,wDAsDkD,IAAD,EACFxkB,KAAKF,MAAxC+gB,EADqC,EACrCA,KAAqB3gB,GADgB,EAC/B8iB,WAD+B,8BAG7C,OACE,kBAAC/T,GAAA,EACK/O,EACH2gB,EAAKlc,IAAI3E,KAAKglB,qBA5DvB,kCAEqD,IAAD,EACxCnE,EAAS7gB,KAAKF,MAAd+gB,KAER,OAAO,MAAG3W,OAAH,YAAa2W,IAAM7b,QAAO,SAAC0V,GAChC,OAAOA,EAAK4J,aANlB,GAAuChe,IAAMI,WCfhCwe,GAAb,yIAEkD,IAAD,EACQllB,KAAKF,MAAlDkC,EADqC,EACrCA,MAAO4b,EAD8B,EAC9BA,UAAWhQ,EADmB,EACnBA,SAAa1N,EADM,wCAG7C,OACE,kBAAC+O,GAAA,EAAD,OACM/O,EADN,CAEE8B,MAAO,CAAC4B,GAAOiL,UAAW7M,KAC1B,kBAAC,GAAD,CAAMA,MAAO4b,GAAYhQ,QATjC,GAAyCtH,IAAMI,WAezC9C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTkD,KAAM,EACNqE,eAAgB,SAChBD,WAAY,YC5BVgP,GAAmC,CACvCC,GAAI,OACJC,eAAgB,WACd,OAAOC,IAETC,SAAU,WACR,OAAOJ,KAILK,GAAoC,CACxCJ,GAAI,QACJC,eAAgB,WACd,OAAOF,IAETI,SAAU,WACR,OAAOJ,KAILG,GAAmC,CACvCF,GAAI,OACJC,eAAgB,WACd,OAAOF,IAETI,SAAU,WACR,OAAOC,KAgBEC,GAAuC,CAClDC,KAAMP,GACNQ,MAAOH,GACPI,KAAMN,ICrDcO,GAAtB,kFAMmBC,GACf9lB,KAAK8lB,OAASA,IAPlB,uCAU0BC,EAAUC,GAChC,OAAID,GAASC,EACJhmB,KAAKimB,aAAaF,EAAOC,GACtBD,GAAUC,GAGd,EAFC,IAdb,gCAsBmBlD,EAAShQ,EAAUI,GAClC,OAAOlT,KAAKimB,aAAanD,EAAMhQ,GAAS,GAAK9S,KAAKimB,aAAanD,EAAM5P,GAAO,IAvBhF,oCA6BuB4P,EAAShQ,EAAUI,GACtC,OAAO4P,GAAQhQ,GAASI,GAAOlT,KAAKimB,aAAanD,EAAMhQ,GAAS,GAAK9S,KAAKimB,aAAanD,EAAM5P,GAAO,IA9BxG,yCAoC4B4P,EAAShQ,EAAUI,GAC3C,OAAOlT,KAAKimB,aAAanD,EAAMhQ,IAAU,GAAK9S,KAAKimB,aAAanD,EAAM5P,IAAQ,IArClF,6CA2CgC4P,EAAShQ,EAAUI,GAC/C,OAAO4P,GAAQhQ,GAASI,GAAOlT,KAAKkmB,mBAAmBpD,EAAMhQ,EAAOI,KA5CxE,oCAkDuB6S,EAAUC,GAC7B,OAAOD,GAASC,GAAShmB,KAAKmmB,UAAUJ,EAAOC,KAnDnD,sCAyDyBD,EAAUC,GAC/B,OAAOD,GAASC,GAAShmB,KAAKomB,YAAYL,EAAOC,KA1DrD,qCAgEwBD,EAAUC,GAC9B,OAAOD,GAASC,GAAShmB,KAAKqmB,WAAWN,EAAOC,OAjEpD,KAAsBH,GACbS,aAAuB,EADVT,GAEbU,eAAyB,G,ICAtBC,G,uCAAAA,K,cAAAA,E,aAAAA,Q,KCPL,IAAMC,GAAiB,CAC5BC,SAAU,CACRC,MAAO,CACL,KACA,KACA,KACA,KACA,KACA,KACA,MAEFC,KAAM,CACJ,SACA,SACA,UACA,YACA,WACA,SACA,aAGJC,WAAY,CACVF,MAAO,CACL,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OAEFC,KAAM,CACJ,UACA,WACA,QACA,QACA,MACA,OACA,OACA,SACA,YACA,UACA,WACA,c,+NCpCC,IAAME,GAAiB,KAQxBC,GAA4C,CAChDC,eAAgB,GAOLC,GAAb,YAIE,aAAkF,IAAD,EAArEnB,EAAqE,uDAApDgB,GAAgBI,EAAoC,2DAC/E,+BACKA,Q,mVAAL,IAAoBH,GAApB,GAAwCG,GACxC,wDAAgB,EAAKA,QAAQC,KAAOrB,EAASgB,IAC7C,EAAKM,mBAAmB,EAAKF,QAAQC,MAAQV,IAJkC,EAJnF,uDAWmBX,GACfzjB,QAAQe,KAAK,qCAZjB,wCAe2B0f,EAAcuE,GACrC,OAAQC,MAAMtnB,KAAKunB,MAAMzE,EAAMuE,GAAQG,aAhB3C,8BAoBI,OAAO,IAAIC,OApBf,8BAuBiB3E,GACb,OAAOA,EAAK4E,YAxBhB,+BA2BkB5E,GACd,OAAOA,EAAK6E,aA5BhB,8BA+BiB7E,GACb,OAAOA,EAAK8E,gBAhChB,mCAmCsB9E,GAClB,OAAOA,EAAK+E,WApChB,0CA4CI,OAAO7nB,KAAKknB,QAAQF,iBA5CxB,mCA+CsBlE,GAAuE,IAA3D9gB,EAA0D,uDAAhCwkB,GAAiBsB,MACnEzW,EAAgByR,EAAK6E,WAE3B,OAAO3nB,KAAK+nB,oBAAoB1W,EAAOrP,KAlD3C,0CAqD6BqP,GAA0E,IAA3DrP,EAA0D,uDAAhCwkB,GAAiBsB,MACnF,OAAO9nB,KAAKgoB,mBAAmBhmB,GAAOqP,KAtD1C,0CAyDwF,IAA7DrP,EAA4D,uDAAlCwkB,GAAiBsB,MAC5DpB,EAAqB1mB,KAAKioB,iBAAiBjmB,GAGjD,OAAOhC,KAAKkoB,oBAAL,IAA6BxB,GAAW1mB,KAAKknB,QAAQF,kBA7DhE,6BAgEgBlE,EAAYuE,GACxB,OAAOc,KAAMd,OAAOvE,EAAMuE,KAjE9B,4BAuEevE,EAAcuE,GACzB,OAAO,IAAII,KAAKA,KAAKF,MAAMzE,MAxE/B,6BA2EgBA,EAAYsF,GACxB,OAAOpoB,KAAKqoB,WAAWvF,EAAK8E,cAAe9E,EAAK6E,WAAY7E,EAAK4E,UAAYU,KA5EjF,+BA+EkBtF,EAAYsF,GAC1B,IAAME,EAActoB,KAAKqoB,WAAWvF,EAAK8E,cAAe9E,EAAK6E,WAAaS,EAAK,GAM/E,OAFAE,EAAMC,QAAQxX,KAAKyX,IAAI1F,EAAK4E,UAAW1nB,KAAKyoB,YAAYH,GAAOZ,YAExDY,IAtFX,8BAyFiBxF,EAAYsF,GACzB,OAAOpoB,KAAKqoB,WAAWvF,EAAK8E,cAAgBQ,EAAKtF,EAAK6E,WAAY7E,EAAK4E,aA1F3E,4BA6Fe5E,GACX,OAAO,IAAI2E,KAAK3E,EAAK0E,aA9FzB,mCAiGsBzB,EAAaC,GAC/B,OAAOD,EAAMyB,UAAYxB,EAAMwB,YAlGnC,uCAqG0BzB,EAAaC,GACnC,OAAIhmB,KAAKimB,aAAaF,EAAOC,GAAS,GAC5B,EACChmB,KAAKimB,aAAaF,EAAOC,GAAS,EACpC,EACsC,IAApChmB,KAAKimB,aAAaF,EAAOC,GAC3B,OADF,IA1GX,iCA+GoB0C,EAAcJ,EAAexF,GAC7C,IAAM/Y,EAAS,IAAI0d,KAAKiB,EAAMJ,EAAOxF,GAQrC,OAJI4F,GAAQ,GAAKA,EAAO,KACtB3e,EAAO4e,YAAY5e,EAAO6d,cAAgB,MAGrC7d,IAxHX,kCA2HqB+Y,GACjB,OAAO9iB,KAAKqoB,WAAWvF,EAAK8E,cAAe9E,EAAK6E,WAAa,EAAG,KA5HpE,oCA+HuB7E,GACnB,OAAO9iB,KAAKqoB,WAAWvF,EAAK8E,cAAe9E,EAAK6E,WAAY,KAhIhE,6CAmIgC7E,GAC5B,OAAO9iB,KAAKyoB,YAAY3F,GAAM4E,YApIlC,iCAuIoB5E,GAChB,OAAO9iB,KAAKqoB,WAAWvF,EAAK8E,cAAe,GAAI,MAxInD,mCA2IsB9E,GAClB,OAAO9iB,KAAKqoB,WAAWvF,EAAK8E,cAAe,EAAG,KA5IlD,gCA+ImB7B,EAAaC,GAC5B,OAAOhmB,KAAKomB,YAAYL,EAAOC,IAAUD,EAAM2B,YAAc1B,EAAM0B,YAhJvE,kCAmJqB3B,EAAaC,GAC9B,OAAOhmB,KAAKqmB,WAAWN,EAAOC,IAAUD,EAAM4B,aAAe3B,EAAM2B,aApJvE,iCAuJoB5B,EAAaC,GAC7B,OAAOD,EAAM6B,gBAAkB5B,EAAM4B,gBAxJzC,8BA4JI,MAAO,WA5JX,0CA+JmC9mB,EAAYmT,GAC3C,OAAOnT,EAAM8nB,OAAO3U,GAAQ/J,OAAOpJ,KAhKvC,uCAmK2BkB,GACvB,OAAQA,GACN,KAAKwkB,GAAiBsB,MACpB,OAAOK,KAAMhB,KAAK0B,cACpB,KAAKrC,GAAiBsC,KACpB,OAAOX,KAAMhB,KAAKT,YAxK1B,yCA4K6B1kB,GACzB,OAAQA,GACN,KAAKwkB,GAAiBsB,MACpB,OAAOK,KAAMhB,KAAK4B,gBACpB,KAAKvC,GAAiBsC,KACpB,OAAOX,KAAMhB,KAAKN,cAjL1B,yCAqL6BzW,GACzB+X,KAAMhB,KAAKT,SAAWtW,EAAOsW,SAASF,GAAiBsC,MACvDX,KAAMhB,KAAK0B,cAAgBzY,EAAOsW,SAASF,GAAiBsB,OAC5DK,KAAMhB,KAAKN,WAAazW,EAAOyW,WAAWL,GAAiBsC,MAC3DX,KAAMhB,KAAK4B,gBAAkB3Y,EAAOyW,WAAWL,GAAiBsB,WAzLpE,GAAuCjC,ICxB1BmD,GAAQ,SAAIvoB,EAAawoB,GAAkD,IAA/BhV,EAA8B,uDAAb,EACxE,OAAOxT,EAAOa,QAAO,SAAC4nB,EAAKxO,EAAMrJ,GAC/B,IAAM8X,EAAapY,KAAKqY,OAAO/X,EAAQ4C,GAAUgV,GAMjD,OALKC,EAAIC,KACPD,EAAIC,GAAc,IAEpBD,EAAIC,GAAY/kB,KAAKsW,GAEdwO,IACN,KAMQ5E,GAAQ,SAAI+E,GAGvB,IAH4E,IAAtCC,EAAqC,uDAAX,SAAAC,GAAC,OAAIA,GAC/DC,EAAW,GAERD,EAAI,EAAGA,EAAIF,EAAOE,IACzBC,EAAIplB,KAAKklB,EAASC,IAGpB,OAAOC,G,qjBCXT,IAAMC,GAA4C,CAChDxF,UAAU,EACVyF,SAAS,EACTpF,OAAO,GAMIqF,GAAb,WAEE,WAAsBC,GAA8B,IAAD,wBAA7BA,cAA6B,KAG5CC,oBAAsB,SAAC/G,EAASgH,GACrC,IAAMC,EAAsB,EAAKC,YAAYlH,EAAM2G,GAAsBK,GAEzE,OAAO,EAAKG,mBAAmBF,EAAOjH,IANW,KAS5CoH,sBAAwB,SAACpH,EAASqH,EAAcC,GACrD,IAAMC,EAAe,EAAKT,YAAYU,aAAaxH,GAC7CyH,EAA2BjG,GAAM6F,EAAOC,GAAS,SAAC/Y,GAEtD,OAAO,IAAEyR,KADY,EAAK8G,YAAYY,SAASH,EAAWhZ,IAC7BoY,OAG/B,OAAOT,GAAMuB,EAAYJ,IAhBwB,KAmB5CM,qBAAuB,SAAC3H,EAASqH,EAAcC,GACpD,IAAMC,EAAe,EAAKT,YAAYU,aAAaxH,GAC7C4H,EAA0BpG,GAAM6F,EAAOC,GAAS,SAAC/Y,GAErD,OAAO,IAAEyR,KADW,EAAK8G,YAAYe,QAAQN,EAAWhZ,IAC5BoY,OAG9B,OAAOT,GAAM0B,EAAWP,IA1ByB,KA6B5CS,yBAA2B,SAACC,EAAcC,GAC/C,IAAMC,EAA6B,EAAKC,kBAAkBH,EAAWC,GAAW,EAEhF,OAAOxG,GAAMyG,GAAoB,SAAC1Z,GAEhC,OAAO,IAAEyR,KADY,EAAK8G,YAAYY,SAASK,EAAWxZ,IAC7BoY,QAlCkB,KAsC5CwB,0BAA4B,SAACJ,EAAcC,EAAYX,EAAcC,GAC1E,IAAMc,EAAwB,EAAKC,iBAAiBN,EAAWC,GAAW,EACpEM,EAA8Bra,KAAKsa,IAAIta,KAAKua,KAAKJ,GAAiBf,EAAOC,IAAW,GAE1F,OAAO9F,GAAM8G,GAAqB,SAAC/Z,GAEjC,OAAO,IAAEyR,KADW,EAAK8G,YAAYe,QAAQE,EAAWxZ,EAAQ8Y,EAAOC,IAC3CX,QA5CmB,KAgD5CuB,kBAAoB,SAAC9kB,EAAQC,GAClC,IAAM+kB,EAAwB,EAAKC,iBAAiBjlB,EAAKC,GAGzD,OAF+B,EAAKyjB,YAAYjC,SAASxhB,GAAO,EAAKyjB,YAAYjC,SAASzhB,GAElEglB,EAAgBrF,GAAYU,gBApDH,KAuD5C4E,iBAAmB,SAACjlB,EAAQC,GACjC,OAAO,EAAKyjB,YAAY2B,QAAQplB,GAAO,EAAKyjB,YAAY2B,QAAQrlB,IA1DpE,gDA6DsBslB,EAAgBtE,EAA8B4C,GAChE,IAAI2B,EAAqBzrB,KAAK0rB,wBAAwBF,EAAatE,GAE/D4C,IACF2B,EAAOzrB,KAAK2rB,gBAAgBF,EAAM3B,IAGpC,IAAM8B,EAA6B5rB,KAAK6rB,sBAAsBL,GAE9D,OAAOxC,GAAMyC,EAAM5F,GAAYS,aAAcsF,KAtEjD,sCAyE0BH,EAAoBK,GAC1C,OAAIA,EAAcjB,YAAciB,EAAchB,QACrC9qB,KAAK+rB,qBAAqBN,EAAMK,EAAcjB,WAGnDiB,EAAcjB,WAAaiB,EAAchB,QACpC9qB,KAAKgsB,wBAAwBP,EAAMK,EAAcjB,UAAWiB,EAAchB,SAG5EW,IAlFX,2CAqF+BA,EAAoBZ,GAA0B,IAAD,OACxE,OAAOY,EAAK9mB,KAAI,SAACsnB,GAEf,OAD4F,IAA3D,EAAKrC,YAAYsC,iBAAiBD,EAAInJ,KAAM+H,GACvD,MAAQoB,EAAR,CAAa3H,OAAO,IAAS2H,OAxFzD,8CA4FkCR,EAAoBZ,EAAcC,GAA2B,IAAD,OAC1F,OAAOW,EAAK9mB,KAAI,SAACsnB,GACf,IAAME,EAAsF,IAA3D,EAAKvC,YAAYsC,iBAAiBD,EAAInJ,KAAM+H,GACvEuB,EAAkF,IAAzD,EAAKxC,YAAYsC,iBAAiBD,EAAInJ,KAAMgI,GAE3E,OACS,MAAKmB,EADVE,GAAmBC,EACrB,CAAiB9H,OAAO,GAGxB,CAAiBA,MADU,EAAKsF,YAAYyC,UAAUJ,EAAInJ,KAAM+H,EAAWC,UApGnF,yCA0G6Bf,EAAqByB,GAC9C,IAAIvB,EAAmCF,EAUvC,OARI/pB,KAAKssB,6BAA6BrC,KACpCA,EAAqBjqB,KAAKusB,qBAAqBtC,EAAoBuB,IAGjExrB,KAAKwsB,6BAA6BvC,KACpCA,EAAqBjqB,KAAKysB,qBAAqBxC,EAAoBuB,IAG9DvB,IArHX,2CAwH+BF,EAAqByB,GAChD,IAAMkB,EAA0B3C,EAAM5f,QAChCwiB,EAAgC9G,GAAYS,aAAeoG,EAAUroB,OAG3E,OAFAqoB,EAAUE,QAAV,MAAAF,EAAS,IAAY1sB,KAAK6sB,uBAAuBrB,EAAamB,KAExD,CAAED,GAAR,WAAsB3C,MA7H1B,2CAgI+BA,EAAqByB,GAChD,IAAMsB,EAAyB/C,EAAMgD,MAC/BJ,EAAgC9G,GAAYS,aAAewG,EAASzoB,OAG1E,OAFAyoB,EAAS1oB,KAAT,MAAA0oB,EAAQ,IAAS9sB,KAAKgtB,uBAAuBxB,EAAamB,KAEpD,GAAN,WAAW5C,GAAX,CAAkB+C,MArItB,6CAwIiCtB,EAAgBmB,GAC7C,IAAMrE,EAAWtoB,KAAK4pB,YAAYY,SAASgB,GAAc,GACnDyB,EAAsBjtB,KAAK4pB,YAAYsD,uBAAuB5E,GAEpE,OAAOtoB,KAAK0rB,wBAAwBpD,EAAOmB,IACxC0D,MAAMF,EAAcN,GACpBhoB,KAAI,SAACme,GACJ,OAAO,MAAKA,EAAZ,CAAkBmB,UAAU,SA/IpC,6CAmJiCuH,EAAgBmB,GAC7C,IAAMrE,EAAWtoB,KAAK4pB,YAAYY,SAASgB,EAAa,GAExD,OAAOxrB,KAAK0rB,wBAAwBpD,EAAOmB,IACxC0D,MAAM,EAAGR,GACThoB,KAAI,SAACme,GACJ,OAAO,MAAKA,EAAZ,CAAkBmB,UAAU,SAzJpC,4CA6JgCnB,GAC5B,IAAMsK,EAAkBptB,KAAK4pB,YAAYyD,cAAcvK,GAEvD,OAAO9iB,KAAKstB,iBAAiBF,KAhKjC,uCAmK2BtK,GACvB,OACE+C,GAAYS,aACVtmB,KAAK4pB,YAAY2D,oBACjBvtB,KAAK4pB,YAAY4D,aAAa1K,IAC9B+C,GAAYS,eAxKpB,mDA2KuCyD,GACnC,OAAOA,EAAM,GAAG1lB,OAASwhB,GAAYS,eA5KzC,mDA+KuCyD,GACnC,OAAOA,EAAMA,EAAM1lB,OAAS,GAAGA,OAASwhB,GAAYS,eAhLxD,8CAmLkCmH,EAAcvG,GAA6C,IAAD,OAClF+F,EAAsBjtB,KAAK4pB,YAAYsD,uBAAuBO,GAEpE,OAAOnJ,GAAM2I,GAAa,SAAC1D,GACzB,IAAMb,EAAe,EAAKkB,YAAY2B,QAAQkC,GACxCnF,EAAgB,EAAKsB,YAAYjC,SAAS8F,GAGhD,OAAO,IAAE3K,KAFO,EAAK8G,YAAYvB,WAAWK,EAAMJ,EAAOiB,EAAI,IAE3CrC,UA3LxB,KCAMwG,G,yIAI6B,IAAD,EACe1tB,KAAKF,MAA1CkC,EADsB,EACtBA,MAAOwB,EADe,EACfA,YAAgBtD,EADD,+BAG9B,OACE,kBAAC+O,GAAA,EAAD,OACM/O,EADN,CAEE8B,MAAO,CAACwB,EAAaxB,U,GAVEsE,IAAMI,WAA/BgnB,GAEG/mB,oBAA8B,UAchC,IAAMgnB,GAAUlnB,EAAqBinB,ICyBtCE,GAAsB,EACtBC,GAAyB,EACzBC,GAA0BF,GAAcC,GAExCE,GAAqB,IACrBC,GAAuB,MACvBC,GAAsB,OACtBC,GAA6B,WAC7BC,GAA8B,OAC9BC,GAA6B,OAEbC,GAAtB,mLAQS/oB,MAAkB,CACvBgpB,SAAU,EAAKxuB,MAAMyuB,UACrBC,YAAa,EAAK5E,YAAYyD,cAAc,EAAKoB,oBAVrD,EAwBYC,YAAsC,IAAI/E,GAAoB,EAAKC,aAxB/E,EAsCU+E,oBAAyDroB,IAAM2W,YAtCzE,EAuCU2R,qBAA0DtoB,IAAM2W,YAvC1E,EAyCS4R,cAAgB,WACrB,EAAK3nB,SAAS,CACZonB,SAAU7I,GAAkBC,KAC5B8I,YAAa,EAAK5E,YAAY1F,WA5CpC,EAgDU5J,SAAW,SAACI,GAClB,EAAKoU,YAAYpU,IAjDrB,EAoDUqU,cAAgB,SAACjM,GACvB,IAAMkM,EAAqB,EAAKpF,YAAYvB,WAC1C,EAAKuB,YAAY2B,QAAQ,EAAKjmB,MAAMkpB,aACpC,EAAK5E,YAAYjC,SAAS7E,EAAKA,MAC/B,EAAK8G,YAAYlC,QAAQ,EAAKpiB,MAAMkpB,cAGtC,EAAKtnB,SAAS,CACZonB,SAAU,EAAKhpB,MAAMgpB,SAAS/I,WAC9BiJ,YAAaQ,KA7DnB,EAiEUC,aAAe,SAACnM,GACtB,IAAMkM,EAAqB,EAAKpF,YAAYvB,WAC1C,EAAKuB,YAAY2B,QAAQzI,EAAKA,MAC9B,EAAK8G,YAAYjC,SAAS,EAAKriB,MAAMkpB,aACrC,EAAK5E,YAAYlC,QAAQ,EAAKpiB,MAAMkpB,cAGtC,EAAKtnB,SAAS,CACZonB,SAAU,EAAKhpB,MAAMgpB,SAAS/I,WAC9BiJ,YAAaQ,KA1EnB,EA8EUE,uBAAyB,SAAC7d,GAChC,EAAKnK,SAAS,CACZsnB,YAAa,EAAK5E,YAAYY,SAAS,EAAKhC,IAAKnX,MAhFvD,EAoFU8d,wBAA0B,SAAC9d,GACjC,IAAMgZ,EAAe,EAAKT,YAAYU,aAAa,EAAK9B,KACxD,EAAKthB,SAAS,CACZsnB,YAAa,EAAK5E,YAAYe,QAAQN,EAAWhZ,EAAQyc,OAvF/D,EA2FUsB,wBAA0B,WAChC,EAAKloB,SAAS,CACZonB,SAAU,EAAKhpB,MAAMgpB,SAASjJ,oBA7FpC,EAiGUgK,4BAA8B,WACpC,IAAMC,EAA8C,EAAKC,qBAEzDD,EAAS9tB,QAAQgY,cAAc,CAC7BnI,MAAOie,EAAS9tB,QAAQ1B,MAAMya,cAAgB,EAC9C3B,UAAU,KAtGhB,EA0GU4W,6BAA+B,WACrC,IAAMF,EAA8C,EAAKC,qBAEzDD,EAAS9tB,QAAQgY,cAAc,CAC7BnI,MAAOie,EAAS9tB,QAAQ1B,MAAMya,cAAgB,EAC9C3B,UAAU,KA/GhB,EAmHU6W,oBAAsB,SAAC3vB,EACAyZ,GAE7B,OAAO,EAAKmW,uBAAuB5vB,EAAOyZ,IAtH9C,EAyHSoW,iBAAmB,SAAChtB,GACzB,MAAO,CACLkM,UAAW,CACT2R,gBAAiB7d,EAAO6d,gBACxBzI,YAAapV,EAAOoV,YACpBL,YAAa/U,EAAO+U,YACpB/C,aAAchS,EAAOgS,aACrBib,SAAUjtB,EAAOitB,SACjBC,UAAWltB,EAAOktB,WAEpBC,gBAAiB,CACfrP,kBAAmB9d,EAAOotB,wBAC1BvP,gBAAiB7d,EAAOqtB,uBAE1BpT,MAAO,CACLR,SAAUzZ,EAAOstB,cACjB3T,WAAY3Z,EAAOutB,gBACnB7T,WAAY1Z,EAAOwtB,gBACnB5T,MAAO5Z,EAAOytB,WACdjU,WAAYxZ,EAAO0tB,iBAErB7T,KAAM,CACJ1M,MAAOnN,EAAO4Y,UACdxL,OAAQpN,EAAO6Y,WACfvb,UAAW0C,EAAO+Y,eAEpB4U,QAAS,CACPpU,eAAgBvZ,EAAO4tB,uBAEzBC,oBAAqB,CACnBvW,iBAAkBtX,EAAO8tB,qBAE3BC,IAAK,CACH/P,UAAWhe,EAAOguB,aAClB1W,iBAAkBtX,EAAO8tB,uBA3JjC,EAgKUG,gBAAkB,SAACjuB,GACzB,MAAO,CACLyZ,SAAUzZ,EAAOkuB,oBACjBvU,WAAY3Z,EAAOmuB,sBACnBzU,WAAY1Z,EAAOouB,sBACnBxU,MAAO5Z,EAAOquB,iBACd7U,WAAYxZ,EAAOsuB,wBAtKzB,EA0KUC,iBAAmB,SAACpO,GAC1B,OAAO,EAAKqO,cAAcrO,IA3K9B,EA8KUsO,gBAAkB,SAACtO,GACzB,OAAO,EAAK8G,YAAYyH,gBAAgBvO,EAAKA,KAAM,EAAK2L,oBA/K5D,EAkLU6C,eAAiB,SAACxO,GACxB,OAAO,EAAK8G,YAAY2H,eAAezO,EAAKA,KAAM,EAAK2L,oBAnL3D,EAsLS+C,cAAgB,SAAC1O,GACtB,IAAM2O,EAAiB,EAAK7H,YAAYvB,WACtC,EAAKuB,YAAY2B,QAAQ,EAAK/C,KAC9B,EAAKoB,YAAYjC,SAAS,EAAKa,KAC/B,EAAKoB,YAAYlC,QAAQ,EAAKc,MAG1BkJ,EAAiB,EAAK9H,YAAYvB,WACtC,EAAKuB,YAAY2B,QAAQ,EAAKF,KAC9B,EAAKzB,YAAYjC,SAAS,EAAK0D,KAC/B,EAAKzB,YAAYlC,QAAQ,EAAK2D,MAGhC,OAAQ,EAAKzB,YAAY+H,uBAAuB7O,EAAKA,KAAM2O,EAAaC,IAAgB,EAAKE,iBAAiB9O,IAnMlH,EAsMU+O,gBAAkB,SAAC/O,GACzB,IAAMgP,EAAmB,EAAKlI,YAAYyD,cAAc,EAAK7E,KACvDuJ,EAAmB,EAAKnI,YAAYyD,cAAc,EAAKhC,KAE7D,OAAQ,EAAKzB,YAAY+H,uBAAuB7O,EAAKA,KAAMgP,EAAeC,IA1M9E,EA6MUC,eAAiB,SAAClP,GACxB,IAAMmP,EAAkB,EAAKrI,YAAYU,aAAa,EAAK9B,KACrD0J,EAAkB,EAAKtI,YAAYuI,WAAW,EAAK9G,KAEzD,OAAQ,EAAKzB,YAAY+H,uBAAuB7O,EAAKA,KAAMmP,EAAcC,IAjN7E,EAoNSE,WAAa,SAACtP,GACnB,OAAO,EAAK8G,YAAYyI,cAAcvP,EAAKA,KAAM,EAAK8G,YAAY1F,UArNtE,EAwNUoO,aAAe,SAACxP,GACtB,OAAO,EAAK8G,YAAYyH,gBAAgBvO,EAAKA,KAAM,EAAK8G,YAAY1F,UAzNxE,EA4NUqO,YAAc,SAACzP,GACrB,OAAO,EAAK8G,YAAY2H,eAAezO,EAAKA,KAAM,EAAK8G,YAAY1F,UA7NvE,EAgOU0N,iBAAmB,SAAC9O,GAC1B,OAAO,EAAKhjB,MAAMkF,SAAW,EAAKlF,MAAMkF,OAAO8d,EAAKA,QAAS,GAjOjE,EAoOU0P,iBAAmB,SAAC1P,GAC1B,OAAO,EAAK8G,YAAY+H,uBAAuB7O,EAAKA,KAAM,EAAK0F,IAAK,EAAK6C,MArO7E,EAwOUoH,sBAAwB,SAACphB,GAC/B,IAAMqhB,EAAgC,EAAKhE,YAAY1D,kBAAkB,EAAKxC,IAAK,EAAKljB,MAAMkpB,aAE9F,OAAOnd,IAAUqhB,GAAqE,IAA5C3hB,KAAKsQ,IAAIhQ,EAAQqhB,IA3O/D,EA8OUC,uBAAyB,SAACthB,GAChC,IAAM6Z,EAAwB,EAAKwD,YAAYvD,iBAAiB,EAAK3C,IAAK,EAAKljB,MAAMkpB,aAC/EoE,EAAiC7hB,KAAKqY,MAAM8B,EAAgB4C,IAElE,OAAOzc,IAAUuhB,GAAuE,IAA7C7hB,KAAKsQ,IAAIhQ,EAAQuhB,IAlPhE,EAqPUC,kBAAoB,SAAC/P,EAASwL,GACpC,OAAQA,GACN,KAAK7I,GAAkBC,KACrB,OAAO,EAAKkE,YAAYvC,OAAOvE,EAAMoL,IACvC,KAAKzI,GAAkBE,MACrB,OAAO,EAAKiE,YAAYvC,OAAOvE,EAAMqL,IAEvC,KAAK1I,GAAkBG,KAIrB,OAH8B,EAAKgE,YAAYvC,OAAO,EAAKmB,IAAK4F,IAGhE,MAF8B,EAAKxE,YAAYvC,OAAO,EAAKgE,IAAK+C,MA9PxE,EAqQU0E,sBAAwB,WAC9B,OAAQ,EAAKxtB,MAAMgpB,SAASlJ,IAC1B,KAAKK,GAAkBC,KAAKN,GAC1B,OAAO,EAAKsJ,YAAY1D,kBAAkB,EAAKxC,IAAK,EAAKljB,MAAMkpB,aACjE,KAAK/I,GAAkBG,KAAKR,GAC1B,OAAOrU,KAAKqY,MAAM,EAAKsF,YAAYvD,iBAAiB,EAAK3C,IAAK,EAAKljB,MAAMkpB,aAAeV,MA1QhG,EA8QUyB,mBAAqB,WAC3B,OAAQ,EAAKjqB,MAAMgpB,SAASlJ,IAC1B,KAAKK,GAAkBC,KAAKN,GAC1B,OAAO,EAAKuJ,oBACd,KAAKlJ,GAAkBG,KAAKR,GAC1B,OAAO,EAAKwJ,uBAnRpB,EAuRUmE,2BAA6B,WACnC,OAAO,EAAKztB,MAAMgpB,SAASlJ,KAAOK,GAAkBC,KAAKN,IAAM,EAAK9f,MAAMgpB,SAASlJ,KAAOK,GAAkBG,KAAKR,IAxRrH,EA2RU4N,qBAAuB,SAACC,EAAiB5hB,GAC/C,OACE,kBAAC,GAAD,CACEpN,IAAKoN,EACLuM,UAAW,EAAKgT,gBAAgB,EAAK9wB,MAAM0D,cAC1CyvB,IAhST,EAqSUC,iBAAmB,SAACpQ,EAA2B9gB,GACrD,OACE,kBAAC,GAAD,CACEA,MAAOA,EAAM6M,UACb+O,UAAW5b,EAAMia,MAChB,EAAK2N,YAAYvC,OAAOvE,EAAKA,KAAMiL,MA1S5C,EA+SUoF,kBAAoB,SAACzY,EAA2B1Y,GAGtD,OAF+B0Y,EAAKuJ,UAAY,EAAKnkB,MAAMszB,eAGlC,EAAKtzB,MAAMuzB,WAAa,EAAKH,kBAC9BxY,EAAM1Y,GAGvB,MAvTX,EA0TUsxB,mBAAqB,SAACxQ,EAA2B9gB,GACvD,OACE,kBAAC,GAAD,CACEA,MAAO,CAACA,EAAM6M,UAAWjL,GAAO2vB,WAChC3V,UAAW5b,EAAMia,MAChB,EAAK2N,YAAYvC,OAAOvE,EAAKA,KAAMkL,MA/T5C,EAoUUwF,kBAAoB,SAAC1Q,EAA2B9gB,GACtD,OACE,kBAAC,GAAD,CACEA,MAAO,CAACA,EAAM6M,UAAWjL,GAAO6vB,UAChC7V,UAAW5b,EAAMia,MAChB,EAAK2N,YAAYvC,OAAOvE,EAAKA,KAAMmL,MAzU5C,EA8UUyF,uBAAyB,SAAC5Q,EAA2BzR,GAA6C,IAChGqf,EAAQ,EAAKf,iBAAiB,EAAK7vB,MAAM0D,aAAzCktB,IAER,OACE,kBAAC,GAAD,CACEzsB,IAAKoN,EACLqT,SAAS,MACT7D,KAAM,EAAK8S,iBAAiB7Q,GAC5BmC,SAAUyL,EACVpW,SAAU,EAAKA,SACfqK,eAAgB,EAAKuM,iBACrBrM,eAAgB,EAAK2M,cACrB1M,YAAa,EAAKsN,WAClBrN,iBAAkB,EAAK0K,oBACvBzM,WAAY,EAAKmQ,qBA5VzB,EAiWUS,4BAA8B,SAAC9Q,GAAkC,IAAD,EAC7B,EAAK6M,iBAAiB,EAAK7vB,MAAM0D,aAAlE8sB,EAD8D,EAC9DA,QAASE,EADqD,EACrDA,oBACXkC,EAAgC,EAAKhE,YAAY1D,kBAAkB,EAAKxC,IAAK,EAAKljB,MAAMkpB,aAE9F,OACE,kBAAC,IAAMqF,SAAP,KACE,kBAAC,GAAD,CACE7xB,MAAOwuB,EACP3P,KAAM,EAAK+I,YAAYkK,qBACtB,EAAKd,sBAER,kBAACrF,GAAD,CAAS3rB,MAAOsuB,IAChB,kBAAC,GAAD,CACEjpB,IAAK,EAAKsnB,oBACVpU,cAAemY,EACf7R,KAAM,EAAK6N,YAAY9D,yBAAyB,EAAKpC,IAAK,EAAK6C,KAC/D/Q,SAAU,EAAK4U,uBACf9M,oBAAqB,EAAKqQ,uBACzB,EAAKiB,0BAnXhB,EAyXUK,yBAA2B,SAACjR,GAAsC,IAChE4N,EAAQ,EAAKf,iBAAiB,EAAK7vB,MAAM0D,aAAzCktB,IAER,OACE,kBAAC,GAAD,CACEhM,SAAS,QACT7D,KAAM,EAAK6N,YAAYxE,sBAAsBpH,EAAM8K,GAAaC,IAChE5I,SAAUyL,EACVpW,SAAU,EAAKyU,cACfpK,eAAgB,EAAKyM,gBACrBvM,eAAgB,EAAKgN,gBACrB/M,YAAa,EAAKwN,aAClBtP,WAAY,EAAKljB,MAAMk0B,aAAe,EAAKV,sBArYnD,EA0YUW,wBAA0B,SAACnR,EAA2BzR,GAAkD,IACtGqf,EAAQ,EAAKf,iBAAiB,EAAK7vB,MAAM0D,aAAzCktB,IAER,OACE,kBAAC,GAAD,CACEzsB,IAAKoN,EACLqT,SAAS,OACT7D,KAAM,EAAK6N,YAAYjE,qBAAqB3H,EAAKA,KAAM8K,GAAaC,IACpE5I,SAAUyL,EACVpW,SAAU,EAAK2U,aACftK,eAAgB,EAAK2M,eACrBzM,eAAgB,EAAKmN,eACrBlN,YAAa,EAAKyN,YAClBvP,WAAY,EAAKljB,MAAMo0B,YAAc,EAAKV,qBAvZlD,EA4ZUW,6BAA+B,SAACrR,GACtC,IAAMoI,EAAwB,EAAKwD,YAAYvD,iBAAiB,EAAK3C,IAAK,EAAKljB,MAAMkpB,aAC/EoE,EAAiC7hB,KAAKqY,MAAM8B,EAAgB4C,IAElE,OACE,kBAAC,GAAD,CACEzmB,IAAK,EAAKunB,qBACVrU,cAAeqY,EACf/R,KAAM,EAAK6N,YAAYzD,0BAA0B,EAAKzC,IAAK,EAAK6C,IAAKuC,GAAaC,IAClFvT,SAAU,EAAK6U,wBACf/M,oBAAqB,EAAKuQ,wBACzB,EAAKsB,0BAvad,EA4aUG,oBAAsB,SAACtR,GAC7B,OAAQ,EAAKxd,MAAMgpB,SAASlJ,IAC1B,KAAKK,GAAkBC,KAAKN,GAC1B,OAAO,EAAKwO,4BAA4B9Q,GAC1C,KAAK2C,GAAkBE,MAAMP,GAC3B,OAAO,EAAK2O,yBAAyBjR,GACvC,KAAK2C,GAAkBG,KAAKR,GAC1B,OAAO,EAAK+O,6BAA6BrR,KAnbjD,EAubUuR,qBAAuB,WAC7B,OAAI,EAAKv0B,MAAMw0B,aACN,EAAKx0B,MAAMw0B,eAEb,MA3bX,EA8bUC,qBAAuB,WAA8B,IAAD,EACL,EAAK5E,iBAAiB,EAAK7vB,MAAM0D,aAA9EssB,EADkD,EAClDA,gBAAwBjT,EAD0B,EACjCD,MAAmBJ,EADc,EACdA,KACtCgY,EAAgB,EAAK10B,MAAM8c,OAAS,EAAKiW,kBAE/C,OACE,kBAAC,GAAD,CACE7wB,MAAO8tB,EACPlT,MAAO4X,EAAc,EAAKlvB,MAAMkpB,YAAa,EAAKlpB,MAAMgpB,UACxDzR,WAAYA,EACZ+C,UAAWpD,EACX8D,yBAA0B,EAAKyS,6BAC/B1S,aAAc,EAAK+O,wBACnBjP,sBAAuB,EAAKkP,4BAC5BjP,uBAAwB,EAAKoP,gCA3crC,wDAgdkD,IAAD,EACAxvB,KAAKF,MAA1CkC,EADqC,EACrCA,MAAOwB,EAD8B,EAC9BA,YAAgBtD,EADc,+BAErC2O,EAAc7O,KAAK2vB,iBAAiBnsB,GAApCqL,UAER,OACE,kBAACI,GAAA,EAAD,OACM/O,EADN,CAEE8B,MAAO,CAAC4B,GAAOiL,UAAWA,EAAW7M,KACpChC,KAAKu0B,uBACLv0B,KAAKo0B,oBAAoBp0B,KAAKsF,MAAMkpB,aACpCxuB,KAAKq0B,0BA1dd,kCA2BI,OAAOr0B,KAAKF,MAAM8pB,cA3BtB,0BA+BI,OAAO5pB,KAAKF,MAAM0oB,KAAOxoB,KAAK4pB,YAAYU,aAAatqB,KAAK4pB,YAAY1F,WA/B5E,0BAmCI,OAAOlkB,KAAKF,MAAMurB,KAAOrrB,KAAK4pB,YAAYuI,WAAWnyB,KAAK4pB,YAAY1F,aAnC1E,GAAiE5d,IAAMI,WAAjD2nB,GAEbrnB,aAA2C,CAChD4iB,YAAa,IAAI3C,GACjBmM,eAAe,EACf7E,UAAW9I,GAAkBC,MA2djC,IAAM9hB,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACT0Q,SAAU,UAEZgU,UAAW,CACTkB,YAAa,IAAO5O,GAAYS,cAElCmN,SAAU,CACRgB,YAAa,IAAO5O,GAAYS,gBC5evBoO,GAAb,4IAMqB5R,GACb9iB,KAAKF,MAAMwa,UACbta,KAAKF,MAAMwa,SAASwI,EAAKA,QAR/B,uCAY0BA,GACtB,OAAO9iB,KAAK0uB,YAAY7E,oBAAoB/G,EAAKA,QAbrD,wCAiBI,OAAO9iB,KAAKF,MAAMgjB,MAAQ9iB,KAAK4pB,YAAY1F,UAjB/C,oCAoBuBpB,GACnB,OAAO9iB,KAAK4pB,YAAYyI,cAAcvP,EAAKA,KAAM9iB,KAAKyuB,qBArB1D,6CAwBgC3uB,EACAyZ,GAI5B,GAFyG,IAA5EvZ,KAAK4pB,YAAYsC,iBAAiBpsB,EAAMgjB,KAAKA,KAAMvJ,EAAUuJ,KAAKA,MAG7F,OAAO,EAGT,IAAM6R,EAA4B70B,EAAMib,WAAaxB,EAAUwB,SACzD6Z,EAA4B90B,EAAM8kB,WAAarL,EAAUqL,SAI/D,SAFuB+P,IAAoBC,IAMpC90B,EAAMe,QAAU0Y,EAAU1Y,UA1CrC,GAAiDwtB,IAApCqG,GAEJ/tB,oBAA8B,WA4ChC,IAAMkuB,GAAWpuB,EAAsBiuB,ICjCxCI,G,mLAIIxgB,kBAAoB,SAAC3R,GAAkC,IAE3D0S,EAIE1S,EAJF0S,gBACAV,EAGEhS,EAHFgS,aACA+C,EAEE/U,EAFF+U,YACAK,EACEpV,EADFoV,YAGIgd,EAA0Bvf,GAAc7S,EAAQ,UAChDqyB,EAAwBxf,GAAc7S,EAAQ,QAC9CsyB,EAA0Bzf,GAAc7S,EAAQ,UAChDuyB,EAA0B1f,GAAc7S,EAAQ,UAChDwyB,EAAyB3f,GAAc7S,EAAQ,SAC/CyyB,EAA+B5f,GAAc7S,EAAQ,eAE3D,MAAO,CACLkM,UAAW,CACTwG,gBAAiBA,EACjBV,aAAcA,EACd+C,YAAaA,EACbK,YAAaA,GAEfsd,OAAQ,CACN7U,gBAAiBuU,EAAa/E,sBAC9BvP,kBAAmBsU,EAAahF,yBAElCuF,KAAM,CACJ9U,gBAAiBwU,EAAWO,oBAC5B9U,kBAAmBuU,EAAWQ,uBAEhCC,OAAQ,CACNjV,gBAAiByU,EAAaS,sBAC9BjV,kBAAmBwU,EAAaU,yBAElC/Y,MAAO,CACLT,WAAYgZ,EAAY9E,gBACxBjU,SAAU+Y,EAAYlF,cACtB3T,WAAY6Y,EAAYjF,gBACxB7T,WAAY8Y,EAAYhF,gBACxB5T,MAAO4Y,EAAY/E,WACnBnW,iBAAkBkb,EAAYS,uBAEhCC,YAAa,CACX1Z,WAAYiZ,EAAkB/E,gBAC9BjU,SAAUgZ,EAAkBnF,cAC5B3T,WAAY8Y,EAAkBlF,gBAC9B7T,WAAY+Y,EAAkBjF,gBAC9B5T,MAAO6Y,EAAkBU,iBACzB7b,iBAAkBmb,EAAkBW,6BAEtCC,OAAQ,CACN3gB,gBAAiB6f,EAAae,sBAC9BlmB,OAAQmlB,EAAagB,gB,EAKnBC,cAAgB,WACtB,OACE,kBAACxI,GAAD,O,EAIIyI,aAAe,SAACrB,GACtB,IAAMM,EAAqB,EAAKv1B,MAAMu1B,SAEtC,OAAO/uB,IAAMkI,aAAa6mB,EAAQ,CAChCgB,YAAa,CAACzyB,GAAOyxB,OAAQN,EAAa/yB,MAAOqzB,EAAOv1B,MAAMkC,OAC9Ds0B,YAAavB,EAAaiB,OAC1BnZ,WAAYkY,EAAanY,MACzB2Z,iBAAkBxB,EAAac,e,EAI3BvB,aAAe,SAACtyB,GACtB,IAAMyzB,EAAqB,EAAK31B,MAAM21B,SAEtC,OAAOnvB,IAAMkI,aAAainB,EAAQ,CAChCzzB,MAAO,CAACA,EAAO4B,GAAO6xB,OAAQA,EAAO31B,MAAMkC,U,EAIvCw0B,WAAa,SAACx0B,GACpB,OACE,kBAACiN,GAAA,EAAD,CAAMjN,MAAO,CAAC4B,GAAO0xB,KAAMtzB,IACxB,EAAKlC,MAAM8N,W,EAKVa,wBAA0B,SAACzM,GAA4C,IAAD,EACjD,EAAKlC,MAAxBu1B,EADoE,EACpEA,OAAQI,EAD4D,EAC5DA,OAEVV,EAA6B,CACjC/yB,MAAOA,EAAMqzB,OACbW,OAAQh0B,EAAMg0B,OACdpZ,MAAO5a,EAAM4a,MACbiZ,YAAa7zB,EAAM6zB,aAGrB,MAAO,CACLR,GAAU,EAAKe,aAAarB,GAC5B,EAAKyB,WAAWx0B,EAAMszB,MACtBG,GAAU,EAAKnB,aAAatyB,EAAMyzB,U,wDAIR,IAAD,EAC4Bz1B,KAAKF,MAApD0D,EADmB,EACnBA,YAAaxB,EADM,EACNA,MAAoB9B,GADd,EACC0N,SADD,6CAEc5N,KAAKsU,kBAAkB9Q,GAAxDqL,EAFmB,EAEnBA,UAAc4nB,EAFK,uBAGIz2B,KAAKyO,wBAAwBgoB,GAHjC,YAGpBpB,EAHoB,KAGZC,EAHY,KAGNG,EAHM,KAK3B,OACE,kBAAC7mB,GAAA,EAAD,KACEG,cAAe,GACX7O,EAFN,CAGE8B,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW7M,KACpCqzB,EACAA,GAAUr1B,KAAKm2B,gBACfb,EACAG,GAAUz1B,KAAKm2B,gBACfV,O,GA7HmBnvB,IAAMI,WAA5BouB,GAEGnuB,oBAA8B,OAiIvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACT0Q,SAAU,SACVnJ,eAAgB,iBAElBif,OAAQ,CACNhgB,gBAAiB,eAEnBigB,KAAM,CACJjgB,gBAAiB,eAEnBogB,OAAQ,CACNpgB,gBAAiB,iBAIRqhB,GAAOjwB,EAAkBquB,IChIzB6B,GAAb,mLAIU7nB,QAAU,SAACiK,GACb,EAAKjZ,MAAMgP,SACb,EAAKhP,MAAMgP,QAAQ,EAAKhP,MAAMuR,MAAO0H,IAN3C,EAUUuE,UAAY,SAACvE,GACnB,EAAKjZ,MAAMwH,SAAS,CAACmJ,GAAY8M,SAE7B,EAAKzd,MAAMwd,WACb,EAAKxd,MAAMwd,UAAU,EAAKxd,MAAMuR,MAAO0H,IAd7C,EAkBUyE,WAAa,SAACzE,GACpB,EAAKjZ,MAAMwH,SAAS,IAEhB,EAAKxH,MAAM0d,YACb,EAAK1d,MAAM0d,WAAW,EAAK1d,MAAMuR,MAAO0H,IAtB9C,EA0BU6d,YAAc,SAAC7d,GACjB,EAAKjZ,MAAM82B,aACb,EAAK92B,MAAM82B,YAAY,EAAK92B,MAAMuR,MAAO0H,IA5B/C,EAgCUzE,kBAAoB,SAAC3R,GAAkC,IAE3D4Y,EAkBE5Y,EAlBF4Y,UACAC,EAiBE7Y,EAjBF6Y,WACAkC,EAgBE/a,EAhBF+a,qBACAhC,EAeE/Y,EAfF+Y,cACAka,EAcEjzB,EAdFizB,sBACAvF,EAaE1tB,EAbF0tB,gBACAJ,EAYEttB,EAZFstB,cACAE,EAWExtB,EAXFwtB,gBACAD,EAUEvtB,EAVFutB,gBACAE,EASEztB,EATFytB,WACAyG,EAQEl0B,EARFk0B,sBACAC,EAOEn0B,EAPFm0B,oBACAC,EAMEp0B,EANFo0B,sBACAC,EAKEr0B,EALFq0B,sBACAlB,EAIEnzB,EAJFmzB,iBACAC,EAGEpzB,EAHFozB,4BACAkB,EAEEt0B,EAFFs0B,0BAIF,MAAO,CACLpoB,UAvB0D,IAoBxDlM,EApBwD,yVAwB1D0f,iBAAkB,GAClB7F,KAAM,CACJ1M,MAAOyL,EACPxL,OAAQyL,EACRvB,iBAAkByD,EAClBzd,UAAWyb,GAEbkB,MAAO,CACL3C,iBAAkB2b,EAClBzZ,WAAYkU,EACZjU,SAAU6T,EACV5T,WAAY8T,EACZ7T,WAAY4T,EACZ3T,MAAO6T,GAETyF,YAAa,CACXtZ,MAAOuZ,EACP3Z,WAAY0a,EACZza,SAAU0a,EACVxa,WAAYya,EACZ1a,WAAY2a,EACZ/c,iBAAkB8b,GAEpBmB,UAAW,CACTjd,iBAAkBgd,KAhF1B,EAqFUxa,kBAAoB,SAACza,GAAoC,IAAD,EAEtC,EAAKlC,MAArBuR,EAFsD,EAEtDA,MAEFqL,GAA2BF,EAJ6B,EAE/CA,MAEuBxa,EAAOqP,GAE7C,OAAO/K,IAAMkI,aAAakO,EAAa,CACrCzY,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAO4Y,KAAME,EAAY5c,MAAMkC,UA7FpD,EAiGU+hB,qBAAuB,SAAC/hB,GAAqD,IAC3EqgB,EAAuCrgB,EAAvCqgB,iBAAqB8U,EADqD,IACnCn1B,EADmC,wBAEvC,EAAKo1B,6BAA6BD,GAFK,YAE3Era,EAF2E,KAE7Dua,EAF6D,KAIlF,OACE,kBAACpoB,GAAA,EAAD,CACEhL,IAAK,EACLjC,MAAO,CAACqgB,EAAkBze,GAAOye,mBAChCvF,EACAua,IA1GT,EA+GU1a,mBAAqB,SAAC3a,GAAmC,IAAD,EAEhC,EAAKlC,MAA3B8c,EAFsD,EAEtDA,MAAOC,EAF+C,EAE/CA,WAEf,OACE,kBAAC,GAAD,CACE5Y,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAOgZ,MAAOC,IAC5BD,IAvHT,EA4HU0a,yBAA2B,SAACt1B,GAAmC,IAAD,EAE1B,EAAKlC,MAAvC+1B,EAF4D,EAE5DA,YAAaU,EAF+C,EAE/CA,iBAErB,OACE,kBAAC,GAAD,CACEtyB,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAOiyB,YAAaU,IAClCV,IApIT,EAyIU0B,uBAAyB,SAACv1B,GAAwC,IAAD,EAE1C,EAAKlC,MAA1BuR,EAF+D,EAE/DA,MAEFmmB,GAAqCN,EAJ4B,EAExDA,WAEsCl1B,EAAOqP,GAE5D,OAAO/K,IAAMkI,aAAagpB,EAAkB,CAC1CvzB,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAOszB,UAAWM,EAAiB13B,MAAMkC,UAjJ9D,EAqJUo1B,6BAA+B,SAACp1B,GAA4C,IAAD,EAElD,EAAKlC,MAA5B8c,EAFyE,EAEzEA,MAAOiZ,EAFkE,EAElEA,YAEf,MAAO,CACL7e,GAAc4F,IAAU,EAAKD,mBAAmB3a,EAAM4a,OACtD5F,GAAc6e,IAAgB,EAAKyB,yBAAyBt1B,EAAM6zB,eA3JxE,EA+JU4B,uBAAyB,SAACz1B,GAA4C,IAAD,EAE3B,EAAKlC,MAA7C0c,EAFmE,EAEnEA,KAAMI,EAF6D,EAE7DA,MAAOiZ,EAFsD,EAEtDA,YAAaqB,EAFyC,EAEzCA,UAElC,MAAO,CACL1a,GAAQ,EAAKC,kBAAkBza,EAAMwa,OACpCI,GAASiZ,IAAgB,EAAK9R,qBAAqB/hB,GACpDk1B,GAAa,EAAKK,uBAAuBv1B,EAAMk1B,aAtKrD,EA0KUzoB,wBAA0B,SAACzM,GAAuC,IAChE4L,EAAa,EAAK9N,MAAlB8N,SAER,OAAOA,GAAsB,EAAK6pB,uBAAuBz1B,IA7K7D,wDAgL8D,IAAD,EACThC,KAAKF,MAA7C0D,EADiD,EACjDA,YAAaxB,EADoC,EACpCA,MAAUqN,EAD0B,iCAEfrP,KAAKsU,kBAAkB9Q,GAAzDqL,EAFiD,EAEjDA,UAAcnL,EAFmC,qBAInD4L,EAAqCtP,KAAKyO,wBAAwB/K,GAExE,OACE,kBAACkL,GAAA,EAAD,KACEG,cAAe,GACXM,EAFN,CAGErN,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW7M,GACrC8M,QAAS9O,KAAK8O,QACdwO,UAAWtd,KAAKsd,UAChBE,WAAYxd,KAAKwd,WACjBoZ,YAAa52B,KAAK42B,cACjBtnB,OA/LT,GAAuChJ,IAAMI,WAAhCiwB,GAEJhwB,oBAA8B,WAmMvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfF,WAAY,UAEdkM,iBAAkB,CAChBtQ,KAAM,GAERyK,KAAM,GACNI,MAAO,CACL8a,UAAW,QAEb7B,YAAa,CACX6B,UAAW,QAEbR,UAAW,KAGAS,GAAWlxB,EAAsBkwB,IChTjCgB,GAAb,mLAEUC,YAAoCtxB,IAAM2W,YAFpD,EAGUC,kBAA+C/F,GAAkBxH,OAAlB,SAHzD,EAKSyH,aAAe,WAChB,EAAKtX,MAAMsX,cACb,EAAKtX,MAAMsX,gBAPjB,EAWSC,aAAe,WAChB,EAAKvX,MAAMuX,cACb,EAAKvX,MAAMuX,gBAbjB,EAiBSC,QAAU,WACX,EAAKxX,MAAMwX,SACb,EAAKxX,MAAMwX,WAnBjB,EAuBSC,OAAS,WACV,EAAKzX,MAAMyX,QACb,EAAKzX,MAAMyX,UAzBjB,wDA6BsC,IAAD,EACDvX,KAAKF,MAA7BkC,EADyB,EACzBA,MAAU9B,EADe,iBAGjC,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAK43B,YACV51B,MAAO,CAACA,EAAO4B,GAAOuM,gBArC9B,GAA8B7J,IAAMI,WA2C9B9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,KCrBLya,GAAb,yIAEwC,IAAD,EACuB73B,KAAKF,MAAvDw2B,EAD2B,EAC3BA,YAAat0B,EADc,EACdA,MAAOq0B,EADO,EACPA,YAAgBn2B,EADT,6CAGnC,OACE,kBAAC,IAAM2zB,SAAP,KACE,kBAAC5kB,GAAA,EAAD,CAAMjN,MAAOs0B,IACb,kBAAC,GAAD,KACEt0B,MAAO,CAACA,EAAOq0B,IACXn2B,SAVd,GAAgCoG,IAAMI,WCpCzBoxB,GAAb,WAIE,WAAYlO,GAA8B,YACxC5pB,KAAK4pB,YAAcA,EALvB,gDAQqBtF,EAAyBxB,GAC1C,QAAQ,GACN,KAAOwB,EAAMuG,YAAcvG,EAAMwG,QAC/B,MAAO,CAAED,UAAW/H,EAAKA,KAAMgI,QAAS,MAC1C,KAAMxG,EAAMuG,YAAcvG,EAAMwG,QAC9B,OAAO9qB,KAAK+3B,oBAAoBzT,EAAOxB,GACzC,KAA0B,OAApBwB,EAAMuG,WAAwC,OAAlBvG,EAAMwG,QACtC,OAAO9qB,KAAKg4B,uBAAuBlV,GACrC,QACE,OAAOwB,KAjBf,0CAqB8BA,EAAyBxB,GACnD,OAAsE,IAAlE9iB,KAAK4pB,YAAYsC,iBAAiBpJ,EAAKA,KAAMwB,EAAMuG,WAC9C,CAAEA,UAAWvG,EAAMuG,UAAWC,QAAShI,EAAKA,OACyB,IAAnE9iB,KAAK4pB,YAAYsC,iBAAiBpJ,EAAKA,KAAMwB,EAAMuG,WACrD,CAAEA,UAAW/H,EAAKA,KAAMgI,QAASxG,EAAMuG,WAEvCvG,IA3Bb,6CA+BiCxB,GAC7B,MAAO,CAAE+H,UAAW/H,EAAKA,KAAMgI,QAAS,UAhC5C,KC0DamN,GAAb,mLAIUC,iBAAwC,IAAIJ,GAAiB,EAAKlO,aAJ5E,2DAQwB9G,GAAkC,IAAD,EACzB9iB,KAAKF,MAAzBwkB,EAD6C,EAC7CA,MAAOhK,EADsC,EACtCA,SAETwR,EAAkC9rB,KAAKk4B,iBAAiBC,YAAY7T,EAAOxB,GACjFxI,GAAYA,EAASwR,KAZzB,wCAgBI,OAAO9rB,KAAK4pB,YAAY1F,UAhB5B,oCAmB0BpB,GACtB,OAAO,IApBX,6CAuBmChjB,EACHyZ,GAI5B,GAFyG,IAA5EvZ,KAAK4pB,YAAYsC,iBAAiBpsB,EAAMgjB,KAAKA,KAAMvJ,EAAUuJ,KAAKA,MAG7F,OAAO,EAGT,IAAM6R,EAA4B70B,EAAMib,WAAaxB,EAAUwB,SACzD6Z,EAA4B90B,EAAM8kB,WAAarL,EAAUqL,SACzDwT,EAAwBt4B,EAAMwkB,QAAU/K,EAAU+K,MAClD+T,EAAkCv4B,EAAMqjB,iBAAmB5J,EAAU4J,eACrEmV,EAAgCx4B,EAAMsjB,gBAAkB7J,EAAU6J,cASxE,SANEuR,GACGC,GACAwD,GACAC,GACAC,IAMEx4B,EAAMe,QAAU0Y,EAAU1Y,QAjDrC,uCAoD6BiiB,GACzB,OAAO9iB,KAAK0uB,YAAY7E,oBAAoB/G,EAAKA,KAAM9iB,KAAKF,MAAMwkB,WArDtE,GAAsD+J,IAAzC4J,GAEJtxB,oBAA8B,WAuDhC,IAAM4xB,GAAgB9xB,EAA2BwxB,ICxClDO,G,mLAII1pB,QAAU,WAChB,EAAKhP,MAAMwH,SAAS,IAEhB,EAAKxH,MAAM24B,UACb,EAAK34B,MAAM24B,UAAU,EAAK34B,MAAM44B,SAAS,I,EAIrCpb,UAAY,SAACvE,GACnB,EAAKjZ,MAAMwH,SAAS,CAACmJ,GAAY8M,SAE7B,EAAKzd,MAAMwd,WACb,EAAKxd,MAAMwd,UAAUvE,I,EAIjByE,WAAa,SAACzE,GACpB,EAAKjZ,MAAMwH,SAAS,IAEhB,EAAKxH,MAAM0d,YACb,EAAK1d,MAAM0d,WAAWzE,I,EAIlBzE,kBAAoB,SAAC3R,GAAkC,IAE3D8a,EAeE9a,EAfF8a,qBACA7B,EAcEjZ,EAdFiZ,eACAC,EAaElZ,EAbFkZ,aACAE,EAYEpZ,EAZFoZ,eACAD,EAWEnZ,EAXFmZ,eACAE,EAUErZ,EAVFqZ,UACAT,EASE5Y,EATF4Y,UACAC,EAQE7Y,EARF6Y,WACAmd,EAOEh2B,EAPFg2B,iBACAjd,EAME/Y,EANF+Y,cACA0B,EAKEza,EALFya,aACAwb,EAIEj2B,EAJFi2B,cACAC,EAGEl2B,EAHFk2B,oBACAC,EAEEn2B,EAFFm2B,uBAIF,MAAO,CACLjqB,UAAW,GACXkqB,mBAAoB,GACpBC,gBAtB0D,IAiBxDr2B,EAjBwD,kPAuB1DsZ,KAAM,CACJhC,iBAAkBwD,EAClBtB,WAAYP,EACZQ,SAAUP,EACVS,WAAYP,EACZM,WAAYP,EACZS,MAAOP,GAETQ,KAAM,CACJ1M,MAAOyL,EACPxL,OAAQyL,EACR7G,aAAcgkB,EACdtjB,gBAAiBqG,GAEnBud,UAAW,CACTnpB,MAAOsN,EACPrN,OAAQ6oB,EACRjkB,aAAckkB,EACdxjB,gBAAiByjB,K,EAKfI,oBAAsB,SAACl3B,GAAyC,IAIhElB,EAAgB,GAHJ4O,KAAWgF,QAAQ1S,GAA7B8N,MAKR,MAAO,CACLkI,KAAMlX,EACNmX,IAAKnX,EACLoX,MAAOpX,EACPq4B,OAAQr4B,I,EAIJ6c,kBAAoB,SAAC3b,GAAmC,IAAD,EACjC,EAAKlC,MAAzBmc,EADqD,EACrDA,KAAM2B,EAD+C,EAC/CA,UAEd,OACE,kBAAC,GAAD,CAAM5b,MAAO,CAACA,EAAO4B,GAAOqY,KAAM2B,IAAa3B,I,EAI3Cmd,wBAA0B,SAACp3B,GACjC,OACE,kBAAC,GAAD,CAAWA,MAAO,CAACA,EAAO4B,GAAO4Y,S,EAI7B6c,+BAAiC,SAACr3B,GACxC,OACE,kBAACiN,GAAA,EAAD,CAAMjN,MAAO,CAACA,EAAO4B,GAAO4Y,S,EAIxBC,kBAAoB,SAACza,GAC3B,OAAI,EAAKlC,MAAMw5B,cACN,EAAKD,+BAA+Br3B,GAEpC,EAAKo3B,wBAAwBp3B,I,EAIhCyM,wBAA0B,SAACzM,GAA4C,IACrEia,EAAS,EAAKnc,MAAdmc,KAER,MAAO,CACL,EAAKQ,kBAAkBza,EAAMwa,MAC7BxF,GAAciF,IAAS,EAAK0B,kBAAkB3b,EAAMia,Q,wDAII,IAAD,EACOjc,KAAKF,MAA7D0D,EADiD,EACjDA,YAAaxB,EADoC,EACpCA,MAAO4iB,EAD6B,EAC7BA,SAAmBvV,GADU,EACnB4M,KADmB,oDASrDjc,KAAKsU,kBAAkB9Q,GALzBqL,EAJuD,EAIvDA,UACAkqB,EALuD,EAKvDA,mBACAE,EANuD,EAMvDA,UACAD,EAPuD,EAOvDA,gBACGpkB,EARoD,wEAWnD2kB,EAA6C,CAACP,EAAiBp1B,GAAOo1B,iBACtEQ,EAAwBx5B,KAAKk5B,oBAAoBK,GAZE,EActBv5B,KAAKyO,wBAAwBmG,GAdP,YAclD8H,EAdkD,KAcrCqB,EAdqC,KAgBzD,OACE,kBAACnP,GAAA,EAAD,KACEG,cAAe,GACXM,EAFN,CAGErN,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW7M,GACrC4iB,SAAUA,EACV6U,QAASD,EACT1qB,QAAS9O,KAAK8O,QACdwO,UAAWtd,KAAKsd,UAChBE,WAAYxd,KAAKwd,aACjB,kBAACvO,GAAA,EAAD,CAAMjN,MAAO,CAAC+2B,EAAoBn1B,GAAOm1B,qBACvC,kBAAC9pB,GAAA,EAAD,CAAMjN,MAAO,CAACi3B,EAAWr1B,GAAOq1B,aAChC,kBAAChqB,GAAA,EAAD,CAAMjN,MAAOu3B,GACV7c,IAGJqB,O,GA7JuBzX,IAAMI,WAAhC8xB,GAEG7xB,oBAA8B,WAiKvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfF,WAAY,UAEd4iB,mBAAoB,CAClB3iB,eAAgB,SAChBD,WAAY,UAEd6iB,gBAAiB,CACf5iB,eAAgB,SAChBD,WAAY,UAEd8iB,UAAW,CACTppB,SAAU,YAEZ2M,KAAM,GACNP,KAAM,KAGKyd,GAAWjzB,EAAsB+xB,ICtPjCkB,GAAb,mLAEUC,YAAoCrzB,IAAM2W,YAFpD,EAGUC,kBAA+C/F,GAAkBxH,OAAlB,SAHzD,EAKSyH,aAAe,WACpB,EAAKuiB,YAAYn4B,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAEjD,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBATjB,EAaSC,aAAe,WACpB,EAAKsiB,YAAYn4B,QAAQ1B,MAAMwH,SAAS,IAEpC,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBAjBjB,EAqBSC,QAAU,WACf,EAAKqiB,YAAYn4B,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAYyN,UAEjD,EAAKpe,MAAMwX,SACb,EAAKxX,MAAMwX,WAzBjB,EA6BSC,OAAS,WACd,EAAKoiB,YAAYn4B,QAAQ1B,MAAMwH,SAAS,IAEpC,EAAKxH,MAAMyX,QACb,EAAKzX,MAAMyX,UAjCjB,wDAqCsC,IAAD,EACDvX,KAAKF,MAA7BkC,EADyB,EACzBA,MAAU9B,EADe,iBAGjC,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAK25B,YACV33B,MAAO,CAACA,EAAO4B,GAAOuM,gBA7C9B,GAA8B7J,IAAMI,WAmD9B9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,K,8jBC3DX,IAAMwc,GAAb,WAKE,WAAYC,EAAWC,GAAY,YACjC95B,KAAK65B,EAAIA,EACT75B,KAAK85B,EAAIA,EAPb,gDAWI,OAAO,IAAIF,EAAM,EAAG,OAXxB,KAeaG,GAAb,WAKE,WAAYjqB,EAAeC,GAAiB,YAC1C/P,KAAK8P,MAAQA,EACb9P,KAAK+P,OAASA,EAPlB,gDAWI,OAAO,IAAIgqB,EAAK,EAAG,OAXvB,KAeaC,GAAb,WAKE,WAAYH,EAAWC,EAAWhqB,EAAeC,GAAiB,YAChE/P,KAAKi6B,OAAS,IAAIL,GAAMC,EAAGC,GAC3B95B,KAAKmR,KAAO,IAAI4oB,GAAKjqB,EAAOC,GAPhC,2CAagBmqB,GACZ,OAAO,IAAIF,EACTE,EAAMD,OAAOJ,EAAI75B,KAAKmR,KAAKrB,MAC3B9P,KAAKi6B,OAAOH,EACZ95B,KAAKmR,KAAKrB,MACV9P,KAAKmR,KAAKpB,UAlBhB,4BAyBemqB,GACX,OAAO,IAAIF,EACTh6B,KAAKi6B,OAAOJ,EACZK,EAAMD,OAAOH,EAAI95B,KAAKmR,KAAKpB,OAC3B/P,KAAKmR,KAAKrB,MACV9P,KAAKmR,KAAKpB,UA9BhB,8BAqCiBmqB,GACb,OAAO,IAAIF,EACTE,EAAMD,OAAOJ,EAAIK,EAAM/oB,KAAKrB,MAC5B9P,KAAKi6B,OAAOH,EACZ95B,KAAKmR,KAAKrB,MACV9P,KAAKmR,KAAKpB,UA1ChB,+BAiDkBmqB,GACd,OAAO,IAAIF,EACTh6B,KAAKi6B,OAAOJ,EACZK,EAAMD,OAAOH,EAAII,EAAM/oB,KAAKpB,OAC5B/P,KAAKmR,KAAKrB,MACV9P,KAAKmR,KAAKpB,UAtDhB,yCA6D4BmqB,GACxB,OAAO,IAAIF,EACTE,EAAMD,OAAOJ,GAAKK,EAAM/oB,KAAKrB,MAAQ9P,KAAKmR,KAAKrB,OAAS,EACxD9P,KAAKi6B,OAAOH,EACZ95B,KAAKmR,KAAKrB,MACV9P,KAAKmR,KAAKpB,UAlEhB,uCAyE0BmqB,GACtB,OAAO,IAAIF,EACTh6B,KAAKi6B,OAAOJ,EACZK,EAAMD,OAAOH,GAAKI,EAAM/oB,KAAKpB,OAAS/P,KAAKmR,KAAKpB,QAAU,EAC1D/P,KAAKmR,KAAKrB,MACV9P,KAAKmR,KAAKpB,WA9EhB,8BAmFI,OAAOiqB,EAAMxoB,KAAKooB,GAAMO,OAAQJ,GAAKI,UAnFzC,2BAsFcC,EAAcjpB,GACxB,OAAO,IAAI6oB,EAAMI,EAAMP,EAAGO,EAAMN,EAAG3oB,EAAKrB,MAAOqB,EAAKpB,YAvFxD,KAiGasqB,GAAb,oFAOI,MAAO,CAAEriB,KAAM,EAAGC,IAAK,EAAGC,MAAO,EAAGihB,OAAQ,OAPhD,KAWamB,GAAb,kFA+Dc33B,GACV,IAAMtB,EAAiB,CACrBi5B,EAAQC,OAAOC,SACfF,EAAQG,kBAAkBD,SAC1BF,EAAQI,gBAAgBF,SACxBF,EAAQK,YAAYH,SACpBF,EAAQM,WAAWJ,SACnBF,EAAQO,aAAaL,SACrBF,EAAQQ,cAAcN,UAGlBxlB,EAAuBtF,KAAWgF,QAAQ/R,IAAW,GAE3D,OAAOvB,OAAOC,KAAK2T,GAAWhQ,QAAO,SAACf,GACpC,OAAO5C,EAAK8C,SAASF,MACpB3C,QAAO,SAACC,EAAiB0C,GAC1B,IAAMnD,EAAgBkU,EAAU/Q,GAC1B82B,EAAuCT,EAAQU,YAAY/2B,GACjE,OAAO82B,EAAcA,EAAYE,YAAY15B,EAAKT,GAASS,IAC1D84B,GAAWF,UAlFlB,kCAqF6BK,EAAkB94B,GAC3C,OAAQ84B,GACN,KAAKF,EAAQC,OAAOC,SAClB,OAAOF,EAAQC,OACjB,KAAKD,EAAQG,kBAAkBD,SAC7B,OAAOF,EAAQG,kBACjB,KAAKH,EAAQI,gBAAgBF,SAC3B,OAAOF,EAAQI,gBACjB,KAAKJ,EAAQK,YAAYH,SACvB,OAAOF,EAAQK,YACjB,KAAKL,EAAQM,WAAWJ,SACtB,OAAOF,EAAQM,WACjB,KAAKN,EAAQO,aAAaL,SACxB,OAAOF,EAAQO,aACjB,KAAKP,EAAQQ,cAAcN,SACzB,OAAOF,EAAQQ,cACjB,QACE,OAAOp5B,OAtGf,KAAa44B,GAEJC,OAAsB,6CAC3BC,SAAmB,SADQ,gDAGfU,EAAkBp6B,GAC5B,MAAO,CACLkX,KAAMlX,EACNmX,IAAKnX,EACLoX,MAAOpX,EACPq4B,OAAQr4B,OARe,MAFlBw5B,GAeJG,kBAAiC,6CACtCD,SAAmB,mBADmB,gDAG1BU,EAAkBp6B,GAC5B,OAAO,MAAKo6B,EAAZ,CAAkBljB,KAAMlX,EAAOoX,MAAOpX,QAJF,MAf7Bw5B,GAuBJI,gBAA+B,6CACpCF,SAAmB,iBADiB,gDAGxBU,EAAkBp6B,GAC5B,OAAO,MAAKo6B,EAAZ,CAAkBjjB,IAAKnX,EAAOq4B,OAAQr4B,QAJJ,MAvB3Bw5B,GA+BJK,YAA2B,6CAChCH,SAAmB,aADa,gDAGpBU,EAAkBp6B,GAC5B,OAAO,MAAKo6B,EAAZ,CAAkBljB,KAAMlX,QAJM,MA/BvBw5B,GAuCJM,WAA0B,6CAC/BJ,SAAmB,YADY,gDAGnBU,EAAkBp6B,GAC5B,OAAO,MAAKo6B,EAAZ,CAAkBjjB,IAAKnX,QAJM,MAvCtBw5B,GA+CJO,aAA4B,6CACjCL,SAAmB,cADc,gDAGrBU,EAAkBp6B,GAC5B,OAAO,MAAKo6B,EAAZ,CAAkBhjB,MAAOpX,QAJM,MA/CxBw5B,GAuDJQ,cAA6B,6CAClCN,SAAmB,eADe,gDAGtBU,EAAkBp6B,GAC5B,OAAO,MAAKo6B,EAAZ,CAAkB/B,OAAQr4B,QAJM,MAoD/B,IA4BMq6B,GAAb,mFA+eer6B,EAAkCY,GAC7C,OAAOy5B,EAAkBC,OAAOt6B,GAASA,EAAQq6B,EAAkBH,YAAYl6B,EAAOY,KAhf1F,kCAmf6B84B,EAAkB94B,GAC3C,OAAQ84B,GACN,KAAKW,EAAkBE,KAAKb,SAC1B,OAAOW,EAAkBE,KAC3B,KAAKF,EAAkBG,IAAId,SACzB,OAAOW,EAAkBG,IAC3B,KAAKH,EAAkBI,MAAMf,SAC3B,OAAOW,EAAkBI,MAC3B,KAAKJ,EAAkBK,OAAOhB,SAC5B,OAAOW,EAAkBK,OAC3B,KAAKL,EAAkBM,WAAWjB,SAChC,OAAOW,EAAkBM,WAC3B,KAAKN,EAAkBO,SAASlB,SAC9B,OAAOW,EAAkBO,SAC3B,KAAKP,EAAkBQ,UAAUnB,SAC/B,OAAOW,EAAkBQ,UAC3B,KAAKR,EAAkBS,QAAQpB,SAC7B,OAAOW,EAAkBS,QAC3B,KAAKT,EAAkBU,YAAYrB,SACjC,OAAOW,EAAkBU,YAC3B,KAAKV,EAAkBW,UAAUtB,SAC/B,OAAOW,EAAkBW,UAC3B,KAAKX,EAAkBY,aAAavB,SAClC,OAAOW,EAAkBY,aAC3B,KAAKZ,EAAkBa,WAAWxB,SAChC,OAAOW,EAAkBa,WAC3B,QACE,OAAOt6B,KA9gBf,6BAkhBwBZ,GAGpB,YAAoB0E,IAFoB1E,EAAhC05B,aAnhBZ,KAAaW,GAEJE,KAAyB,6CAC9Bb,SAAmB,OADW,0CAGxBtT,GAAmC,IAAD,EACbA,EAAQvkB,OAAOs5B,OAAO/U,EAAQgT,OAAOgC,iBAAiBhV,EAAQgT,OAA/ED,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEV0oB,EAAYpjB,GAAkBoC,OAClCohB,EAAOJ,EAAI3S,EAAQiV,QAAQnkB,KAC3BkP,EAAQkV,OAAOjrB,KAAKrB,MAAQqB,EAAKrB,OAASmqB,EAAOJ,EAAI3S,EAAQiV,QAAQjkB,QAGvE,OAAO,IAAI8hB,GACTH,EACAI,EAAOH,EACP3oB,EAAKrB,MACLqB,EAAKpB,UAfqB,6BAoB5B,MAAO,CACL8J,UAAW,MACXwiB,UAAW,YAtBe,+BA2B5B,OAAOr8B,OA3BqB,gCA+B5B,OAAOm7B,GAAkBI,QA/BG,+BAmC5B,MAAO,CACLJ,GAAkBE,KAClBF,GAAkBM,WAClBN,GAAkBO,YAtCQ,2BA0CzBY,EAAcpC,GACjB,OAAOqC,GAAUD,EAAOpC,IAAUsC,GAAQF,EAAOpC,IAAUuC,GAAWH,EAAOpC,OA3CjD,MAFrBiB,GAiDJM,WAA+B,6CACpCjB,SAAmB,aADiB,0CAG9BtT,GAAmC,IAAD,EACblnB,KAAK08B,SAASJ,MAAMpV,GAArC+S,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEhB,OAAO,IAAI6oB,GACTC,EAAOJ,EACPI,EAAOH,GAAK5S,EAAQgT,MAAM/oB,KAAKpB,OAASoB,EAAKpB,QAAU,EAAImX,EAAQiV,QAAQlkB,IAC3E9G,EAAKrB,MACLqB,EAAKpB,UAV2B,6BAelC,MAAO,CACL8J,UAAW,MACXwiB,UAAW,gBAjBqB,+BAsBlC,OAAOlB,GAAkBE,OAtBS,gCA0BlC,OAAOF,GAAkBU,cA1BS,+BA8BlC,OAAO77B,KAAK08B,SAASC,WA9Ba,2BAiC/BL,EAAcpC,GACjB,OAAOl6B,KAAK08B,SAASE,KAAKN,EAAOpC,OAlCC,MAjD3BiB,GAuFJO,SAA6B,6CAClClB,SAAW,WADuB,0CAG5BtT,GAAmC,IAAD,EACblnB,KAAK08B,SAASJ,MAAMpV,GAArC+S,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEhB,OAAO,IAAI6oB,GACTC,EAAOJ,EACPI,EAAOH,GAAK5S,EAAQgT,MAAM/oB,KAAKpB,OAASoB,EAAKpB,QAAU,EAAImX,EAAQiV,QAAQhD,OAC3EhoB,EAAKrB,MACLqB,EAAKpB,UAVyB,6BAehC,MAAO,CACL8J,UAAW,MACXwiB,UAAW,cAjBmB,+BAsBhC,OAAOlB,GAAkBE,OAtBO,gCA0BhC,OAAOF,GAAkBW,YA1BO,+BA8BhC,OAAO97B,KAAK08B,SAASC,WA9BW,2BAiC7BL,EAAcpC,GACjB,OAAOl6B,KAAK08B,SAASE,KAAKN,EAAOpC,OAlCD,MAvFzBiB,GA6HJG,IAAwB,6CAC7Bd,SAAW,MADkB,0CAGvBtT,GAAmC,IAAD,EACbA,EAAQvkB,OAAOk6B,MAAM3V,EAAQgT,OAAO4C,mBAAmB5V,EAAQgT,OAAhFD,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAGV0oB,EAAYpjB,GAAkBoC,OAClCohB,EAAOJ,EACP3S,EAAQkV,OAAOjrB,KAAKrB,OAASmqB,EAAOJ,EAAI1oB,EAAKrB,QAG/C,OAAO,IAAIkqB,GACTH,EACAI,EAAOH,EAAI5S,EAAQiV,QAAQlkB,IAC3B9G,EAAKrB,MACLqB,EAAKpB,UAhBoB,6BAqB3B,MAAO,CACL8J,UAAW,SACXwiB,UAAW,YAvBc,+BA4B3B,OAAOr8B,OA5BoB,gCAgC3B,OAAOm7B,GAAkBK,SAhCE,+BAoC3B,MAAO,CACLL,GAAkBG,IAClBH,GAAkBQ,UAClBR,GAAkBS,WAvCO,2BA2CxBU,EAAcpC,GACjB,OAAOsC,GAAQF,EAAOpC,IAAU6C,GAAST,EAAOpC,IAAU8C,GAAUV,EAAOpC,OA5ChD,MA7HpBiB,GA6KJQ,UAA8B,6CACnCnB,SAAW,YADwB,0CAG7BtT,GAAmC,IAAD,EACblnB,KAAK08B,SAASJ,MAAMpV,GAArC+S,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEhB,OAAO,IAAI6oB,GACTC,EAAOJ,GAAK3S,EAAQgT,MAAM/oB,KAAKrB,MAAQqB,EAAKrB,OAAS,EAAIoX,EAAQiV,QAAQnkB,KACzEiiB,EAAOH,EACP3oB,EAAKrB,MACLqB,EAAKpB,UAV0B,6BAejC,MAAO,CACL8J,UAAW,SACXwiB,UAAW,gBAjBoB,+BAsBjC,OAAOlB,GAAkBG,MAtBQ,gCA0BjC,OAAOH,GAAkBY,eA1BQ,+BA8BjC,OAAO/7B,KAAK08B,SAASC,WA9BY,2BAiC9BL,EAAcpC,GACjB,OAAOl6B,KAAK08B,SAASE,KAAKN,EAAOpC,OAlCA,MA7K1BiB,GAmNJS,QAA4B,6CACjCpB,SAAW,UADsB,0CAG3BtT,GAAmC,IAAD,EACblnB,KAAK08B,SAASJ,MAAMpV,GAArC+S,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEhB,OAAO,IAAI6oB,GACTC,EAAOJ,GAAK3S,EAAQgT,MAAM/oB,KAAKrB,MAAQqB,EAAKrB,OAAS,EAAIoX,EAAQiV,QAAQjkB,MACzE+hB,EAAOH,EACP3oB,EAAKrB,MACLqB,EAAKpB,UAVwB,6BAe/B,MAAO,CACL8J,UAAW,SACXwiB,UAAW,cAjBkB,+BAsB/B,OAAOlB,GAAkBG,MAtBM,gCA0B/B,OAAOH,GAAkBa,aA1BM,+BA8B/B,OAAOh8B,KAAK08B,SAASC,WA9BU,2BAiC5BL,EAAcpC,GACjB,OAAOl6B,KAAK08B,SAASE,KAAKN,EAAOpC,OAlCF,MAnNxBiB,GAyPJI,MAA0B,6CAC/Bf,SAAW,QADoB,0CAGzBtT,GAAmC,IAAD,EACbA,EAAQvkB,OAAOs6B,QAAQ/V,EAAQgT,OAAOgC,iBAAiBhV,EAAQgT,OAAhFD,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEV0oB,EAAYpjB,GAAkBoC,OAClCohB,EAAOJ,EAAI3S,EAAQiV,QAAQjkB,MAC3BgP,EAAQkV,OAAOjrB,KAAKrB,MAAQqB,EAAKrB,OAASmqB,EAAOJ,EAAI3S,EAAQiV,QAAQjkB,QAGvE,OAAO,IAAI8hB,GACTH,EACAI,EAAOH,EACP3oB,EAAKrB,MACLqB,EAAKpB,UAfsB,6BAoB7B,MAAO,CACL8J,UAAW,cACXwiB,UAAW,YAtBgB,+BA2B7B,OAAOr8B,OA3BsB,gCA+B7B,OAAOm7B,GAAkBE,OA/BI,+BAmC7B,MAAO,CACLF,GAAkBI,MAClBJ,GAAkBU,YAClBV,GAAkBW,aAtCS,2BA0C1BQ,EAAcpC,GACjB,OAAOgD,GAAQZ,EAAOpC,IAAUsC,GAAQF,EAAOpC,IAAUuC,GAAWH,EAAOpC,OA3C9C,MAzPtBiB,GAwSJU,YAAgC,6CACrCrB,SAAW,cAD0B,0CAG/BtT,GAAmC,IAAD,EACblnB,KAAK08B,SAASJ,MAAMpV,GAArC+S,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEhB,OAAO,IAAI6oB,GACTC,EAAOJ,EACPI,EAAOH,GAAK5S,EAAQgT,MAAM/oB,KAAKpB,OAASoB,EAAKpB,QAAU,EAAImX,EAAQiV,QAAQlkB,IAC3E9G,EAAKrB,MACLqB,EAAKpB,UAV4B,6BAenC,MAAO,CACL8J,UAAW,cACXwiB,UAAW,gBAjBsB,+BAsBnC,OAAOlB,GAAkBI,QAtBU,gCA0BnC,OAAOJ,GAAkBM,aA1BU,+BA8BnC,OAAOz7B,KAAK08B,SAASC,WA9Bc,2BAiChCL,EAAcpC,GACjB,OAAOl6B,KAAK08B,SAASE,KAAKN,EAAOpC,OAlCE,MAxS5BiB,GA8UJW,UAA8B,6CACnCtB,SAAW,YADwB,0CAG7BtT,GAAmC,IAAD,EACblnB,KAAK08B,SAASJ,MAAMpV,GAArC+S,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEhB,OAAO,IAAI6oB,GACTC,EAAOJ,EACPI,EAAOH,GAAK5S,EAAQgT,MAAM/oB,KAAKpB,OAASoB,EAAKpB,QAAU,EAAImX,EAAQiV,QAAQhD,OAC3EhoB,EAAKrB,MACLqB,EAAKpB,UAV0B,6BAejC,MAAO,CACL8J,UAAW,cACXwiB,UAAW,cAjBoB,+BAsBjC,OAAOlB,GAAkBI,QAtBQ,gCA0BjC,OAAOJ,GAAkBO,WA1BQ,+BA8BjC,OAAO17B,KAAK08B,SAASC,WA9BY,2BAiC9BL,EAAcpC,GACjB,OAAOl6B,KAAK08B,SAASE,KAAKN,EAAOpC,OAlCA,MA9U1BiB,GAoXJK,OAA2B,6CAChChB,SAAW,SADqB,0CAG1BtT,GAAmC,IAAD,EACbA,EAAQvkB,OAAOw6B,SAASjW,EAAQgT,OAAO4C,mBAAmB5V,EAAQgT,OAAnFD,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEV0oB,EAAYpjB,GAAkBoC,OAClCohB,EAAOJ,EACP3S,EAAQkV,OAAOjrB,KAAKrB,OAASmqB,EAAOJ,EAAI1oB,EAAKrB,QAG/C,OAAO,IAAIkqB,GACTH,EACAI,EAAOH,EAAI5S,EAAQiV,QAAQhD,OAC3BhoB,EAAKrB,MACLqB,EAAKpB,UAfuB,6BAoB9B,MAAO,CACL8J,UAAW,iBACXwiB,UAAW,YAtBiB,+BA2B9B,OAAOr8B,OA3BuB,gCA+B9B,OAAOm7B,GAAkBG,MA/BK,+BAmC9B,MAAO,CACLH,GAAkBK,OAClBL,GAAkBY,aAClBZ,GAAkBa,cAtCU,2BA0C3BM,EAAcpC,GACjB,OAAOuC,GAAWH,EAAOpC,IAAU6C,GAAST,EAAOpC,IAAU8C,GAAUV,EAAOpC,OA3ChD,MApXvBiB,GAmaJY,aAAiC,6CACtCvB,SAAW,eAD2B,0CAGhCtT,GAAmC,IAAD,EACblnB,KAAK08B,SAASJ,MAAMpV,GAArC+S,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEhB,OAAO,IAAI6oB,GACTC,EAAOJ,GAAK3S,EAAQgT,MAAM/oB,KAAKrB,MAAQqB,EAAKrB,OAAS,EAAIoX,EAAQiV,QAAQnkB,KACzEiiB,EAAOH,EACP3oB,EAAKrB,MACLqB,EAAKpB,UAV6B,6BAepC,MAAO,CACL8J,UAAW,iBACXwiB,UAAW,gBAjBuB,+BAsBpC,OAAOlB,GAAkBK,SAtBW,gCA0BpC,OAAOL,GAAkBQ,YA1BW,+BA8BpC,OAAO37B,KAAK08B,SAASC,WA9Be,2BAiCjCL,EAAcpC,GACjB,OAAOl6B,KAAK08B,SAASE,KAAKN,EAAOpC,OAlCG,MAna7BiB,GAycJa,WAA+B,6CACpCxB,SAAW,aADyB,0CAG9BtT,GAAmC,IAAD,EACblnB,KAAK08B,SAASJ,MAAMpV,GAArC+S,EAD8B,EAC9BA,OAAQ9oB,EADsB,EACtBA,KAEhB,OAAO,IAAI6oB,GACTC,EAAOJ,GAAK3S,EAAQgT,MAAM/oB,KAAKrB,MAAQqB,EAAKrB,OAAS,EAAIoX,EAAQiV,QAAQjkB,MACzE+hB,EAAOH,EACP3oB,EAAKrB,MACLqB,EAAKpB,UAV2B,6BAelC,MAAO,CACL8J,UAAW,iBACXwiB,UAAW,cAjBqB,+BAsBlC,OAAOlB,GAAkBK,SAtBS,gCA0BlC,OAAOL,GAAkBS,UA1BS,+BA8BlC,OAAO57B,KAAK08B,SAASC,WA9Ba,2BAiC/BL,EAAcpC,GACjB,OAAOl6B,KAAK08B,SAASE,KAAKN,EAAOpC,OAlCC,MAgFxC,IAAMqC,GAAY,SAACD,EAAcpC,GAC/B,OAAOzjB,GAAkBoC,OAAOkkB,GAAUC,GAAnCvmB,CAA8C6lB,EAAOpC,IAGxDgD,GAAU,SAACZ,EAAcpC,GAC7B,OAAOzjB,GAAkBoC,OAAOmkB,GAAWD,GAApCtmB,CAA8C6lB,EAAOpC,IAGxD6C,GAAW,SAACT,EAAcpC,GAC9B,OAAOoC,EAAMrC,OAAOJ,GAAKK,EAAMD,OAAOJ,GAGlCmD,GAAY,SAACV,EAAcpC,GAC/B,OAAOoC,EAAMrC,OAAOJ,EAAIyC,EAAMnrB,KAAKrB,OAASoqB,EAAM/oB,KAAKrB,OAGnD0sB,GAAU,SAACF,EAAcpC,GAC7B,OAAOoC,EAAMrC,OAAOH,GAAKI,EAAMD,OAAOH,GAGlC2C,GAAa,SAACH,EAAcpC,GAChC,OAAOoC,EAAMrC,OAAOH,EAAIwC,EAAMnrB,KAAKpB,QAAUmqB,EAAM/oB,KAAKpB,Q,qjBChzB1D,IAAMqtB,GAAsCjC,GAAkBG,IAKjD+B,GAAb,mLAOU/oB,kBAAoB,SAAC3R,EAA8B26B,GACzD,IAAMC,EAAwB7tB,KAAWgF,QAAQ,EAAK5U,MAAM+a,gBADwC,EAGnEyiB,EAAUvrB,OAAnC8H,EAH4F,EAG5FA,UAAWwiB,EAHiF,EAGjFA,UAEbmB,EAAsB3jB,EAAU5Y,WAAW,UAC3Cw8B,EAAmBpB,EAAUtmB,SAAS,SACtC2nB,EAAiBrB,EAAUtmB,SAAS,OACpC4nB,EAAqB9jB,EAAU9D,SAAS,WAIxC6nB,EAAiCJ,EAAa,IAAM,GACpDK,EAAmCF,EAAY,EAAI,IAMrDG,EAA6BN,EAAa,EAAID,EAAsBztB,MAAQ,EAChFguB,EAAqBH,EAAYG,GAAsBA,EAKvD,IAAIC,EAA6BP,GAAc,EAAK19B,MAAMk+B,gBAAkB,EAAKl+B,MAAMk+B,gBACvFD,EAAqBJ,GAAaI,EAAqBA,EACvD,IAAME,EAAiCxnB,GAAkBoC,OAAOklB,GAAqBA,GACrFA,EAAqBP,EAAaS,EAAiCF,EAEnE,IAAMG,EAA4BznB,GAAkB2B,YAAY,CAC9D/B,cAAewD,EACfhU,UAAW,CACT,CAAEsO,WAAY2pB,MAIZK,EAA0B,CAC9B9oB,gBAAiB,QACjBxP,UAAW,CACT,CAAEsO,WAAY2pB,KAIZjjB,EAAyB,IAC7BhV,UAAW,CACT,CAAEwS,OAAWulB,EAAL,OACR,CAAEvlB,OAAWwlB,EAAL,OAIR,CAAE1pB,WAAYspB,GAAWM,EAAqB,GAC9C,CAAE5pB,WAAYupB,EAAQK,EAAqB,KAE1CR,EAV0B,GAW1B35B,GAAO+W,WAGZ,MAAO,CACL9L,UAAU,MACLqvB,EADI,CAEP/nB,WAAYkmB,IAEdx8B,QAASs+B,EACTxjB,UAAWE,IAvEjB,wDA2EkD,IAAD,EACyC7a,KAAKF,MAAnFkC,EADqC,EACrCA,MAAO6Y,EAD8B,EAC9BA,eAA2BujB,EADG,EACdd,UAAyB1vB,EADX,EACWA,SAAayB,EADxB,yDAEvCiuB,EAA8BnC,GAAkB5T,MAAM6W,EAAchB,IAF7B,EAIHp9B,KAAKsU,kBAAkBtS,EAAOs7B,GAAhEzuB,EAJqC,EAIrCA,UAAW8L,EAJ0B,EAI1BA,UAAW9a,EAJe,EAIfA,QAE9B,OACE,kBAACoP,GAAA,EAAD,OACMI,EADN,CAEErN,MAAO,CAAC6M,EAAWjL,GAAOiL,aAC1B,kBAAC,GAAD,CAAO7M,MAAO,CAAC2Y,EAAW/W,GAAO+W,UAAWE,KAC5C,kBAAC5L,GAAA,EAAD,CACEjN,MAAO,CAACnC,EAAS+D,GAAO/D,QAASmC,IAChC4L,QAxFX,GAAiCtH,IAAMI,WAA1B22B,GAEJr2B,aAA0C,CAC/Cs2B,UAAWF,GAAkB5C,SAC7BwD,gBAAiB,GA2FrB,IAAMp6B,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTmB,UAAW,cAEbnQ,QAAS,CACPuW,eAAgB,UAElBuE,UAAW,K,kBCjFA0jB,GAAiB,SAACv+B,GAE7B,IAAMuH,EAA4Bf,IAAM2W,YAEhCrP,EAAuB9N,EAAvB8N,SAAU0wB,EAAax+B,EAAbw+B,SA8BlB,OAAOh4B,IAAMkI,aAAaZ,EAAU,CAClCvG,MACAyR,SAfkB,WAClB,IAAMylB,EAAeC,aAAen3B,EAAI7F,SAExCi9B,KAAUC,gBAAgBH,GAAM,SAAC1E,EAAWC,EAAW6E,EAAWC,GAChE,IAAMC,EAAqBC,KAAWt+B,IAAI,UACpC87B,EApBW,SAAfyC,EAAgBzC,EAAcuC,GAClC,OAAIvC,EAAMrC,OAAOJ,EAAIgF,EAAO/uB,MACnBwsB,EAUFyC,EAPmB,IAAI/E,GAC5BsC,EAAMrC,OAAOJ,EAAIgF,EAAO/uB,MACxBwsB,EAAMrC,OAAOH,EACbwC,EAAMnrB,KAAKrB,MACXwsB,EAAMnrB,KAAKpB,QAGmB8uB,GAQTE,CAAa,IAAI/E,GAAMH,EAAGC,EAAG6E,EAAGC,GAAIC,GAEnDG,EAAmC14B,IAAMkI,aAAaZ,EAAU,CAAE0uB,UAExEgC,EAASU,UA6BFC,GAAc,SAACn/B,GAE1B,IAAMiK,EAAwB,GAEtB6D,EAAuB9N,EAAvB8N,SAAU0wB,EAAax+B,EAAbw+B,SAEZY,EAAiB,SAAC/uB,GAA8B,IAAD,EAC5BA,EAAQrQ,MAAvBq/B,EAD2C,EAC3CA,IAAK7C,EADsC,EACtCA,MAEbvyB,EAAOo1B,GAAO7C,EAEVl7B,OAAOC,KAAK0I,GAAQ1F,SAAWiC,IAAMoI,SAAS+P,MAAM7Q,IACtD0wB,EAASv0B,IAIPq1B,EAAyB,SAACjvB,EAA2BkB,GACzD,OACE,kBAAC,GAAD,CACEpN,IAAKoN,EACLitB,SAAUY,GACT/uB,IASP,OACE,kBAAC,IAAM0jB,SAAP,KAJOvtB,IAAMoI,SAAS/J,IAAIiJ,EAAUwxB,KC/HlCC,GAA+B,CACnClE,GAAkBK,OAAOhB,SACzBW,GAAkBG,IAAId,SACtBW,GAAkBE,KAAKb,SACvBW,GAAkBI,MAAMf,UAGb8E,GAAb,6EAEcC,EAAkCrY,GAG5C,OAFoClnB,KAAKw/B,cAAcD,EAAgBF,GAAoBnY,IAEvEqY,IALxB,oCAQwBjC,EAA6BmC,EAAoBvY,GACrE,IAAMwY,EAAuC1/B,KAAK2/B,eAAerC,EAAWpW,GAE5E,GAAIwY,EACF,OAAOA,EAGT,IAAME,EAAwC5/B,KAAK2/B,eAAerC,EAAUuC,UAAW3Y,GAEvF,GAAI0Y,EACF,OAAOA,SAGFH,EAASA,EAASl1B,QAAQ+yB,EAAUZ,SAASlC,kBAC7CiF,EAASA,EAASl1B,QAAQ+yB,EAAUuC,UAAUnD,SAASlC,WAE9D,IAAMsF,EAAsBL,EAASz6B,OAAOsG,SAAS,GAErD,GAAIw0B,EAAa,CACf,IAAMC,EAAkC5E,GAAkB5T,MAAMuY,GAEhE,OAAO9/B,KAAKw/B,cAAcO,EAAeN,EAAUvY,GAGrD,OAAO,OAhCX,qCAmCyBoW,EAA6BpW,GAClD,IAAM8Y,EAAwB1C,EAAUhB,MAAMpV,GAE9C,OAAIoW,EAAUV,KAAKoD,EAAgB9Y,EAAQkV,QAClCkB,EAGFA,EAAUX,SAASt3B,MAAK,SAAC46B,GAC9B,IAAMC,EAAcD,EAAY3D,MAAMpV,GAEtC,OAAO+Y,EAAYrD,KAAKsD,EAAahZ,EAAQkV,eA7CnD,KCoCM+D,GAAqBrB,KAAWt+B,IAAI,UACpC4/B,GAAuB,IAAIpG,GAAM,EAAG,EAAGmG,GAAOrwB,MAAOqwB,GAAOpwB,QAE5DswB,GAAoB,EACpBC,GAAsB,EACtBlD,GAAsCjC,GAAkBK,OA+BjD+E,GAAb,mLAYUC,iBAA4C,IAAIlB,GAZ1D,EAmBUmB,iBAAmB,SAACle,GACtBA,EAAU9S,UAAY,EAAK3P,MAAM2P,QAC/B,EAAK3P,MAAM2P,QAEb,EAAKvI,SAAS,CAAEgS,YAAQ1T,IAExB,EAAKk7B,UAAYzwB,GAAaO,KAAK,EAAKkwB,WAEjCne,EAAU9S,SAAW,EAAK3P,MAAM2P,SACzC,EAAKkxB,wBA5BX,EAgCUA,qBAAuB,WAC7B,IAAMxwB,EAA0B,EAAKywB,qBAAqB,EAAK9gC,MAAMD,QAAS,EAAKghC,kBAE7EC,EAAiCx6B,IAAMkI,aAAa2B,EAAS,CACjEnO,MAAO,CAACmO,EAAQrQ,MAAMkC,MAAO4B,GAAOm9B,kBAEtC,EAAKL,WAAazwB,GAAaM,OAAO,EAAKmwB,UAAWI,IAtC1D,EAyCUxsB,kBAAoB,SAAC3R,GAAkC,IAE3DqW,EAIErW,EAJFqW,eACAwB,EAGE7X,EAHF6X,gBACAC,EAEE9X,EAFF8X,yBAIF,MAAO,CACL5L,UAT0D,IAMxDlM,EANwD,iEAU1DgY,UAAW,CACT7K,MAAOkJ,EACPjJ,OAAQyK,EACRnF,gBAAiBoF,KAtDzB,EA2DUumB,UAAY,SAAC9nB,GACnB,GAAI,EAAKpZ,MAAM2P,QAAS,CACtB,IAAMwxB,EAAqC,EAAKC,uBAAuBhoB,GACjE2nB,EAAmB,EAAKL,iBAAiBn7B,KAAK,EAAKw7B,iBAAkBI,GAE3E,EAAKP,UAAY,EAAKS,iBAAiBN,EAAkBI,KAhE/D,EAoEUG,gBAAkB,SAACtgC,GACzB,OAAOq6B,GAAkB5T,MAAMzmB,EAAOs8B,KArE1C,EAwEU8D,uBAAyB,SAAChoB,GAA6C,IACrEtL,EAAa,EAAK9N,MAAlB8N,SAER,MAAO,CACLjL,OAAQuW,EAAOonB,IACfpG,MAAOhhB,EAAOmnB,IACdjE,OAAQgE,GACRjE,QAAS7B,GAAQj1B,KAAKuI,EAAS9N,MAAMkC,SA/E3C,EAmFUm/B,iBAAmB,SAAC7D,EAA6BpW,GACvD,IAAMma,EAAsB/D,EAAUhB,MAAMpV,GACtC4Z,EAAkC,EAAKF,qBAAqB,EAAK9gC,MAAMD,QAASy9B,GAEhFgE,EAA2B,CAC/BtpB,KAAMqpB,EAAapH,OAAOJ,EAC1B5hB,IAAKopB,EAAapH,OAAOH,GAGrByH,EAAqEj7B,IAAMkI,aAAasyB,EAAgB,CAC5G9+B,MAAO,CAAC4B,GAAOm9B,eAAgBO,KAGjC,OAAOrxB,GAAaI,KAAKkxB,EAA0B,CACjDpzB,cAAe,EAAKrO,MAAMqO,cAC1BD,gBAAiB,EAAKpO,MAAMoO,mBAlGlC,EAsGU0yB,qBAAuB,SAAChzB,EAA0B0vB,GAAiD,IAAD,EAC1B,EAAKx9B,MAApE0hC,EADyF,EAChGx/B,MAAqBwB,EAD2E,EAC3EA,YAAaqX,EAD8D,EAC9DA,eAAmBxL,EAD2C,kDAEvE,EAAKiF,kBAAkB9Q,GAAhDqL,EAFgG,EAEhGA,UAAW8L,EAFqF,EAErFA,UAEb8mB,EAAwC,CAAEtC,IAAKmB,IAErD,OACE,kBAACrxB,GAAA,EAAD,OACMwyB,EADN,CAEEx9B,IAAKq8B,GACLt+B,MAAO,CAAC4B,GAAO89B,QAAS99B,GAAO+9B,oBAC/B,kBAAC,GAAD,OACMtyB,EADN,CAEErN,MAAO,CAAC6M,EAAW2yB,GACnB3mB,eAAgB,CAACF,EAAW/W,GAAO+W,UAAWE,GAC9CyiB,UAAWA,EAAUuC,UAAUrF,WAC9B5sB,KAtHX,EA4HUg0B,mBAAqB,SAACj/B,GAC5B,IAAM8+B,EAAwC,CAAEtC,IAAKkB,IAErD,OACE,kBAACpxB,GAAA,EAAD,OACMwyB,EADN,CAEEx9B,IAAKo8B,GACLr+B,MAAO4B,GAAOi+B,QACbl/B,IApIT,EAyIUy8B,uBAAyB,WAAqD,IAAD,uBAAhDxxB,EAAgD,yBAAhDA,EAAgD,gBACnF,OACE,kBAAC,GAAD,CACE0wB,SAAU,EAAK0C,WACdpzB,IA7IT,kEAe4B2U,GACxBviB,KAAKygC,iBAAiBle,KAhB1B,+BAmJI,GAAIviB,KAAKF,MAAM2P,QAAS,CACtBzP,KAAK6gC,iBAAmB7gC,KAAKohC,gBAAgBphC,KAAKF,MAAMw9B,WACxD,IAAMwD,EAAiC9gC,KAAK4gC,qBAAqB5gC,KAAKF,MAAMD,QAASG,KAAK6gC,kBACpF/uB,EAA6B9R,KAAK4hC,mBAAmB5hC,KAAKF,MAAM8N,UAEtE,OAAO5N,KAAKo/B,uBAAuBttB,EAAcgvB,GAGnD,OAAO9gC,KAAKF,MAAM8N,aA3JtB,GAAsCtH,IAAMI,WAA/B65B,GAEJ55B,oBAA8B,UAF1B45B,GAIJv5B,aAAsC,CAC3Cs2B,UAAWF,GAAkB5C,SAC7B/qB,SAAS,EACTtB,eAAe,EACfD,gBAAiB,kBAAM,OAuJ3B,IAAMtK,GAAS8L,KAAWC,OAAO,CAC/B+xB,QAAS,CACP7xB,SAAU,YAEZ8xB,iBAAkB,CAChBG,QAAS,GAEXf,eAAgB,CACde,QAAS,GAEXnnB,UAAW,GACXknB,MAAO,KAGIE,GAAUt7B,EAAqB85B,IC5NtByB,GAAtB,mLAOS18B,MAAe,CACpBmK,SAAS,GARb,EAmBUwyB,mBAAqB,SAACjgC,GAAiC,IAE3DkgC,EAUElgC,EAVFkgC,wBACArmB,EASE7Z,EATF6Z,aACAC,EAQE9Z,EARF8Z,eACAC,EAOE/Z,EAPF+Z,eACAH,EAME5Z,EANF4Z,eACAI,EAKEha,EALFga,UACAT,EAIEvZ,EAJFuZ,UACAC,EAGExZ,EAHFwZ,WACAE,EAEE1Z,EAFF0Z,cAIF,MAAO,CACL7M,UAf0D,IAYxD7M,EAZwD,oJAgB1Dwa,KAAM,CACJ1M,MAAOyL,EACPxL,OAAQyL,EACRvb,UAAWyb,GAEbO,KAAM,CACJG,SAAUP,EACVQ,WAAYP,EACZQ,WAAYP,EACZQ,MAAOP,EACPG,WAAYP,GAEd8lB,QAAS,CACPS,OAAQD,KAhDhB,EAqDU5kB,UAAY,SAACvE,GACnB,EAAKjZ,MAAMwH,SAAS,CAACmJ,GAAY8M,SAE7B,EAAKzd,MAAMwd,WACb,EAAKxd,MAAMwd,UAAUvE,IAzD3B,EA6DUyE,WAAa,SAACzE,GACpB,EAAKjZ,MAAMwH,SAAS,IAEhB,EAAKxH,MAAM0d,YACb,EAAK1d,MAAM0d,WAAWzE,IAjE5B,EAqEUqpB,cAAgB,WACtB,IAAM3yB,GAAoB,EAAKnK,MAAMmK,QAErC,EAAKvI,SAAS,CAAEuI,WAAW,EAAK4yB,iBAxEpC,EA2EUA,eAAiB,WACnB,EAAK/8B,MAAMmK,QACb,EAAK3P,MAAMwH,SAAS,CAACmJ,GAAY8M,SAEjC,EAAKzd,MAAMwH,SAAS,KA/E1B,EAmFUmV,kBAAoB,SAACza,GAC3B,OAAO,EAAKlC,MAAM0c,KAAKxa,IApF3B,EAuFU2b,kBAAoB,SAAC3b,GAC3B,OACE,kBAAC,GAAD,CAAMA,MAAOA,GACV,EAAKsgC,sBA1Fd,EA+FUC,sBAAwB,SAACvgC,GAA4C,IACnEwa,EAAS,EAAK1c,MAAd0c,KAER,MAAO,CACL,EAAKmB,kBAAkB3b,EAAMia,MAC7BO,GAAQ,EAAKC,kBAAkBza,EAAMwa,QApG3C,EAwGUgmB,cAAgB,WAAkD,IAAD,EAC9B,EAAK1iC,MAAtC0D,EAD+D,EAC/DA,YAAaohB,EADkD,EAClDA,SAAU5iB,EADwC,EACxCA,MACzB4S,EAA4B,EAAKqtB,mBAAmBz+B,GAFa,EAIpC,EAAK++B,sBAAsB3tB,GAJS,YAIhEmJ,EAJgE,KAInDrB,EAJmD,KAMvE,OACE,kBAAC9N,GAAA,EAAD,CACEG,cAAe,EACf6V,SAAUA,EACV5iB,MAAO,CAAC4S,EAAe/F,UAAWjL,GAAOiL,UAAW7M,GACpD8M,QAAS,EAAKszB,cACd9kB,UAAW,EAAKA,UAChBE,WAAY,EAAKA,YAChBO,EACArB,IAvHT,kEAe+BoG,GAC3B,OAAO9iB,KAAKF,MAAM8pB,YAAYvC,OAAOvE,EAjCD,gBAiBxC,+BA4HmC,IACvB4e,EAAY1hC,KAAKiiC,mBAAmBjiC,KAAKF,MAAM0D,aAA/Ck+B,QAEFe,EAA0B,CAC9B3yB,MAAOgvB,KAAWt+B,IAAI,UAAUsP,MAAQ4xB,EAAQS,OAChDvS,SAAUkP,KAAWt+B,IAAI,UAAUsP,MAAQ4xB,EAAQS,QAGrD,OACE,kBAACJ,GAAD,CACE//B,MAAOygC,EACPhzB,QAASzP,KAAKsF,MAAMmK,QACpB5P,QAASG,KAAK0iC,iBACdx0B,gBAAiBlO,KAAKoiC,eACrBpiC,KAAKwiC,qBA1Id,GAAmEl8B,IAAMI,WAAnDs7B,GAEbh7B,aAA6C,CAClD4iB,YAAa,IAAI3C,GACjB0b,YAAa,cA4IjB,IAAM/+B,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfF,WAAY,SACZC,eAAgB,mBCvHPwsB,GAAb,oJAOI,OAAI5iC,KAAKF,MAAMgjB,KACN9iB,KAAK6iC,mBAAmB7iC,KAAKF,MAAMgjB,MAEnC9iB,KAAKF,MAAM6iC,cAVxB,uCAeI,OAEE,kBAAC9N,GAAa70B,KAAKF,WAjBzB,GAAmDkiC,IAAtCY,GAEJj8B,oBAA8B,aAoBhC,IAAMm8B,GAAar8B,EAAwBm8B,IClCrCG,GAAb,oJAMyC,IAAD,EACL/iC,KAAKF,MAAMwkB,MAAlCuG,EAD4B,EAC5BA,UAAWC,EADiB,EACjBA,QAEnB,OAAID,GAAaC,GACOD,EAAY7qB,KAAK6iC,mBAAmBhY,GAAa,IAGvE,OAFoBC,EAAU9qB,KAAK6iC,mBAAmB/X,GAAW,IAI1D9qB,KAAKF,MAAM6iC,cAfxB,uCAoBI,OAEE,kBAACpK,GAAkBv4B,KAAKF,WAtB9B,GAAwDkiC,IAA3Ce,GAEJp8B,oBAA8B,aAyBhC,IAAMq8B,GAAkBv8B,EAA6Bs8B,I,UCnB/CE,GAAb,mLAIUC,QAA+C58B,IAAM2W,YAJ/D,EAMSkmB,YAAc,SAAC93B,GACpB,EAAK63B,QAAQ1hC,QAAQ2hC,YAAY93B,IAPrC,EAUSmO,cAAgB,SAACnO,GACtB,EAAK63B,QAAQ1hC,QAAQgY,cAAcnO,IAXvC,EAkBUiJ,kBAAoB,SAAC3R,GAC3B,MAAO,CACLkM,UAAWlM,EACX+X,KAAM,KArBZ,EAyBU0oB,aAAe,SAACzgC,EAAmB0O,GAGzC,OAFiB1O,EAAT+X,MA1BZ,EA+BU2oB,aAAe,SAAC3oB,EAAgBrJ,GACtC,OAAOA,EAAMJ,YAhCjB,EAmCU+R,WAAa,SAACvf,GACpB,IAAM6/B,EAAuB,EAAKF,aAAa,EAAKtjC,MAAM0D,YAAaC,EAAK4N,OACtEkyB,EAAiD,EAAKzjC,MAAMkjB,WAAWvf,EAAM6/B,GAEnF,OAAOh9B,IAAMkI,aAAa+0B,EAAa,CACrCvhC,MAAO,CAACshC,EAAW1/B,GAAO8W,KAAM6oB,EAAYzjC,MAAMkC,OAClDqP,MAAO5N,EAAK4N,SAzClB,8DAcwBhG,GACpBrL,KAAKkjC,QAAQ1hC,QAAQ2X,eAAe9N,KAfxC,+BA6CgE,IAAD,EACXrL,KAAKF,MAA7CkC,EADmD,EACnDA,MAAOwB,EAD4C,EAC5CA,YAAgB6L,EAD4B,+BAErDuF,EAA4B5U,KAAKsU,kBAAkB9Q,GAEzD,OACE,kBAACggC,GAAA,EAAD,KACEH,aAAcrjC,KAAKqjC,cACfh0B,EAFN,CAGEhI,IAAKrH,KAAKkjC,QACVlhC,MAAO,CAAC4S,EAAe/F,UAAWjL,GAAOiL,UAAW7M,GACpDghB,WAAYhjB,KAAKgjB,kBAvDzB,GAAmC1c,IAAMI,WAA5Bu8B,GAEJt8B,oBAA8B,OA2DvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,GACX6L,KAAM,KAGK+oB,GAAOh9B,EAAkBw8B,I,mOCjEhCS,G,mLAII50B,QAAU,SAACiK,GACb,EAAKjZ,MAAMgP,SACb,EAAKhP,MAAMgP,QAAQ,EAAKhP,MAAM6jC,UAAW5qB,I,EAIrCuE,UAAY,SAACvE,GACnB,EAAKjZ,MAAMwH,SAAS,CAACmJ,GAAY8M,SAE7B,EAAKzd,MAAMwd,WACb,EAAKxd,MAAMwd,UAAU,EAAKxd,MAAM6jC,UAAW5qB,I,EAIvCyE,WAAa,SAACzE,GACpB,EAAKjZ,MAAMwH,SAAS,IAEhB,EAAKxH,MAAM0d,YACb,EAAK1d,MAAM0d,WAAW,EAAK1d,MAAM6jC,UAAW5qB,I,EAIxC6d,YAAc,SAAC7d,GACjB,EAAKjZ,MAAM82B,aACb,EAAK92B,MAAM82B,YAAY,EAAK92B,MAAM6jC,UAAW5qB,I,EAIzCkpB,mBAAqB,SAACjgC,GAAiC,IACrDye,EAAwDze,EAAxDye,kBAAmBD,EAAqCxe,EAArCwe,gBAAiBnL,EAAoBrT,EAApBqT,gBAEtC8f,EAAyB3f,GAAcxT,EAAO,SAC9C4hC,EAA6BpuB,GAAcxT,EAAO,aAClD6hC,EAAwBruB,GAAcxT,EAAO,QAEnD,MAAO,CACL6M,UAAW,CACT4R,kBAAmBA,EACnBD,gBAAiBA,EACjBnL,gBAAiBA,GAEnBuH,MAAO,CACL3C,iBAAkBkb,EAAYS,sBAC9BzZ,WAAYgZ,EAAY9E,gBACxBjU,SAAU+Y,EAAYlF,cACtB3T,WAAY6Y,EAAYjF,gBACxB7T,WAAY8Y,EAAYhF,gBACxB5T,MAAO4Y,EAAY/E,YAErBzV,UAAW,CACT7K,MAAO8zB,EAAgB5qB,eACvB3D,gBAAiBuuB,EAAgBnpB,0BAEnC+B,KAAM,CACJ1M,MAAO+zB,EAAWtoB,UAClBxL,OAAQ8zB,EAAWroB,WACnBvB,iBAAkB4pB,EAAWnmB,qBAC7Bzd,UAAW4jC,EAAWnoB,iB,EAKpBooB,WAAa,SAAC9hC,GACpB,OAAO,EAAKlC,MAAM0c,KAAKxa,I,EAGjB+hC,YAAc,SAAC/hC,GAAmC,IAAD,EACzB,EAAKlC,MAA3B8c,EAD+C,EAC/CA,MAAOC,EADwC,EACxCA,WAEf,OACE,kBAAC,GAAD,CAAM7a,MAAO,CAACA,EAAO6a,IAAcD,I,EAI/BonB,gBAAkB,SAAChiC,GACzB,OAAO,EAAKlC,MAAMo3B,UAAUl1B,I,EAGtByM,wBAA0B,SAACzM,GAA4C,IAAD,EACzC,EAAKlC,MAAhC8c,EADoE,EACpEA,MAAOJ,EAD6D,EAC7DA,KAAM0a,EADuD,EACvDA,UAErB,MAAO,CACL1a,GAAQ,EAAKsnB,WAAW9hC,EAAMwa,MAC9BI,GAAS,EAAKmnB,YAAY/hC,EAAM4a,OAChCsa,GAAa,EAAK8M,gBAAgBhiC,EAAMwa,Q,wDAIV,IAAD,EACcxc,KAAKF,MAA1C0D,EADuB,EACvBA,YAAaxB,EADU,EACVA,MAAU9B,EADA,iCAEiBF,KAAKiiC,mBAAmBz+B,GAAhEqL,EAFuB,EAEvBA,UAAW8L,EAFY,EAEZA,UAAcspB,EAFF,mCAGsBjkC,KAAKyO,wBAAwBw1B,GAHnD,YAGxBvnB,EAHwB,KAGXqB,EAHW,KAGEyZ,EAHF,KAK/B,OACE,kBAAC5oB,GAAA,EAAD,KACEG,cAAe,GACX7O,EAFN,CAGE8B,MAAO,CAAC4B,GAAOiL,UAAWA,EAAW7M,GACrC8M,QAAS9O,KAAK8O,QACdwO,UAAWtd,KAAKsd,UAChBE,WAAYxd,KAAKwd,WACjBoZ,YAAa52B,KAAK42B,cAClB,kBAAC3nB,GAAA,EAAD,CAAMjN,MAAO,CAAC4B,GAAO+W,UAAWA,KAChC,kBAAC1L,GAAA,EAAD,CAAMjN,MAAO4B,GAAOqc,cACjBvD,EACAqB,GAEFyZ,O,GA/GuBlxB,IAAMI,WAAhCg9B,GAEG/8B,oBAA8B,WAmHvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfF,WAAY,SACZC,eAAgB,iBAElB6J,aAAc,CACZ5J,cAAe,MACfF,WAAY,UAEdwE,U,mVAAU,IACLjL,KAAWE,mBADP,CAEPs0B,OAAQ,MAICC,GAAW19B,EAAsBi9B,IC1LjCS,GAAb,mLAEUC,YAAoC99B,IAAM2W,YAFpD,EAGUC,kBAA+C/F,GAAkBxH,OAAlB,SAHzD,EAKSyH,aAAe,WACpB,EAAKgtB,YAAY5iC,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAEjD,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBATjB,EAaSC,aAAe,WACpB,EAAK+sB,YAAY5iC,QAAQ1B,MAAMwH,SAAS,IAEpC,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBAjBjB,EAqBSC,QAAU,WACf,EAAK8sB,YAAY5iC,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAYyN,UAEjD,EAAKpe,MAAMwX,SACb,EAAKxX,MAAMwX,WAzBjB,EA6BSC,OAAS,WACd,EAAK6sB,YAAY5iC,QAAQ1B,MAAMwH,SAAS,IAEpC,EAAKxH,MAAMyX,QACb,EAAKzX,MAAMyX,UAjCjB,wDAqCsC,IAAD,EACGvX,KAAKF,MAAjC8d,EADyB,EACzBA,UAAc1d,EADW,qBAGjC,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAKokC,YACVpiC,MAAO,CAAC4b,EAAWha,GAAOuM,gBA7ClC,GAA8B7J,IAAMI,WAmD9B9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,KCrBZinB,GAAwB,YACxBC,GAA8B,UAC9BC,GAAgC,YAEhCC,G,mLAIGl/B,MAAwB,CAC7Bm/B,iBAAiB,EACjBC,eAAgB,G,EAGVC,kBAAoC,IAAInxB,KAASC,MAAM,G,EACvDmxB,cAAgC,IAAIpxB,KAASC,OAAO,K,EAcpDoxB,sBAAwB,SAAChxB,GAC/BL,KAASsxB,OAAO,EAAKH,kBAAmB,CACtC9wB,QAASA,IACRf,S,EAGGiyB,YAAc,SAAClxB,GACrBL,KAASI,OAAO,EAAKgxB,cAAe,CAClC/wB,QAASA,EACTP,SAAU,MACTR,S,EAGGkyB,gBAAkB,WACxB,IAAMP,GAA4B,EAAKn/B,MAAMm/B,gBAE7C,EAAKv9B,SAAS,CAAEu9B,qB,EAGVQ,eAAiB,SAAC5zB,EAAe0H,GACnC,EAAKjZ,MAAMwa,UACb,EAAKxa,MAAMwa,SAASjJ,EAAO0H,I,EAIvBkpB,mBAAqB,SAACjgC,GAC5B,MAAO,CACLie,aAAc,CACZQ,kBAAmBze,EAAMkjC,6B,EAKvBC,iBAAmB,SAACp7B,GAC1B,IAAM26B,EAAyB36B,EAAOw6B,IAAuBpzB,KAAKpB,OAElE,EAAK7I,SAAS,CAAEw9B,oB,EAGVU,cAAgB,SAAC1qB,GAGvB,OAF0B,EAAK5a,MAAvBya,gBAEiBG,EAAKipB,W,EAGxB0B,uBAAyB,WAAgB,IACvC/U,EAAY,EAAKxwB,MAAjBwwB,QAGR,OAF4B,EAAKhrB,MAAzBm/B,iBAE8B,OAAZnU,G,EAGpBgV,sBAAwB,SAAC5qB,EAAoBrJ,GAA4B,IACvEif,EAAY,EAAKxwB,MAAjBwwB,QAER,OAAQjf,IAAUqJ,EAAK6qB,SAASlhC,OAAS,GAAmB,OAAZisB,G,EAG1C6F,cAAgB,WAAuB,IACrC7F,EAAY,EAAKxwB,MAAjBwwB,QAER,OAAOA,GAAWhqB,IAAMkI,aAAa8hB,EAAS,CAC5CrsB,IAAKqgC,M,EAIDkB,wBAA0B,SAACxjC,GACjC,IAIMyjC,EAA2B,CAAE5/B,UAAW,CAAC,CAAEwS,OAJvB,EAAKusB,cAAcc,YAAY,CACvDC,WAAY,EAAE,IAAK,GACnBC,YAAa,CAAC,UAAW,aAI3B,OACE,kBAAC,GAAD,CACE5jC,MAAO,CAACA,EAAOyjC,GACfttB,YAAY,K,EAKV0tB,eAAiB,SAACnrB,EACAorB,EACAz0B,GAExB,IAAM00B,EAAiCD,EAAa,EAAKd,gBAAkB,EAAKC,eAC1Ee,EAAwBF,EAAa,EAAKN,wBAA0B,KAE1E,OACE,kBAAC,GAAD,OACM9qB,EADN,CAEEzW,IAAKoN,EACL6lB,UAAW8O,EACXl3B,QAASi3B,M,EAKPE,wBAA0B,SAACV,GACjC,IAAM9D,EAAwC,CAAEtC,IAAKoF,IAErD,OACE,kBAAC,GAAD,CAAajG,SAAU,EAAK6G,kBAC1B,kBAACl2B,GAAA,EAAD,OACMwyB,EADN,CAEEtyB,cAAc,OACdlL,IAAKsgC,GACLviC,MAAO4B,GAAOsiC,gBACbX,K,EAMDY,eAAiB,WAA4B,IAAD,EACX,EAAKrmC,MAApC4a,EAD0C,EAC1CA,KAAMlX,EADoC,EACpCA,YADoC,EACvB8sB,QAE3B,OAAO5V,EAAK6qB,SAAS5gC,KAAI,SAACyhC,EAAmB/0B,GAAmB,IACtD4O,EAAiB,EAAKgiB,mBAAmBz+B,GAAzCyc,aACFomB,EAAsB,EAAKjB,cAAcgB,GAEzCj2B,EAA2B7J,IAAMkI,aAAa,EAAKq3B,eAAeO,GAAK,EAAO/0B,GAAQ,CAC1FrP,MAAOie,EACPlF,SAAUsrB,IAENC,EAAiC,EAAKhB,sBAAsB5qB,EAAMrJ,GACtE,EAAK8kB,gBAAkB,KAEzB,OACE,kBAAC,IAAMtC,SAAP,CAAgB5vB,IAAKoN,GAClBlB,EACAm2B,O,EAMD73B,wBAA0B,WAA6B,IACrDiM,EAAS,EAAK5a,MAAd4a,KAER,MAAO,CACL,EAAKmrB,eAAenrB,GAAM,EAAM2pB,IAChC,EAAK8B,iBACL,EAAKd,yBAA2B,EAAKlP,gBAAkB,O,kEA3JjC5T,EAAyBgkB,GAC7CA,EAAU9B,kBAAoBzkC,KAAKsF,MAAMm/B,kBACvCzkC,KAAKsF,MAAMm/B,iBACbzkC,KAAK6kC,sBAAsB7kC,KAAKsF,MAAMo/B,gBACtC1kC,KAAK+kC,YAAY,KAEjB/kC,KAAK6kC,sBAAsB,GAC3B7kC,KAAK+kC,aAAa,S,+BAwJc,IAC5BN,EAAoBzkC,KAAKsF,MAAzBm/B,gBAD2B,EAEGzkC,KAAKyO,0BAFR,YAE5B+3B,EAF4B,KAElBjB,EAFkB,KAERjV,EAFQ,KAG7BmW,EAAsDzmC,KAAKimC,wBAAwBV,GAEnFE,EAA2B,CAAE11B,OAAQ/P,KAAK2kC,mBAEhD,OACE,kBAAC,IAAM9Q,SAAP,KACG2S,EACAlW,EACD,kBAAC9c,GAAA,EAASvE,KAAV,CAAejN,MAAOyjC,GACnBhB,GAAmBc,GAErBkB,O,GAzLsBngC,IAAMI,WAA/B89B,GAEG79B,oBAA8B,UA6LvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bu2B,cAAe,CACbpE,QAAS,EACTjyB,SAAU,cAID62B,GAAUjgC,EAAqB+9B,ICjP/BmC,GAAb,mFAQoB9lB,GAChB,IAAI+lB,EAAoB,EACxB,OAAO/lB,EAAKlc,KAAI,SAAC+V,GAWf,OAVKA,EAAK6qB,UAAqC,IAAzB7qB,EAAK6qB,SAASlhC,OAIlCqW,EAAK6qB,SAAW7qB,EAAK6qB,SAAS5gC,KAAI,SAACyhC,GAGjC,OAFAA,EAAIzC,UAAYiD,EAChBA,GAAwB,EACjBR,MANT1rB,EAAKipB,UAAYiD,EACjBA,GAAwB,GAQnBlsB,SArBb,KC0DMmsB,G,mLAII9/B,QAAuB,IAAI4/B,G,EAE3BrsB,SAAW,SAACC,EAAuBxB,GACrC,EAAKjZ,MAAMwa,UACb,EAAKxa,MAAMwa,SAASC,EAAexB,I,EAI/B+tB,gBAAkB,WAGxB,MAAsB,cAFC,EAAKhnC,MAApByC,Y,EAKFwkC,iBAAmB,SAACrsB,GAC1B,OAAOA,EAAK6qB,UAAqC,IAAzB7qB,EAAK6qB,SAASlhC,Q,EAGhC+gC,cAAgB,SAAC1qB,GAGvB,OAF0B,EAAK5a,MAAvBya,gBAEiBG,EAAKipB,W,EAGxBkC,eAAiB,SAACpiC,GAA8D,IAC9E8W,EAAkB,EAAKza,MAAvBya,cACF8rB,EAAsB,EAAKjB,cAAc3hC,EAAKiX,MAEpD,OAAO,EAAKqsB,iBAAiBtjC,EAAKiX,MAChC,kBAACgsB,GAAD,CACEhsB,KAAMjX,EAAKiX,KACXH,cAAeA,EACf+V,QAAS,EAAK6F,gBACd7b,SAAU,EAAKA,WAGjB,kBAAC,GAAD,OACM7W,EAAKiX,KADX,CAEEK,SAAUsrB,EACVv3B,QAAS,EAAKwL,a,EAKZ6b,cAAgB,WACtB,OAAO,EAAK2Q,mBACV,kBAACnZ,GAAD,O,wDAI8B,IAAD,EACY3tB,KAAKF,MAA5B+gB,GADW,EACvBte,WADuB,EACXse,MAAS3gB,EADE,6BAEzBwL,EAAwB1L,KAAK+G,QAAQigC,WAAWnmB,GAEtD,OACE,kBAAC4iB,GAAD,KACEwD,uBAAwBjnC,KAAKm2B,cAC7BnT,WAAYhjB,KAAK6lC,eACjBhlB,KAAMnV,GACFxL,Q,GA/DgBoG,IAAMI,WAA5BmgC,GAEGlgC,oBAA8B,OAmEhC,IAAMugC,GAAOzgC,EAAkBogC,IChChCM,G,mLAII/Q,aAAe,WACrB,OAAO,EAAKt2B,MAAMu1B,U,EAGZf,aAAe,WACrB,OAAO,EAAKx0B,MAAM21B,U,EAGZ2R,WAAa,WAAoB,IAAD,EACuB,EAAKtnC,MAAnC0D,GADO,EAC9BxB,MAD8B,EACvBqzB,OADuB,EACfI,OADe,EACPjyB,aAAgBtD,EADT,iDAGtC,OACE,kBAACgnC,GAAD,KACEllC,MAAOwB,EACP6jC,8BAA8B,EAC9BC,SAAS,GACLpnC,K,EAKFuO,wBAA0B,WAA6B,IAAD,EACjC,EAAK3O,MAAxBu1B,EADoD,EACpDA,OAAQI,EAD4C,EAC5CA,OAEhB,MAAO,CACLJ,GAAU,EAAKe,eACf,EAAKgR,aACL3R,GAAU,EAAKnB,iB,wDAImB,IAAD,EACJt0B,KAAKyO,0BADD,YAC5B4mB,EAD4B,KACpBkS,EADoB,KACd9R,EADc,KAGnC,OACE,kBAAC,IAAM5B,SAAP,KACGwB,EACAkS,EACA9R,O,GA1CqBnvB,IAAMI,WAA9BygC,GAEGxgC,oBAA8B,SA8ChC,IAAM6gC,GAAS/gC,EAAoB0gC,IC9G7BM,GAAb,yIAGI,OACE,kBAAC,GAAaznC,KAAKF,WAJzB,GAAwCwG,IAAMI,WCGxCghC,G,mLAII54B,QAAU,SAACiK,GACjB,EAAKjZ,MAAMwH,SAAS,IACpB,EAAKxH,MAAMgP,QAAQ,EAAKhP,MAAM4a,KAAM3B,I,EAG9B4uB,uBAAyB,SAAC7mC,GAChC,EAAKgO,QAAQ,O,EAGPwO,UAAY,SAACvE,GACnB,EAAKjZ,MAAMwH,SAAS,CAACmJ,GAAY8M,SAE7B,EAAKzd,MAAMwd,WACb,EAAKxd,MAAMwd,UAAU,EAAKxd,MAAM4a,KAAM3B,I,EAIlCyE,WAAa,SAACzE,GACpB,EAAKjZ,MAAMwH,SAAS,IAEhB,EAAKxH,MAAM0d,YACb,EAAK1d,MAAM0d,WAAW,EAAK1d,MAAM4a,KAAM3B,I,EAInC6d,YAAc,SAAC7d,GACjB,EAAKjZ,MAAM82B,aACb,EAAK92B,MAAM82B,YAAY,EAAK92B,MAAM4a,KAAM3B,I,EAIpCzE,kBAAoB,SAAC3R,GAAkC,IAE3DqZ,EAOErZ,EAPFqZ,UACAJ,EAMEjZ,EANFiZ,eACAC,EAKElZ,EALFkZ,aACAE,EAIEpZ,EAJFoZ,eACAD,EAGEnZ,EAHFmZ,eACA2B,EAEE9a,EAFF8a,qBAIF,MAAO,CACL5O,UAZ0D,IASxDlM,EATwD,wGAa1DsZ,KAAM,CACJM,MAAOP,EACPG,WAAYP,EACZQ,SAAUP,EACVS,WAAYP,EACZM,WAAYP,EACZ7B,iBAAkBwD,K,EAKhBE,kBAAoB,SAAC3b,GAC3B,OACE,kBAAC,GAAD,CAAMA,MAAO,CAACA,EAAO4B,GAAOqY,KAAM,EAAKnc,MAAM4a,KAAKkD,YAC/C,EAAK9d,MAAM4a,KAAKuB,O,EAKf2rB,kBAAoB,WAAoB,IAAD,EACM,EAAK9nC,MAAhD0D,EADqC,EACrCA,YAAaxB,EADwB,EACxBA,MAAgB9B,GADQ,EACjBwa,KADiB,yCAEjB,EAAKpG,kBAAkB9Q,GAA3CqL,EAFqC,EAErCA,UAAWoN,EAF0B,EAE1BA,KACb8B,EAA2B,EAAKJ,kBAAkB1B,GAExD,OACE,kBAACrN,GAAA,EAAD,KACEG,cAAe,GACX7O,EAFN,CAGE8B,MAAO,CAAC4B,GAAOiL,UAAWA,EAAW7M,GACrC8M,QAAS,EAAKA,QACdwO,UAAW,EAAKA,UAChBE,WAAY,EAAKA,WACjBoZ,YAAa,EAAKA,cACjB7Y,I,EAKC8pB,sBAAwB,WAAoB,IAAD,EACqC,EAAK/nC,MAAnFkC,EADyC,EACzCA,MAAOwB,EADkC,EAClCA,YAAauX,EADqB,EACrBA,SAAU6J,EADW,EACXA,SAAU0U,EADC,EACDA,cAAe5e,EADd,EACcA,KAASxa,EADvB,8EAErB,EAAKoU,kBAAkB9Q,GAA3CqL,EAFyC,EAEzCA,UAAWoN,EAF8B,EAE9BA,KAEnB,OACE,kBAAChN,GAAA,EAAD,OACM/O,EADN,CAEE8B,MAAO,CAAC4B,GAAOiL,UAAWA,EAAW7M,KACrC,kBAAC,GAAD,CACEia,KAAMvB,EAAKuB,KACX2B,UAAW,CAAC3B,EAAMvB,EAAKkD,UAAWha,GAAOkkC,iBACzCljB,SAAUA,EACV8T,QAAS3d,EACTue,cAAeA,EACfb,SAAU,EAAKkP,2B,wDAOrB,OAAO3nC,KAAKF,MAAMioC,YAAc/nC,KAAK6nC,wBAA0B7nC,KAAK4nC,wB,GA3GpCthC,IAAMI,WAApCghC,GAEG/gC,oBAA8B,eA6GvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfF,WAAY,UAEdqG,KAAM,GACNP,KAAM,GACN6rB,gBAAiB,CACfh4B,MAAO,UAIEk4B,GAAevhC,EAA0BihC,ICzJzCM,GAAb,mLAEUC,gBAAwC3hC,IAAM2W,YAFxD,EAGUC,kBAA+C/F,GAAkBxH,OAAlB,SAHzD,EAKSyH,aAAe,WACpB,EAAK6wB,gBAAgBzmC,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAErD,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBATjB,EAaSC,aAAe,WACpB,EAAK4wB,gBAAgBzmC,QAAQ1B,MAAMwH,SAAS,IAExC,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBAjBjB,EAqBSC,QAAU,WACX,EAAKxX,MAAMwX,SACb,EAAKxX,MAAMwX,WAvBjB,EA2BSC,OAAS,WACV,EAAKzX,MAAMyX,QACb,EAAKzX,MAAMyX,UA7BjB,wDAiC0C,IAAD,EACDvX,KAAKF,MAAjC8d,EAD6B,EAC7BA,UAAc1d,EADe,qBAGrC,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAKioC,gBACVjmC,MAAO,CAAC4b,EAAWha,GAAOuM,gBAzClC,GAAkC7J,IAAMI,WA+ClC9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,K,mOC7BZ8qB,G,mLAII5zB,kBAAoB,SAAC3R,GAAkC,IAE3DwlC,EAEExlC,EAFFwlC,sBAIF,MAAO,CACLt5B,UAP0D,IAIxDlM,EAJwD,2BAQ1D+X,KAAM,CACJ+F,kBAAmB0nB,K,EAKjBC,kBAAoB,SAACC,GAC3B,IAAMC,EAAwBD,EAC3BE,MAAK,SAAC7tB,GAAD,OAA4B,IAATA,KACrB8tB,EAAyBH,EAC5BI,OAAM,SAAC/tB,GAAD,OAA4B,IAATA,KAE5B,QAAQ,GACN,KAAM4tB,IAAiBE,EACrB,MAAO,CAAEztB,UAAU,EAAMue,eAAe,GAC1C,KAAOgP,EACL,MAAO,CAAEvtB,UAAU,EAAOue,eAAe,GAC3C,KAAKkP,EACH,MAAO,CAAEztB,UAAU,EAAMue,eAAe,K,EAItCoP,cAAgB,SAACC,EAA0Bt3B,GAAwC,IAAD,EACnC,EAAKvR,MAA5CkjB,GAD0E,EAChFtI,KADgF,EAC1EsI,YAAY4lB,EAD8D,EAC9DA,SAAa1oC,EADiD,wCAElF2oC,EAAwD,CAC5DnuB,KAAMiuB,EACNt3B,MAAOA,EACPy3B,WAAY,MAER/tB,EAAoB6tB,EAASvC,WAAWsC,GAE9C,OAAO3lB,EAAaA,EAAW6lB,GAC7B,kBAAC,GAAD,OACM3oC,EADN,CAEE6a,SAAUA,EACVL,KAAMiuB,M,EAKJI,uBAAyB,WAA8B,IAAD,EAC9B,EAAKjpC,MAA3B4a,EADoD,EACpDA,KAAMlX,EAD8C,EAC9CA,YACA8/B,EAAc,EAAKhvB,kBAAkB9Q,GAA3CkX,KAER,OAAOA,EAAKhP,MACT/G,KAAI,SAACgkC,EAA0Bt3B,GAC9B,IAAMlB,EAA+B,EAAKu4B,cAAcC,EAAQt3B,GAEhE,OAAO/K,IAAMkI,aAAa2B,E,mVAAnB,IACFw4B,EADE,CAEL3mC,MAAO,CAACmO,EAAQrQ,MAAMkC,MAAOshC,GAC7Br/B,IAAKoN,S,EAKL23B,6BAA+B,SAACC,GAAkE,IAAD,EACxE,EAAKnpC,MAA5B4a,EAD+F,EAC/FA,KAASxa,EADsF,gBAEjGmoC,EAAyCY,EAC5CtkC,KAAI,SAACukC,GAAD,OAAkCA,EAAQppC,MAAMib,YACjDouB,EAA6B,EAAKf,kBAAkBC,GAE1D,OACE,kBAAC,GAAD,OACMnoC,EACAipC,EAFN,CAGEzuB,KAAMA,M,EAKJ0uB,yBAA2B,WAA4B,IACrD1uB,EAAS,EAAK5a,MAAd4a,KAER,OACE,kBAAC,GAAD,CACEkK,UAAU,EACVlK,KAAMA,K,EAKJ2uB,kBAAoB,SAACJ,GAG3B,OAFwB,EAAKnpC,MAArBioC,YAEa,EAAKiB,6BAA6BC,GAAoB,EAAKG,4B,wDAGvC,IACjC5lC,EAAgBxD,KAAKF,MAArB0D,YACAqL,EAAc7O,KAAKsU,kBAAkB9Q,GAArCqL,UACFo6B,EAA0CjpC,KAAK+oC,yBAC/CO,EAAmCtpC,KAAKqpC,kBAAkBJ,GAEhE,OACE,kBAACh6B,GAAA,EAAD,CAAMjN,MAAO6M,GACVy6B,EACAL,O,GA7GgC3iC,IAAMI,WAAzCwhC,GAEGvhC,oBAA8B,oBAiHhC,IAAM4iC,GAAoB9iC,EAA+ByhC,IChHnDsB,GAAb,mLAEUzC,iBAAmB,SAAC0C,GAA6C,IAC/D/9B,EAAU+9B,EAAV/9B,MAER,OAAOA,GAA0B,IAAjBA,EAAMrH,QAL1B,EAQUiW,SAAW,SAACquB,EAA0B5vB,GAC5C,EAAKjZ,MAAMwa,SAASquB,EAAQ5vB,IAThC,EAYU6uB,kBAAoB,SAACnkC,GAAwE,IAAD,EACpD,EAAK3D,MAA3CkjB,EAD0F,EAC1FA,WAAY+kB,EAD8E,EAC9EA,YAAaa,EADiE,EACjEA,SAC3B7tB,EAAoB6tB,EAASvC,WAAW5iC,EAAKiX,MAEnD,OAAO,EAAKqsB,iBAAiBtjC,EAAKiX,MAChC,kBAAC6uB,GAAD,OACM9lC,EADN,CAEEmlC,SAAUA,EACVb,YAAaA,EACb/kB,WAAYA,EACZlU,QAAS,EAAKwL,YAGhB,kBAAC,GAAD,OACM7W,EADN,CAEEmhB,SAAUnhB,EAAKiX,KAAKkK,SACpB7J,SAAUA,EACVgtB,YAAaA,EACbj5B,QAAS,EAAKwL,aA9BtB,EAmCU0I,WAAa,SAACvf,GAAiE,IAC7Euf,EAAe,EAAKljB,MAApBkjB,WAER,OAAOA,EAAaA,EAAWvf,GAAQ,EAAKmkC,kBAAkBnkC,IAtClE,wDAyC6C,IAAD,EACRzD,KAAKF,MAA7BkC,EADgC,EAChCA,MAAU9B,EADsB,iBAGxC,OACE,kBAACujC,GAAD,OACMvjC,EADN,CAEE8B,MAAO,CAAC4B,GAAOiL,UAAW7M,GAC1BghB,WAAYhjB,KAAKgjB,kBAhDzB,GAAuC1c,IAAMI,WAsDvC9C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,KC9FS66B,GAAtB,WAKE,WAAsBxiB,EAAYrG,EAA0BwiB,GAAkC,YAE5FrjC,KAAK2pC,eAAiBziB,EACtBlnB,KAAKqjC,aAAeA,EACpBrjC,KAAK4pC,WAAW/oB,GATpB,mDAoB2BgpB,EAA2BC,GAClD,OAAK9pC,KAAKqjC,aAGAwG,GAAWC,GAAY9pC,KAAKqjC,aAAawG,KAAa7pC,KAAKqjC,aAAayG,GAFzED,IAAYC,IAtBzB,wCA4B8BnB,GAC1B,OAAOA,EAAOj9B,OAAiC,IAAxBi9B,EAAOj9B,MAAMrH,SA7BxC,kCAgCwBwc,GAAqC,IAAD,OACxD,OAAOA,EACJvf,QAAO,SAACC,EAAeC,GACtB,GAAI,EAAKuoC,kBAAkBvoC,GAAU,CACnC,IAAMwoC,EAAqBxoC,EAAQkK,MAAM/G,KAAI,SAAC+V,GAC5C,OAAOA,EAAKuB,QAEd,OAAO1a,EAAI2I,OAAO8/B,GAGlB,OADAzoC,EAAI6C,KAAK5C,EAAQya,MACV1a,IAER,QA5CT,KAgDa0oC,GAAb,YAEE,WAAY/iB,EACArG,EACAwiB,GAAkC,IAAD,qBAEvC9xB,MAAM24B,QAAQhjB,KAChB,4BAAMA,EAASrG,EAAMwiB,KAHoB,OAJ/C,oDAWgBsF,EAA0B31B,GAStC,OARiChT,KAAK+pC,kBAAkBpB,GAGtD3oC,KAAKmqC,2BAA2BxB,GAEhC3oC,KAAKoqC,oBAAoBzB,GAGpB3oC,KAAK2pC,iBApBhB,0CAuB8BhB,GAAiC,IAAD,OACtB3oC,KAAK2pC,eACtCpB,MAAK,SAAC7tB,GACL,OAAO,EAAK2vB,eAAe3vB,EAAMiuB,MAGnC3oC,KAAKsqC,aAAa3B,GAElB3oC,KAAK2pC,eAAevlC,KAAKukC,KA/B/B,iDAmCqCA,GAAiC,IAAD,OASjE,GARwC3oC,KAAK2pC,eAC1CpB,MAAK,SAAC7tB,GACL,OAAOiuB,EAAOj9B,MACX68B,MAAK,SAACW,GACL,OAAOA,IAAYxuB,QAKzBiuB,EAAOj9B,MAAM1H,SAAQ,SAACklC,GAAD,OAA+B,EAAKoB,aAAapB,UACjE,CACL,IAAMqB,EAAmC5B,EAAOj9B,MAC7C1G,QAAO,SAAC0V,GACP,OAAQA,EAAKkK,YAEjB5kB,KAAK2pC,eAAiB3pC,KAAK2pC,eAAez/B,OAAOqgC,MAnDvD,qCAuDwB5H,GACpB,OAAI3iC,KAAKwqC,wBACAxqC,KAAK2pC,eACThlC,KAAI,SAAC+V,GACJ,OAAOA,GAAQA,EAAKuB,QAErB7Z,KAAK,MAEDugC,IA/Db,iCAmEoBjoB,GAAkC,IAAD,OACjD,OAAO1a,KAAK2pC,eACTpB,MAAK,SAACI,GACL,OAAO,EAAK0B,eAAe3vB,EAAMiuB,QAtEzC,8CA2EI,OAAO3oC,KAAK2pC,gBAAiD,IAA/B3pC,KAAK2pC,eAAetlC,SA3EtD,mCA8EuBskC,GAAiC,IAAD,OAC7Ct3B,EAAgBrR,KAAK2pC,eACxBc,WAAU,SAAC/vB,GACV,OAAO,EAAK2vB,eAAe3vB,EAAMiuB,OAEtB,IAAXt3B,GACFrR,KAAK2pC,eAAe/gB,OAAOvX,EAAO,KApFxC,iCAwFuBwP,GAAiC,IAAD,OAOnD,IANyC7gB,KAAK0qC,YAAY7pB,GAAM0nB,MAAK,SAAC7tB,GACpE,OAAO,EAAKivB,eAAepB,MAAK,SAACxtB,GAC/B,OAAOA,EAASkB,OAASvB,SAIkC,IAA/B1a,KAAK2pC,eAAetlC,OAAc,CAGhE,MAAMsmC,MAFkB,2FAhG9B,GAAyCjB,IAuG5BkB,GAAb,YAEE,WAAY1jB,EACArG,EACAwiB,GAAkC,IAAD,qBAEtC9xB,MAAM24B,QAAQhjB,KACjB,4BAAMA,EAASrG,EAAMwiB,KAHoB,OAJ/C,oDAWgBsF,EAA0B31B,GAOtC,OANAhT,KAAK2pC,eAAiBhB,EAElB31B,GACFA,IAGKhT,KAAK2pC,iBAlBhB,qCAqBwBhH,GACpB,OAAI3iC,KAAK2pC,eACA3pC,KAAK2pC,eAAe1tB,KAEpB0mB,IAzBb,iCA6BoBjoB,GAAkC,IAAD,OACjD,OAAI1a,KAAK+pC,kBAAkBrvB,GAClBA,EAAKhP,MAAM68B,MAAK,SAACI,GACtB,OAAO,EAAKtC,WAAWsC,MAGlB3oC,KAAKqqC,eAAe3vB,EAAM1a,KAAK2pC,kBAnC5C,iCAuCuB9oB,GAAiC,IAAD,OAOnD,IANyC7gB,KAAK0qC,YAAY7pB,GAAM0nB,MAAK,SAAC7tB,GACpE,GAAI,EAAKivB,eACP,OAAOjvB,IAAS,EAAKivB,eAAe1tB,SAIRjc,KAAK2pC,eAAgB,CACnD,IAAMxnC,EAAe,WAAenC,KAAK2pC,eAAe1tB,KAAnC,sCACrB,MAAM0uB,MAAMxoC,QAhDlB,GAA0CunC,IC7FpCmB,GAA+B,UA4F/BC,G,YAgBJ,WAAYhrC,GAAqB,IAAD,sBAC9B,4BAAMA,KATDwF,MAAe,CACpBmK,SAAS,EACTs7B,iBAAkB,GAMY,EAUxBj8B,QAAU,SAACiK,GACjB,EAAKiyB,gBAED,EAAKlrC,MAAMgP,SACb,EAAKhP,MAAMgP,QAAQiK,IAdS,EAkBxBuE,UAAY,SAACvE,GACnB,EAAKjZ,MAAMwH,SAAS,CAACmJ,GAAY8M,SAE7B,EAAKzd,MAAMwd,WACb,EAAKxd,MAAMwd,UAAUvE,IAtBO,EA0BxByE,WAAa,SAACzE,GACpB,EAAKjZ,MAAMwH,SAAS,IAEhB,EAAKxH,MAAM0d,YACb,EAAK1d,MAAM0d,WAAWzE,IA9BM,EAkCxBkyB,aAAe,SAACtC,EAA0B5vB,GAChD,IAAM4wB,EAA+B,EAAKf,SAAS/vB,OAAO8vB,EAAQ,EAAKqC,eACvE,EAAKlrC,MAAMwa,SAASqvB,IApCU,EAuCxBuB,iBAAmB,SAACnhC,GAC1B,IAAM+F,EAAgB/F,EAAO8gC,IAAsB15B,KAAKrB,MAExD,EAAK5I,SAAS,CAAE6jC,iBAAkBj7B,KA1CJ,EA6CxBq7B,wBAA0B,WAAwC,IAAD,EACX,EAAKrrC,MAAzDioC,EAD+D,EAC/DA,YAAa4B,EADkD,EAClDA,eAAgBtG,EADkC,EAClCA,aAAcxiB,EADoB,EACpBA,KAEnD,OAAOknB,EACL,IAAIkC,GAAoBN,EAAgB9oB,EAAMwiB,GAC9C,IAAIuH,GAAqBjB,EAAgB9oB,EAAMwiB,IAlDnB,EAqDxB2H,cAAgB,WACtB,IAAMv7B,GAAoB,EAAKnK,MAAMmK,QAErC,EAAKvI,SAAS,CAAEuI,WAAW,EAAK27B,sBAxDF,EA2DxBA,oBAAsB,WAC5B,EAAK/I,iBACL,EAAKgJ,sBA7DyB,EAgExBhJ,eAAiB,WACH,EAAK/8B,MAAjBmK,QAEN,EAAK3P,MAAMwH,SAAS,CAACmJ,GAAY8M,SAEjC,EAAKzd,MAAMwH,SAAS,KArEQ,EAyExB+jC,mBAAqB,WACP,EAAK/lC,MAAjBmK,QAEN,EAAKs1B,YAAY,GAEjB,EAAKA,aAAa,MA9EU,EAkFxBA,YAAc,SAAClxB,GACrBL,KAASI,OAAO,EAAKgxB,cAAe,CAClC/wB,QAASA,EACTP,SAAU,MACTR,SAtF2B,EAyFxBwB,kBAAoB,SAAC3R,GAAkC,IAE3D0S,EAQE1S,EARF0S,gBACA0C,EAOEpV,EAPFoV,YACAL,EAME/U,EANF+U,YACAiJ,EAKEhe,EALFge,UACAD,EAIE/d,EAJF+d,SACAD,EAGE9d,EAHF8d,kBACAD,EAEE7d,EAFF6d,gBACA7L,EACEhS,EADFgS,aAGIkvB,EAAwBruB,GAAc7S,EAAQ,QAC9C2oC,EAAwB91B,GAAc7S,EAAQ,QAC9C4oC,EAA+B/1B,GAAc7S,EAAQ,eACrD6oC,EAA+Bh2B,GAAc7S,EAAQ,eACrD8oC,EAAwBj2B,GAAc7S,EAAQ,SAC9C+oC,EAA2Bl2B,GAAc7S,EAAQ,WAEvD,MAAO,CACLsK,QAAS,CACPoI,gBAAiBA,EACjB0C,YAAaA,EACbL,YAAaA,EACbiJ,UAAWA,EACXD,SAAUA,EACVD,kBAAmBA,EACnBD,gBAAiBA,EACjB7L,aAAcA,GAEhB6H,KAAM,CACJzM,OAAQ8zB,EAAWroB,WACnB1L,MAAO+zB,EAAWtoB,UAClBtB,iBAAkB4pB,EAAWnmB,qBAC7Bzd,UAAW4jC,EAAWnoB,eAExBO,KAAM,CACJM,MAAO+uB,EAAWtvB,UAClBG,WAAYmvB,EAAW1vB,eACvBQ,SAAUkvB,EAAWzvB,aACrBS,WAAYgvB,EAAWvvB,eACvBM,WAAYivB,EAAWxvB,eACvB7B,iBAAkBqxB,EAAW7tB,sBAE/BklB,YAAa,CACXpmB,MAAOgvB,EAAkBI,iBACzBxvB,WAAYovB,EAAkBK,sBAC9BxvB,SAAUmvB,EAAkBM,oBAC5BvvB,WAAYivB,EAAkBO,sBAC9BzvB,WAAYkvB,EAAkBQ,sBAC9B9xB,iBAAkBsxB,EAAkBS,6BAEtCC,QAAS,CACP52B,gBAAiBq2B,EAAc5S,uBAC/BoT,QAASR,EAAcS,eACvBx3B,aAAc+2B,EAAc7S,qBAE9BuT,YAAa,CACXvc,UAAW2b,EAAkBa,qBAC7B13B,aAAc62B,EAAkBc,wBAChCv0B,YAAayzB,EAAkBe,uBAC/B70B,YAAa8zB,EAAkBgB,wBAEjCC,MAAO,CACLlwB,MAAOkvB,EAAWiB,WAClBC,aAAclB,EAAWmB,qBA1JC,EA+JxBC,mBAAqB,SAAC7qC,GAAmC,IAAD,EAChC,EAAKlC,MAA3B2sC,EADsD,EACtDA,MAAOhB,EAD+C,EAC/CA,WAEf,OACE,kBAAC,GAAD,CAAMzpC,MAAO,CAACA,EAAO4B,GAAO6oC,MAAOhB,IAChCgB,IApKyB,EAyKxBK,yBAA2B,SAAC9qC,GAClC,IAKMyjC,EAA2B,CAAE5/B,UAAW,CAAC,CAAEwS,OALvB,EAAKusB,cAAcc,YAAY,CACvDC,WAAY,EAAE,IAAK,GACnBC,YAAa,CAAC,UAAW,aAK3B,OACE,kBAAC,GAAD,CACE5jC,MAAO,CAACA,EAAOyjC,GACfttB,YAAY,KApLc,EAyLxBsE,kBAAoB,SAACza,GAC3B,OAAI,EAAKlC,MAAM0c,KACN,EAAK1c,MAAM0c,KAAKxa,EAAO,EAAKsD,MAAMmK,SAElC,EAAKq9B,yBAAyB9qC,IA7LT,EAiMxB2b,kBAAoB,SAACovB,EAAuBC,GAA8C,IAAD,EAC5D,EAAKltC,MAAhC6iC,EADuF,EACvFA,YAAa/kB,EAD0E,EAC1EA,UACf9c,EAAgB,EAAK8nC,SAASqE,eAAetK,GAC7C3gC,EAAmB2gC,IAAgB7hC,EAAQksC,EAAmBD,EAEpE,OACE,kBAAC,GAAD,CACE/qC,MAAO,CAACA,EAAO4B,GAAOqY,KAAM2B,GAC5BsvB,cAAe,EACfC,cAAc,QACbrsC,IA3MyB,EAgNxBssC,yBAA2B,SAACprC,GAAgD,IAAD,EAC5B,EAAKlC,MAAnBI,GAD0C,EACzEqC,WADyE,EAC7DonC,eAD6D,wCAE3E0D,EAAwC,CAAEv9B,MAAO,EAAKxK,MAAMylC,kBAElE,OACE,kBAAC,GAAD,OACM7qC,EADN,CAEE0oC,SAAU,EAAKA,SACf3kC,IAAK,EACLjC,MAAO,CAAC4B,GAAOwoC,YAAapqC,EAAOqrC,GACnC/F,SAAS,EACThtB,SAAU,EAAK2wB,iBA3NW,EAgOxB1I,sBAAwB,SAACvgC,GAC/B,MAAO,CACL,EAAKya,kBAAkBza,EAAMwa,MAC7B,EAAKmB,kBAAkB3b,EAAMia,KAAMja,EAAM2gC,eAnOb,EAuOxB2K,qBAAuB,WAAuB,IAAD,EACC,EAAKxtC,MAAjD0D,EAD2C,EAC3CA,YAAa+pC,EAD8B,EAC9BA,aAAiBrtC,EADa,wCAEH,EAAKoU,kBAAkB9Q,GAA/DyJ,EAF2C,EAE3CA,QAAqBwpB,GAFsB,EAElCwV,QAFkC,gCAGhB,EAAK1J,sBAAsB9L,GAHX,YAG5C/Z,EAH4C,KAG/BqB,EAH+B,KAK7C0jB,EAAwC,CAAEtC,IAAK0L,IAErD,OACE,kBAAC,GAAD,CAAavM,SAAU,EAAK4M,kBAC1B,kBAACt8B,GAAA,EAAD,OACM1O,EACAuhC,EAFN,CAGEx9B,IAAK4mC,GACL97B,cAAe,EACf/M,MAAO,CAAC4B,GAAOqJ,QAASA,EAASsgC,GACjCz+B,QAAS,EAAKA,QACdwO,UAAW,EAAKA,UAChBE,WAAY,EAAKA,aAChBO,EACArB,KA1PuB,EAgQxBjO,wBAA0B,SAACzM,GACjC,MAAO,CACL,EAAKorC,yBAAyBprC,EAAMoqC,aACpCp1B,GAAc,EAAKlX,MAAM2sC,QAAU,EAAKI,mBAAmB7qC,EAAMyqC,OACjE,EAAKa,yBAlQP,EAAK1E,SAAW,EAAKuC,0BACrB,EAAKvG,cAAgB,IAAIpxB,KAASC,OAAO,KAHX,E,kEAO9BzT,KAAK4oC,SAAW5oC,KAAKmrC,4B,+BAiQS,IAAD,EACEnrC,KAAKF,MAA5B0D,EADqB,EACrBA,YAAaxB,EADQ,EACRA,MACf4S,EAA4B5U,KAAKsU,kBAAkB9Q,GACnD6pC,EAAwC,CAAEzd,SAAU5vB,KAAKsF,MAAMylC,kBAHxC,EAK8B/qC,KAAKyO,wBAAwBmG,GAL3D,YAKtB44B,EALsB,KAKFC,EALE,KAKYC,EALZ,KAO7B,OACE,kBAACz+B,GAAA,EAAD,CAAMjN,MAAOA,GACVyrC,EACD,kBAACx+B,GAAA,EAAD,CAAMjN,MAAO,CAAC4B,GAAOqoC,QAASr3B,EAAeq3B,UAC3C,kBAAClK,GAAD,CACEtyB,QAASzP,KAAKsF,MAAMmK,QACpB5P,QAAS2tC,EACTxrC,MAAOqrC,EACPxyB,eAAgBjX,GAAO+W,UACvBzM,gBAAiBlO,KAAKgrC,eACrB0C,S,GAzSiBpnC,IAAMI,WAA9BokC,GAEGnkC,oBAA8B,SAFjCmkC,GAGG9jC,aAAqC,CAC1C27B,YAAa,gBACboF,aAAa,GA4SjB,IAAMnkC,GAAS8L,KAAWC,OAAO,CAC/B1C,QAAS,CACPoJ,cAAe,MACfF,WAAY,SACZC,eAAgB,iBAElB6F,KAAM,CACJlK,KAAM,GAERyK,KAAM,GACNiwB,MAAO,GACP9xB,UAAW,CACT7K,MAAO,EACPC,OAAQ,GAEVq8B,YAAa,CACXuB,SAAU,GAEZC,iBAAkB,CAChB77B,KAAM,EACNoE,WAAY,SACZC,eAAgB,UAElB61B,QAAS,CACP71B,eAAgB,YAIPy3B,GAASpnC,EAAoBqkC,ICpd7B+C,GAAb,mLAEUC,UAAkCxnC,IAAM2W,YAFlD,EAGUC,kBAA+C/F,GAAkBxH,OAAlB,SAHzD,EASSyH,aAAe,WACf,EAAK22B,WACR,EAAKD,UAAUtsC,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAGjD,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBAfjB,EAmBSC,aAAe,WACf,EAAK02B,WACR,EAAKD,UAAUtsC,QAAQ1B,MAAMwH,SAAS,IAGpC,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBAzBjB,EA6BSC,QAAU,WACf,EAAKw2B,UAAUtsC,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAYyN,UAE/C,EAAKpe,MAAMwX,SACb,EAAKxX,MAAMwX,WAjCjB,EAqCSC,OAAS,WACd,EAAKu2B,UAAUtsC,QAAQ1B,MAAMwH,SAAS,IAElC,EAAKxH,MAAMyX,QACb,EAAKzX,MAAMyX,UAzCjB,wDA6CoC,IAAD,EACQvX,KAAKF,MAApCytC,EADuB,EACvBA,aAAiBrtC,EADM,wBAG/B,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAK8tC,UACVP,aAAc,CAACA,EAAc3pC,GAAOuM,cArD5C,gCAMI,OAAOnQ,KAAK8tC,UAAUtsC,QAAQ8D,MAAMmK,YANxC,GAA4BnJ,IAAMI,WA2D5B9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,KCtElB,SAAS4wB,GAAuB3tC,GAC9B,IAEM8B,EAAkB,CAAC,sBACD9B,EADA,sBAEtB,oFAFsB,2GAItB+B,KAAK,MAEP,MAAMuoC,MAAMxoC,GAGd,SAAS8rC,GAAuB5tC,EAAc6tC,GAC5C,IAEM/rC,EAAkB,CAAC,YACX9B,EADU,qCAC+B6tC,EAD/B,KAEtB,mDAFsB,2GAItB9rC,KAAK,MAEP,MAAMuoC,MAAMxoC,G,IAqGDgsC,GAAsB,I,yCApFvBC,MAA0C,IAAIx9B,I,+CAQZ,IAAC,IAAD,0BAAtBw9B,EAAsB,yBAAtBA,EAAsB,gBAC1CA,EAAMpqC,SAAQ,SAACkqC,GACb,EAAKG,iBAAiBH,Q,yCAUA7tC,GACnBL,KAAKouC,MAAME,IAAIjuC,IAClB2tC,GAAuB3tC,GAGzBL,KAAKuuC,YAAcluC,I,kCAOCA,GACpB,OAAOL,KAAKouC,MAAM5tC,IAAIH,K,8BASNA,EAAc6tC,GAC9B,IAAMM,EAAyBN,EAAOluC,KAAKyuC,eAAeP,GAAQluC,KAAK0uC,iBAEvE,MAAO,CACLruC,OACA6tC,KAAMM,EAAUnuC,KAChBmc,KAAMxc,KAAK2uC,gBAAgBtuC,EAAMmuC,M,uCASPN,GAC5BluC,KAAKouC,MAAMx8B,IAAIs8B,EAAK7tC,KAAM6tC,K,qCAGA7tC,GAC1B,IAAM6tC,EAA4BluC,KAAKouC,MAAM5tC,IAAIH,GAMjD,OAJK6tC,GACHF,GAAuB3tC,GAGlB6tC,I,uCAIP,OAAOluC,KAAK4uC,YAAY5uC,KAAKuuC,e,sCAGFluC,EAAc6tC,GAAyD,IAAtCW,IAAqC,yDAKjG,OAJIA,IAAgBX,EAAK5tC,MAAMD,IAC7B4tC,GAAuB5tC,EAAM6tC,EAAK7tC,MAG7B6tC,EAAK5tC,MAAMD,O,MC/DTN,GAAb,YAQE,WAAYD,GAAsB,IAAD,sBAC/B,4BAAMA,KAQD6T,eAAiB,SAACX,GACvB,EAAKC,UAAUH,MAAME,IAVU,EAa1B87B,cAAgB,WACrB,EAAK77B,UAAUJ,QAdgB,EAiBzByB,kBAAoB,WAC1B,OAAO,EAAKrB,UAAU87B,WAhBtB,EAAK97B,UC1DF,SAA0BA,EAAyC7C,GACxE,OAAQ6C,GACN,IAAK,OACH,OAAO,IAAImB,GAAchE,GAC3B,IAAK,QACH,OAAO,IAAImD,GAAenD,GAC5B,IAAK,QACH,OAAO,IAAI8D,GAAe9D,IDmDX4+B,CAAiBlvC,EAAMmT,UAAWnT,EAAMmvC,iBAF1B,EARnC,oEAcIjvC,KAAKiT,UAAUi8B,YAdnB,+BA6BkD,IAAD,EACRlvC,KAAKF,MAAlCO,EADqC,EACrCA,KAAM6tC,EAD+B,EAC/BA,KAAShuC,EADsB,uBAEvCivC,EAAoChB,GAAoBiB,QAAQ/uC,EAAM6tC,GAE5E,OACE,kBAAC16B,GAAA,EAASvE,KAASjP,KAAKsU,oBACrB66B,EAAe3yB,KAAK6yB,eAAenvC,QAnC5C,GAA6BoG,IAAMI,WAAtB3G,GAEJiH,aAAmC,CACxCiM,UAAW,QEtBR,IAAMq8B,GAAb,mLAMUC,oBAAsB,SAACnB,EAAwB/tC,GACrD,IAAMmvC,EAA6BpB,EAAM3D,WAAU,SAACyD,GAClD,OAAOA,EAAK7tC,OAASA,KAGvB,OAAO+tC,EAAMr9B,KAAKsa,IAAI,EAAGmkB,KAX7B,EAcUC,cAAgB,SAAC9sC,EAAmB4rC,GAC1C,IAAMH,EAAyB78B,MAAM24B,QAAQvnC,GAAUA,EAAS,CAACA,GAC3D+sC,EAAiC,EAAKH,oBAAoBnB,EAAOG,GAEvEJ,GAAoBwB,SAApB,MAAAxB,GAAmB,IAAaC,IAChCD,GAAoByB,mBAAmBF,EAAgBrvC,OAnB3D,wDAsBoC,IAAD,EACCL,KAAKF,MAA7BQ,EADuB,EACvBA,MAAOuvC,EADgB,EAChBA,aAGf,OAFA7vC,KAAKyvC,cAAcnvC,EAAOuvC,GAEnB,SA1BX,GAAkCvpC,IAAMI,WAA3B4oC,GAEJtoC,aAA2C,CAChD1G,MAAO,I,6BCjBEwvC,GAA2B,CACtC,eACA,aACA,YACA,cACA,oBACA,iBACA,kBACA,mBACA,mBACA,iBACA,cACA,SACA,UACA,MACA,OACA,YACA,gBACA,WACA,aACA,WACA,SACA,iBACA,OACA,SACA,eACA,YACA,mBACA,aACA,cACA,cACA,YACA,iBACA,YACA,WACA,YACA,WACA,WACA,UACA,gBACA,aACA,oBACA,cACA,eACA,eACA,aACA,kBACA,WACA,QACA,QACA,MACA,QACA,SAIA,a,2jBCiCK,IAAMC,GAAb,mLAIUC,aAA2C1pC,IAAM2W,YAJ3D,EAMSgzB,MAAQ,WACb,EAAKD,aAAaxuC,QAAQyuC,SAP9B,EAUSC,KAAO,WACZ,EAAKF,aAAaxuC,QAAQ0uC,QAX9B,EAcSC,UAAY,WACjB,OAAO,EAAKH,aAAaxuC,QAAQ2uC,aAfrC,EAkBSC,MAAQ,WACb,EAAKJ,aAAaxuC,QAAQ4uC,SAnB9B,EAsBUC,iBAAmB,SAACt3B,GAC1B,EAAKjZ,MAAMwH,SAAS,CAACmJ,GAAYyN,UAE7B,EAAKpe,MAAMwX,SACb,EAAKxX,MAAMwX,QAAQyB,IA1BzB,EA8BUu3B,gBAAkB,SAACv3B,GACzB,EAAKjZ,MAAMwH,SAAS,IAEhB,EAAKxH,MAAMyX,QACb,EAAKzX,MAAMyX,OAAOwB,IAlCxB,EAsCUw3B,YAAc,SAACx3B,GACjB,EAAKjZ,MAAMywC,aACb,EAAKzwC,MAAMywC,YAAYx3B,IAxC7B,EA4CUzE,kBAAoB,SAAC3R,GAC3B,IAD4D,ErElIzD,SAAqBA,EAA2B6O,GACrD,OAAK7O,EAIEvB,OAAOC,KAAKsB,GAAQrB,QAAO,SAACC,EAAgCmE,GAA6C,IAGrF,EAFjBgU,EAAmBnY,EAAnBmY,KAAS82B,EAD4F,IAClFjvC,EADkF,UAG7G,OAAIiQ,EAAKrN,SAASuB,GACT,MAAK8qC,GAAZ,WAAoB9qC,EAAO/C,EAAO+C,IAAlC,aAAyCgU,GAAzC,IAGK,MAAK82B,EAAZ,CAAmB92B,KAAK,MAAMA,EAAP,OAAchU,EAAO/C,EAAO+C,SAClD,IAXM,CAAEgU,KAAM,IqEkI0C+2B,CAD3B/gC,KAAWgF,QAAQ,EAAK5U,MAAMkC,OACqB8tC,IAAnEY,EAF8C,EAEpDh3B,KAA8BwkB,EAFsB,gBAK1DzgB,EA0BE9a,EA1BF8a,qBACA7B,EAyBEjZ,EAzBFiZ,eACAC,EAwBElZ,EAxBFkZ,aAEAE,GAsBEpZ,EAvBFmZ,eAuBEnZ,EAtBFoZ,gBACAC,EAqBErZ,EArBFqZ,UACA2vB,EAoBEhpC,EApBFgpC,iBACApwB,EAmBE5Y,EAnBF4Y,UACAC,EAkBE7Y,EAlBF6Y,WACAkC,EAiBE/a,EAjBF+a,qBACAhC,EAgBE/Y,EAhBF+Y,cACAgxB,EAeE/pC,EAfF+pC,WACAiE,EAcEhuC,EAdFguC,cACAC,EAaEjuC,EAbFiuC,gBACAhE,EAYEjqC,EAZFiqC,kBACAiE,EAWEluC,EAXFkuC,gBACAC,EAUEnuC,EAVFmuC,iBACAC,EASEpuC,EATFouC,aACAC,EAQEruC,EARFquC,gBACAC,EAOEtuC,EAPFsuC,kBACAC,EAMEvuC,EANFuuC,kBACAC,EAKExuC,EALFwuC,iBACAC,EAIEzuC,EAJFyuC,kBACAC,EAGE1uC,EAHF0uC,uBACAC,EAEE3uC,EAFF2uC,qBAIF,MAAO,CACLziC,UAAWqvB,EACXqT,eAAe,MAnC2C,IA+BxD5uC,EA/BwD,mcAmC5C,GAET+tC,GAELc,iBAAkB,CAChBC,UAAWX,GAEb70B,KAAM,CACJhC,iBAAkBwD,EAClBtB,WAAYP,EACZQ,SAAUP,EAGVS,WAAYP,EACZQ,MAAOP,GAET2mB,YAAa,CACXpmB,MAAOovB,GAETnvB,KAAM,CACJ1M,MAAOyL,EACPxL,OAAQyL,EACRvB,iBAAkByD,EAClBzd,UAAWyb,GAEb+wB,MAAO,CACLlwB,MAAOmwB,EACPtwB,SAAUu0B,EACVt0B,WAAYu0B,EACZjE,aAAcC,EACdtwB,WAAYu0B,GAEda,YAAa,CACX5hC,MAAOqhC,EACPphC,OAAQqhC,EACRnxC,UAAWqxC,EACXK,YAAaN,GAEfO,aAAc,CACZx1B,SAAU40B,EACV10B,WAAY40B,EACZ70B,WAAY40B,EACZ10B,MAAOw0B,KAzHf,EA8HUc,2BAA6B,SAAC7vC,GACpC,IAAM0a,EAA2B,EAAKD,kBAAkBza,GAExD,OACE,kBAAC8vC,GAAA,EAAD,CAA0BhjC,QAAS,EAAKyhC,aACrC7zB,IAnIT,EAwIUD,kBAAoB,SAACza,GAC3B,IAAM0a,EAA2B,EAAK5c,MAAM0c,KAAKxa,GAEjD,OAAOsE,IAAMkI,aAAakO,EAAa,CACrCzY,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAO4Y,KAAME,EAAY5c,MAAMkC,UA7IpD,EAiJU6qC,mBAAqB,SAAC7qC,GAC5B,OACE,kBAAC,GAAD,CACEiC,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAO6oC,MAAO,EAAK3sC,MAAM2rC,aACvC,EAAK3rC,MAAM2sC,QAtJpB,EA2JUsF,qBAAuB,SAAC/vC,GAC9B,OACE,kBAAC,GAAD,CACEiC,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAOguC,aAAc,EAAK9xC,MAAMkyC,mBAC9C,EAAKlyC,MAAMmyC,UAhKpB,EAqKUC,yBAA2B,SAAClwC,GAClC,IAAM0a,EAA2B,EAAK5c,MAAM4xC,YAAY1vC,GAExD,OAAOsE,IAAMkI,aAAakO,EAAa,CACrCzY,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAO8tC,YAAah1B,EAAY5c,MAAMkC,UA1K3D,EA8KUyM,wBAA0B,SAACzM,GAA4C,IAAD,EAC9B,EAAKlC,MAA3C0c,EADoE,EACpEA,KAAMiwB,EAD8D,EAC9DA,MAAOiF,EADuD,EACvDA,YAAaO,EAD0C,EAC1CA,QAElC,MAAO,CACLz1B,GAAQ,EAAKq1B,2BAA2B7vC,EAAMwa,MAC9CxF,GAAcy1B,IAAU,EAAKI,mBAAmB7qC,EAAMyqC,OACtDz1B,GAAci7B,IAAY,EAAKF,qBAAqB/vC,EAAM4vC,cAC1DF,GAAe,EAAKQ,yBAAyBlwC,EAAM0vC,eArLzD,wDAyLkD,IAAD,EACI1xC,KAAKF,MAA9C0D,EADqC,EACrCA,YAAaoa,EADwB,EACxBA,UAAc1d,EADU,mCAEvC0U,EAA4B5U,KAAKsU,kBAAkB9Q,GAFZ,EASzCxD,KAAKyO,wBAAwBmG,GATY,YAK3C8H,EAL2C,KAM3C+wB,EAN2C,KAO3C0E,EAP2C,KAQ3CC,EAR2C,KAW7C,OACE,kBAACnjC,GAAA,EAAD,CAAMjN,MAAO,CAAC4S,EAAe/F,UAAWjL,GAAOiL,YAC5C4+B,EACD,kBAACx+B,GAAA,EAAD,CACEjN,MAAO,CAAC4S,EAAe28B,eAAgB3tC,GAAO2tC,iBAC9C,kBAACc,GAAA,EAAD,KACEhrC,IAAKrH,KAAKgwC,cACN9vC,EAFN,CAGE8B,MAAO,CAAC4S,EAAeqH,KAAMrY,GAAOqY,KAAM2B,GAC1C00B,qBAAsB19B,EAAe+tB,YAAYpmB,MACjDg2B,UAAWryC,EAAU0kB,SACrBtN,QAAStX,KAAKqwC,iBACd94B,OAAQvX,KAAKswC,mBAEd5zB,GAEH,kBAACzN,GAAA,EAAD,CAAMjN,MAAO,CAAC4S,EAAe48B,iBAAkB5tC,GAAO4tC,mBACnDY,EACAD,QAtNX,GAAoC7rC,IAAMI,WAA7BqpC,GAEJppC,oBAA8B,QA2NvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,GACX0iC,eAAgB,CACdl7B,cAAe,MACfF,WAAY,SACZrG,MAAO,QAET0hC,iBAAkB,CAChBn7B,cAAe,MACfF,WAAY,UAEd8F,KAAM,CACJ0xB,SAAU,EACV6E,WAAY,EACZC,UAAW,QAEb9P,YAAa,GACbnmB,KAAM,GACNiwB,MAAO,CACL/U,UAAW,QAEbga,YAAa,GACbE,aAAc,CACZla,UAAW,UAIFgb,GAAQjsC,EAAmBspC,IC/V3B2C,GAAb,mLAEUC,SAAiCrsC,IAAM2W,YAFjD,EAGUC,kBAA+C/F,GAAkBxH,OAAlB,SAHzD,EAKSyH,aAAe,WACpB,EAAKu7B,SAASnxC,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAE9C,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBATjB,EAaSC,aAAe,WACpB,EAAKs7B,SAASnxC,QAAQ1B,MAAMwH,SAAS,IAEjC,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBAjBjB,EAqBSC,QAAU,WACX,EAAKxX,MAAMwX,SACb,EAAKxX,MAAMwX,WAvBjB,EA2BSC,OAAS,WACV,EAAKzX,MAAMyX,QACb,EAAKzX,MAAMyX,UA7BjB,wDAiCmC,IAAD,EACMvX,KAAKF,MAAjC8d,EADsB,EACtBA,UAAc1d,EADQ,qBAG9B,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAK2yC,SACV/0B,UAAW,CAACA,EAAWha,GAAOqY,aAzCtC,GAA2B3V,IAAMI,WA+C3B9C,GAAS8L,KAAWC,OAAO,CAC/BsM,KAAM,CAEJmB,aAAc,KCtBLw1B,GAAb,yIAIkD,IAAD,EACG5yC,KAAKF,MAA7CkC,EADqC,EACrCA,MAAOwB,EAD8B,EAC9BA,YAAgB6L,EADc,+BAG7C,OACE,kBAACJ,GAAA,EAAD,OACMI,EADN,CAEErN,MAAO,CAACwB,EAAaxB,UAV7B,GAAqCsE,IAAMI,WAA9BksC,GAEJjsC,oBAA8B,SAchC,IAAMksC,GAASpsC,EAAoBmsC,IClCpCE,GAA0BhU,KAAWt+B,IAAI,UACzC6/B,GAAoB,QACpB0S,GAA2B,CAAEjjC,MAAO,EAAGC,OAAQ,GACxCijC,GAA0B,cAoJ1BC,GAAb,mLAOUC,YAAoBH,GAP9B,EAQU3tB,GAAa,GARvB,EAmBUqb,iBAAmB,SAAC3gC,GAA6B,IAAD,EACX,EAAKA,MAAxCqO,EAD8C,EAC9CA,cAAeD,EAD+B,EAC/BA,gBAEvB,GAAIpO,EAAM2P,QAAS,CACjB,IAAMU,EAA8B,EAAKiB,cACzC,EAAKgU,GAAKnV,GAAaI,KAAKF,EAAS,CAAEhC,gBAAeD,yBAEtD+B,GAAaO,KAAK,EAAK4U,IACvB,EAAKA,GAAK,IA3BhB,EA+BU+tB,wBAA0B,WAChC,IAAMC,EAAmBtU,KAAWt+B,IAAI,UAExC,MAAO,CACLyX,KAAMm7B,EAAWrjC,OAAS,EAAKmjC,YAAYnjC,QAAU,EACrDiI,MAAOo7B,EAAWtjC,MAAQ,EAAKojC,YAAYpjC,OAAS,IApC1D,EAwCUkxB,UAAY,SAACj3B,GACnB,EAAKmpC,YAAcnpC,EAAOs2B,IAAWlvB,MAzCzC,EA4CUkiC,gBAAkB,WAAsC,IAAD,EACnB,EAAKvzC,MAAvCkC,EADqD,EACrDA,MAAO4L,EAD8C,EAC9CA,SAAa1N,EADiC,4BAEvDozC,EAAkC,EAAKH,0BACvC1R,EAAwC,CAAEtC,IAAKkB,IAErD,OACE,kBAACpxB,GAAA,EAAD,OACM/O,EACAuhC,EAFN,CAGE8R,OAAQP,GACR/uC,IAAKo8B,GACLr+B,MAAO,CAAC4B,GAAOiL,UAAWykC,EAAsBtxC,KAC/C4L,IAxDT,EA6DUwD,YAAc,WAA2B,IACvCoiC,EAAkB,EAAK1zC,MAAvB0zC,cACFC,EAAuC,EAAKJ,kBAElD,OAAOG,EACL,kBAAC,IAAM3f,SAAP,KACE,kBAAC5kB,GAAA,EAAD,CACEE,cAAc,WACdnN,MAAO,CAAC4B,GAAO8vC,SAAUF,KAC1BC,GAEDA,GAxER,EA2EUE,kBAAoB,WAC1B,IAAMF,EAA4B,EAAKJ,kBACjCO,EAAyCttC,IAAMkI,aAAailC,EAAO,CACvEzxC,MAAO,CAACyxC,EAAM3zC,MAAMkC,MAAO4B,GAAOiwC,aAClC5vC,IAAKo8B,GACLlxB,cAAe,SAGjB,OACE,kBAAC,GAAD,CAAamvB,SAAU,EAAK0C,WACzB,CAAC4S,KArFV,kEAU4BrxB,GACxB,GAAIA,EAAU9S,UAAYzP,KAAKF,MAAM2P,QACnCzP,KAAKygC,iBAAiBzgC,KAAKF,YACtB,GAAIyiB,EAAU9S,SAAWzP,KAAKF,MAAM2P,QAAS,CAClD,IAAMU,EAA8BnQ,KAAKoR,cACzCnB,GAAaM,OAAOvQ,KAAKolB,GAAIjV,EAAQrQ,MAAM8N,aAfjD,+BA2FI,OAAO5N,KAAK2zC,wBA3FhB,GAA2BrtC,IAAMI,WAApBusC,GAEJjsC,aAAoC,CACzCmH,eAAe,EACfD,gBAAiB,kBAAM,OA2F3B,IAAMtK,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTgB,SAAU,YAEZ6jC,SAAU,CACR7jC,SAAU,WACVC,MAAOgjC,GAAkBhjC,MACzBC,OAAQ+iC,GAAkB/iC,QAE5B8jC,YAAa,CACX/R,QAAS,KCjNPgS,G,mLAQIx/B,kBAAoB,SAAC3R,GAAkC,IAE3D8X,EAEE9X,EAFF8X,yBAIF,MAAO,CACL5L,UAP0D,IAIxDlM,EAJwD,8BAQ1DgY,UAAW,CACTtF,gBAAiBoF,K,EAKfs5B,4BAA8B,SAAC/xC,GAAmC,IAAD,EACD,EAAKlC,MAA5B+gB,GADwB,EAC/Drd,YAD+D,EAClDqX,eADkD,EAClCjN,SADkC,EACxBiT,MAAS3gB,EADe,0DAGvE,OACE,kBAACgnC,GAAD,OACMhnC,EADN,CAEE2gB,KAAMA,EACN7e,MAAO,CAAC4B,GAAO2jC,KAAMvlC,GACrBgyC,mBAAoBnzB,EAAKxc,OACzBijC,SAAS,M,wDAKkB,IAAD,EACqDtnC,KAAKF,MAAhF0D,EADsB,EACtBA,YAAaxB,EADS,EACTA,MAAO6Y,EADE,EACFA,eAAgBjN,EADd,EACcA,SAAyB1N,GADvC,EACwBqC,WADxB,2EAEGvC,KAAKsU,kBAAkB9Q,GAAhDqL,EAFsB,EAEtBA,UAAW8L,EAFW,EAEXA,UAEbs5B,EAA8Bj0C,KAAK+zC,4BAA4BllC,GAErE,OACE,kBAACkzB,GAAD,OACM7hC,EADN,CAEE8B,MAAO,CAAC4B,GAAOiL,UAAW7M,GAC1B6Y,eAAgB,CAACF,EAAWE,GAC5Bhb,QAASo0C,IACRrmC,O,GAhD2BtH,IAAMI,WAApCotC,GAEGntC,oBAA8B,eAFjCmtC,GAIG9sC,aAA2C,CAChDg3B,gBAAiB,IAiDrB,IAAMp6B,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACT0Q,SAAU,UAEZgoB,KAAM,CACJoG,SAAU,KAIDuG,GAAeztC,EAA0BqtC,IChEzCK,GAAb,mLAIUrlC,QAAU,WACZ,EAAKhP,MAAM24B,UACb,EAAK34B,MAAM24B,UAAU,EAAK34B,MAAM44B,UANtC,EAUUpb,UAAY,SAACvE,GACnB,EAAKjZ,MAAMwH,SAAS,CAACmJ,GAAY8M,SAE7B,EAAKzd,MAAMwd,WACb,EAAKxd,MAAMwd,UAAUvE,IAd3B,EAkBUyE,WAAa,SAACzE,GACpB,EAAKjZ,MAAMwH,SAAS,IAEhB,EAAKxH,MAAM0d,YACb,EAAK1d,MAAM0d,WAAWzE,IAtB5B,EA0BUzE,kBAAoB,SAAC3R,GAAkC,IAE3D8a,EAeE9a,EAfF8a,qBACA7B,EAcEjZ,EAdFiZ,eACAC,EAaElZ,EAbFkZ,aACAE,EAYEpZ,EAZFoZ,eACAD,EAWEnZ,EAXFmZ,eACAE,EAUErZ,EAVFqZ,UACAT,EASE5Y,EATF4Y,UACAC,EAQE7Y,EARF6Y,WACAmd,EAOEh2B,EAPFg2B,iBACAjd,EAME/Y,EANF+Y,cACA0B,EAKEza,EALFya,aACAwb,EAIEj2B,EAJFi2B,cACAC,EAGEl2B,EAHFk2B,oBACAC,EAEEn2B,EAFFm2B,uBAIF,MAAO,CACLjqB,UAAW,GACXkqB,mBAAoB,GACpBC,gBAtB0D,IAiBxDr2B,EAjBwD,kPAuB1DsZ,KAAM,CACJhC,iBAAkBwD,EAClBtB,WAAYP,EACZQ,SAAUP,EACVQ,WAAYP,EACZQ,WAAYP,EACZQ,MAAOP,GAETQ,KAAM,CACJ1M,MAAOyL,EACPxL,OAAQyL,EACR7G,aAAcgkB,EACdtjB,gBAAiBqG,GAEnBud,UAAW,CACTnpB,MAAOsN,EACPrN,OAAQ6oB,EACRjkB,aAAckkB,EACdxjB,gBAAiByjB,KAnEzB,EAwEUI,oBAAsB,SAACl3B,GAC7B,IAGMlB,EAAgB,GAHO4O,KAAWgF,QAAQ1S,GAGX8N,MAErC,MAAO,CACLkI,KAAMlX,EACNmX,IAAKnX,EACLoX,MAAOpX,EACPq4B,OAAQr4B,IAlFd,EAsFU6c,kBAAoB,SAAC3b,GAAmC,IAAD,EACjC,EAAKlC,MAAzBmc,EADqD,EACrDA,KAAM2B,EAD+C,EAC/CA,UAEd,OACE,kBAAC,GAAD,CACE3Z,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAOqY,KAAM2B,IAC3B3B,IA7FT,EAkGUxN,wBAA0B,SAACzM,GAA4C,IACrEia,EAAS,EAAKnc,MAAdmc,KAER,MAAO,CACLjF,GAAciF,IAAS,EAAK0B,kBAAkB3b,EAAMia,QAtG1D,wDA0G8D,IAAD,EACCjc,KAAKF,MAAvDkC,EADiD,EACjDA,MAAOwB,EAD0C,EAC1CA,YAAaohB,EAD6B,EAC7BA,SAAavV,EADgB,4CAUrDrP,KAAKsU,kBAAkB9Q,GANzBqL,EAJuD,EAIvDA,UACAkqB,EALuD,EAKvDA,mBACAC,EANuD,EAMvDA,gBACAxc,EAPuD,EAOvDA,KACAyc,EARuD,EAQvDA,UACGv1B,EAToD,+EAYnD61B,EAA6C,CAACP,EAAiBp1B,GAAOo1B,iBACtEQ,EAAwBx5B,KAAKk5B,oBAAoBK,GAbE,EAenCv5B,KAAKyO,wBAAwB/K,GAA5Cqa,EAfkD,aAiBzD,OACE,kBAACnP,GAAA,EAAD,KACEG,cAAe,GACXM,EAFN,CAGErN,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW7M,GACrC4iB,SAAUA,EACV6U,QAASD,EACT1qB,QAAS9O,KAAK8O,QACdwO,UAAWtd,KAAKsd,UAChBE,WAAYxd,KAAKwd,aACjB,kBAACvO,GAAA,EAAD,CAAMjN,MAAO,CAAC+2B,EAAoBn1B,GAAOm1B,qBACvC,kBAAC9pB,GAAA,EAAD,CAAMjN,MAAO,CAACi3B,EAAWr1B,GAAOq1B,aAChC,kBAAChqB,GAAA,EAAD,CAAMjN,MAAOu3B,GACX,kBAACtqB,GAAA,EAAD,CAAMjN,MAAO,CAACwa,EAAM5Y,GAAO4Y,UAG9BuB,OA3IT,GAAoCzX,IAAMI,WAA7BytC,GAEJxtC,oBAA8B,QA+IvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfF,WAAY,UAEd4iB,mBAAoB,CAClB3iB,eAAgB,SAChBD,WAAY,UAEd6iB,gBAAiB,CACf5iB,eAAgB,SAChBD,WAAY,UAEdqG,KAAM,GACNyc,UAAW,CACTppB,SAAU,YAEZoM,KAAM,KAGKm4B,GAAQ3tC,EAAmB0tC,IC7N3BC,GAAb,mLAEUC,SAAiC/tC,IAAM2W,YAFjD,EAGUC,kBAA+C/F,GAAkBxH,OAAlB,SAHzD,EAKSyH,aAAe,WACpB,EAAKi9B,SAAS7yC,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAE9C,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBATjB,EAaSC,aAAe,WACpB,EAAKg9B,SAAS7yC,QAAQ1B,MAAMwH,SAAS,IAEjC,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBAjBjB,EAqBSC,QAAU,WACf,EAAK+8B,SAAS7yC,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAYyN,UAE9C,EAAKpe,MAAMwX,SACb,EAAKxX,MAAMwX,WAzBjB,EA6BSC,OAAS,WACd,EAAK88B,SAAS7yC,QAAQ1B,MAAMwH,SAAS,IAEjC,EAAKxH,MAAMyX,QACb,EAAKzX,MAAMyX,UAjCjB,wDAqCmC,IAAD,EACMvX,KAAKF,MAAjC8d,EADsB,EACtBA,UAAc1d,EADQ,qBAG9B,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGElV,MAAO,CAAC4b,EAAWha,GAAOuM,SAC1B9I,IAAKrH,KAAKq0C,gBA7ClB,GAA2B/tC,IAAMI,WAmD3B9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,KCxBZk3B,G,mLAQIC,cAAgB,SAACljC,GACnB,EAAKvR,MAAM24B,UACb,EAAK34B,MAAM24B,SAASpnB,I,EAIhBiD,kBAAoB,SAAC3R,GAC3B,MAAO,CACLkM,UAAWlM,I,EAIP6xC,mBAAqB,SAACrkC,EAAuBkB,GACnD,OAAO/K,IAAMkI,aAAa2B,EAAS,CACjClM,IAAKoN,EACLqnB,QAAS,EAAK54B,MAAMya,gBAAkBlJ,EACtConB,SAAU,kBAAM,EAAK8b,cAAcljC,O,EAI/BojC,oBAAsB,SAAC9xC,GAC7B,OAAO2D,IAAMoI,SAAS/J,IAAIhC,EAAQ,EAAK6xC,qB,wDAGO,IAAD,EACax0C,KAAKF,MAAvD0D,EADqC,EACrCA,YAAaxB,EADwB,EACxBA,MAAO4L,EADiB,EACjBA,SAAayB,EADI,0CAEvCuF,EAA4B5U,KAAKsU,kBAAkB9Q,GAEnDkxC,EAAgC10C,KAAKy0C,oBAAoB7mC,GAE/D,OACE,kBAACqB,GAAA,EAAD,OACMI,EADN,CAEErN,MAAO,CAAC4S,EAAe/F,UAAWjL,GAAOiL,UAAW7M,KACnD0yC,O,GA1CyBpuC,IAAMI,WAAlC4tC,GAEG3tC,oBAA8B,aAFjC2tC,GAIGttC,aAAyC,CAC9CuT,eAAgB,GA2CpB,IAAM3W,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,KAGA8lC,GAAaluC,EAAwB6tC,I,qjBCzFlD,IACMM,GAAc,IACdC,GAAqBC,GACrBC,GAAqBD,GAErBE,GAAmC5hC,KAAO6hC,OAAO,GAAK,EAAK,GAAK,GAEhEC,GAAiC,SAACC,GACtC,OARiB,IAQJN,IARI,IAQeE,IAAcC,GAAiBG,IAG3DC,GAA+B,SAACD,GACpC,OAAOP,GAAMC,KAZI,IAYgBE,IAAcC,GAAiBG,IAG5D7iC,GAAyC,CAC7CgB,SAAU,KACVH,OAAQC,KAAOC,OACfd,QAAS,GAkBE8iC,GAAb,YAUE,WAAYC,EAAiBllC,GAAkC,IAAD,sBAC5D,kCAAWkC,GAAX,GAA8BlC,MAsCxBmlC,iBAAmB,SAACjiC,GAG1B,OAAO,IAAI/B,MAFoB,GAAK+B,EAAW,KAEdnT,KAAK,IA1CsB,EA6CtDq1C,6BAA+B,WACrC,OAAO,EAAKC,eAAe/P,YAAY,CACrCC,WAAY,CAAC,EAAG,GAChBC,YAAa,CACX,EAAK8P,WAAWX,GAAaF,IAC7B,EAAKa,WAAY,EAAId,GAAMG,GAAaF,QAlDgB,EAuDtDc,uBAAyB,SAACxiC,GAChC,OAAO,EAAKsiC,eAAe/P,YAAY,CACrCC,WAAY,EAAKiQ,mCACjBhQ,YAAa,EAAKiQ,kCAAkC1iC,MA1DM,EAmEtDyiC,iCAAmC,WACzC,OAAO,EAAKE,gBAAgBnxC,KAAI,SAAC+V,EAAc4hB,GAC7C,OAAOA,GAAS,EAAKwZ,gBAAgBzxC,OAAS,OArEY,EA+EtDwxC,kCAAoC,SAAC1iC,GAC3C,OAAO,EAAK2iC,gBAAgBnxC,KAAI,SAAC+V,EAAc4hB,GAC7C,IAAM6Y,EAAmB,EAAI7Y,GAAS,EAAKwZ,gBAAgBzxC,OAAS,GAC9D0xC,EAA0BhlC,KAAKyX,IAAI,EAAM2sB,EAAUA,GAEzD,OAAO,EAAKO,WAAWviC,EAAO4iC,QApF4B,EA6FtDC,qBAAuB,SAAC39B,GAA+E,IAAvC1V,EAAsC,uDAAlB,GACpFkD,EAAS,cAAQlD,EAAOkD,WAAa,IAA5B,CAAiC,CAAEwS,YAGlD,OAAO,MAAK1V,EAAZ,CAAoBkD,eAjGwC,EAwGtD6vC,WAAa,SAAC/yC,GACpB,OAAUA,EAAV,OAvGA,EAAK2yC,QAAUA,EACf,EAAKG,eAAiB,IAAIjiC,KAASC,MAAM,GACzC,EAAKqiC,gBAAkB,EAAKP,iBAAiB,EAAKnlC,OAAOkD,UAJG,EAVhE,uDAOI,OAAOE,KAASI,OAAO5T,KAAKy1C,eAArB,IAAuC5hC,QAAS,GAAQ7T,KAAKoQ,aAPxE,mCAiBe4C,GAEXhT,KAAKy1C,eAAe3zB,SAAS,GAC7B,8CAAY9O,KApBhB,6BAwBI,8CACAhT,KAAKy1C,eAAe3zB,SAAS,KAzBjC,gCAgCI,IAAMm0B,EAAyDj2C,KAAKw1C,+BAC9DU,EAAwDl2C,KAAK21C,uBAAuBT,IACpFiB,EAAsDn2C,KAAK21C,uBAAuBP,IAExF,MAAO,CACLvmC,UAAW7O,KAAKg2C,qBAAqBC,GACrCnjC,MAAO9S,KAAKg2C,qBAAqBE,GACjChjC,IAAKlT,KAAKg2C,qBAAqBG,EAAqB,CAClDtwC,UAAW,CAAC,CAAEsU,YAAana,KAAKs1C,QAAU,WAxClD,GAAsC7iC,ICWzB2jC,GAAb,mLAQUnjC,UAA8B,IAAIoiC,GAAiB,EAAKgB,cAActmC,QARhF,EAsCU4D,eAAiB,WACvB,EAAKV,UAAUH,SAvCnB,EA0CUg8B,cAAgB,WACtB,EAAK77B,UAAUJ,QA3CnB,EA8CUyB,kBAAoB,SAAC3R,GAY3B,MAAO,CAAEmQ,MAXsB,CAC7BjE,UAAWlM,EAAOkM,UAClBynC,IAAK3zC,EAAOmQ,OASEI,IANa,CAC3BrE,UAAWlM,EAAOkM,UAClBynC,IAAK3zC,EAAOuQ,IACZqM,SAAU,CAAEtH,IAAK,EAAKo+B,cAActmC,OAAS,MAvDnD,EA6DUwmC,iBAAmB,SAACv0C,EAAwBmP,GAClD,IAAMmkC,EAAgB,IAAIvb,GAAK5oB,EAAKrB,MAAOqB,EAAKpB,OAAS,GAEzD,OACE,kBAACyD,GAAA,EAASvE,KAAV,CAAejN,MAAO,CAACA,EAAM6M,UAAWjL,GAAO4yC,SAAUrlC,IACvD,kBAAClC,GAAA,EAAD,CAAMjN,MAAO,CAAC4B,GAAO6yC,WAAYz0C,EAAMud,SAAU+1B,IAC/C,kBAAC9hC,GAAA,EAASvE,KAAV,CAAejN,MAAO,CAACA,EAAMs0C,IAAKnlC,IAChC,kBAAClC,GAAA,EAAD,CAAMjN,MAAO,CAAC4B,GAAO6yC,WAAYnB,IAC/B,kBAACrmC,GAAA,EAAD,CAAMjN,MAAO,CAAC,EAAKlC,MAAM0D,YAAa,EAAK1D,MAAMkC,cArE/D,mEAiBQhC,KAAKF,MAAM42C,WACb12C,KAAK2T,mBAlBX,yCAsB4B4O,GACxB,IAAMo0B,EAA4B32C,KAAKF,MAAM42C,YAAcn0B,EAAUm0B,UAEjEC,GAAoB32C,KAAKF,MAAM42C,WACjC12C,KAAK2T,iBAGHgjC,IAAqB32C,KAAKF,MAAM42C,WAClC12C,KAAK8uC,kBA9BX,6CAmCI9uC,KAAKiT,UAAUi8B,YAnCnB,+BA8EI,IAAMmH,EAAsBr2C,KAAKq2C,cADY,EAEtBr2C,KAAKsU,kBAAkBtU,KAAKiT,UAAU87B,WAArDj8B,EAFqC,EAErCA,MAAOI,EAF8B,EAE9BA,IAEf,OACE,kBAACjE,GAAA,EAAD,CAAMjN,MAAOq0C,GACVr2C,KAAKu2C,iBAAiBzjC,EAAOujC,GAC7Br2C,KAAKu2C,iBAAiBrjC,EAAKmjC,MApFpC,oCAUqC,IAAD,EACN3mC,KAAWgF,QAAQ,CAAC1U,KAAKF,MAAM0D,YAAaxD,KAAKF,MAAMkC,QAAzE8N,EADwB,EACxBA,MAAOC,EADiB,EACjBA,OAEf,OAAO,IAAIgqB,GAAKjqB,EAAOC,OAb3B,GAAsCzJ,IAAMwH,eAA/BsoC,GAEJzvC,oBAA8B,UAF1ByvC,GAIJpvC,aAAsC,CAC3C0vC,WAAW,GAqFf,IAAM9yC,GAAS8L,KAAWC,OAAO,CAC/B6mC,SAAU9mC,KAAWE,mBACrB6mC,WAAY,CACVl3B,SAAU,YAIDq3B,GAAUnwC,EAAqB2vC,IC/C/BS,GAAb,mLAQUC,gBAAiDxwC,IAAM2W,YARjE,EAsBU5C,YAAc,SAAChJ,GACjB,EAAKvR,MAAMwa,UACb,EAAKxa,MAAMwa,SAASjJ,IAxB1B,EA4BUiD,kBAAoB,SAAC3R,GAAkC,IAE3D6X,EAIE7X,EAJF6X,gBACAu8B,EAGEp0C,EAHFo0C,sBACAt8B,EAEE9X,EAFF8X,yBAIF,MAAO,CACL5L,UAT0D,IAMxDlM,EANwD,wEAU1D+X,KAAM,GACNC,UAAW,CACT5K,OAAQyK,EACR7F,aAAcoiC,EACd1hC,gBAAiBoF,KA1CzB,EA+CUu8B,cAAgB,SAAC3lC,GACvB,OAAOA,IAAU,EAAKvR,MAAMya,eAhDhC,EAmDUO,iBAAmB,SAAC3K,EAAqBkB,GAC/C,OAAO/K,IAAMkI,aAAa2B,EAAS,CACjClM,IAAKoN,EACLrP,MAAO,CAAC4B,GAAO8W,KAAMvK,EAAQrQ,MAAMkC,OACnC+Y,SAAU,EAAKi8B,cAAc3lC,GAC7BiJ,SAAU,kBAAM,EAAKD,YAAYhJ,OAxDvC,EA4DU2J,kBAAoB,SAACrY,GAC3B,OAAO2D,IAAMoI,SAAS/J,IAAIhC,EAAQ,EAAKmY,mBA7D3C,6DAUuBzP,GACerL,KAAK82C,gBAA/Bt1C,QAEKgY,cAAcnO,KAb/B,qCAgBwBA,GACcrL,KAAK82C,gBAA/Bt1C,QAEK2X,eAAe9N,KAnBhC,+BAgEkD,IAAD,EAC4CrL,KAAKF,MAAtF0D,EADqC,EACrCA,YAAaxB,EADwB,EACxBA,MAAO6Y,EADiB,EACjBA,eAAgBN,EADC,EACDA,cAAe3M,EADd,EACcA,SAAayB,EAD3B,2EAEvCuF,EAA4B5U,KAAKsU,kBAAkB9Q,GAEnDyX,EAA4Bjb,KAAKgb,kBAAkBpN,GAEzD,OACE,kBAACqB,GAAA,EAAD,KACE,kBAACA,GAAA,EAAD,OACMI,EADN,CAEErN,MAAO,CAAC4S,EAAe/F,UAAWjL,GAAOiL,UAAW7M,KACnDiZ,GAEH,kBAAC,GAAD,CACE5T,IAAKrH,KAAK82C,gBACV90C,MAAO,CAAC4S,EAAe+F,UAAW/W,GAAO+W,UAAWE,GACpDzB,iBAAkBmB,EAClBlB,UAAW4B,EAAY5W,cAjFjC,GAAqCiC,IAAMI,WAA9BmwC,GAEJlwC,oBAA8B,SAF1BkwC,GAIJ7vC,aAAqC,CAC1CuT,cAAe,GAmFnB,IAAM3W,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,OAEjBqE,KAAM,CACJ3I,KAAM,GAER4I,UAAW,KAGAs8B,GAASxwC,EAAoBowC,ICpLpCK,G,8BACJC,KAAqB,G,KACrBt3C,QAA+B,IA4CpBu3C,GAAb,mLAMUz0B,aAA2Crc,IAAM2W,YAN3D,EAOUo6B,UAAkC/wC,IAAM2W,YAPlD,EASUq6B,YAAc,SAACjmC,GACU,EAAKsR,aAA5BnhB,QAEEgY,cAAc,CAAEnI,QAAOuH,UAAU,KAZ/C,EAeU2+B,oBAAsB,SAACtjC,GAA0B,IACtCujC,EAAW,EAAKH,UAAzB71C,QACFi2C,EAAmBnxC,IAAMoI,SAAS+P,MAAM+4B,EAAO13C,MAAM8N,UAE3D4pC,EAAOr+B,eAAe,CAAElF,OAAQA,EAASwjC,KAnB7C,EAsBUC,cAAgB,SAACn9B,GACnB,EAAKza,MAAMwa,UACb,EAAKxa,MAAMwa,SAASC,IAxB1B,EA4BUhM,qBAAuB,SAAC4B,EAAqBkB,GACnD,MAAO,CACLsmC,IAAKrxC,IAAMkI,aAAa2B,EAAS,CAAElM,IAAKoN,IACxCxR,QAASsQ,EAAQrQ,MAAM8N,WA/B7B,EAmCUa,wBAA0B,SAAC9L,GACjC,OAAO2D,IAAMoI,SAASkpC,QAAQj1C,GAAQrB,QAAO,SAACC,EAAsB4O,EAAqBkB,GAAmB,IAAD,EAChF,EAAK9C,qBAAqB4B,EAASkB,GAApDsmC,EADiG,EACjGA,IAAK93C,EAD4F,EAC5FA,QACb,MAAO,CACLs3C,KAAK,GAAD,WAAM51C,EAAI41C,MAAV,CAAgBQ,IACpB93C,QAAQ,GAAD,WAAM0B,EAAI1B,SAAV,CAAmBA,OAE3B,IAAIq3C,KA1CX,wDA6CkD,IAAD,EAC4Cl3C,KAAKF,MAAtFkC,EADqC,EACrCA,MAAOuY,EAD8B,EAC9BA,cAAe3M,EADe,EACfA,SAAUiqC,EADK,EACLA,YAAah9B,EADR,EACQA,eAAmBxL,EAD3B,6EAGnBrP,KAAKyO,wBAAwBb,GAA/CupC,EAHqC,EAGrCA,KAAMt3C,EAH+B,EAG/BA,QAEd,OACE,kBAACoP,GAAA,EAAD,KACEjN,MAAO,CAAC4B,GAAOiL,UAAW7M,IACtBqN,GACJ,kBAAC4nC,GAAD,CACEj1C,MAAO61C,EACPxwC,IAAKrH,KAAKq3C,UACV98B,cAAeA,EACfM,eAAgBA,EAChBP,SAAUta,KAAKs3C,aACdH,GAEH,kBAAC,GAAD,KACE9vC,IAAKrH,KAAK2iB,cACNtT,EAFN,CAGErN,MAAO,CAAC4B,GAAOiL,UAAW7M,GAC1BuY,cAAeA,EACf6H,oBAAqBpiB,KAAKF,MAAMsiB,oBAChCH,eAAgBjiB,KAAKu3C,oBACrBj9B,SAAUta,KAAK03C,gBACd73C,QAtEX,GAA6ByG,IAAMI,WAAtB0wC,GAEJpwC,aAAsC,CAC3CuT,cAAe,GA0EnB,IAAM3W,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACT0Q,SAAU,YC7EDu4B,GAAb,mLAQUhpC,QAAU,WACZ,EAAKhP,MAAMwa,UACb,EAAKxa,MAAMwa,UAAU,EAAKxa,MAAMib,WAVtC,EAcUzG,kBAAoB,SAAC3R,GAAkC,IAE3DgZ,EAWEhZ,EAXFgZ,mBACAC,EAUEjZ,EAVFiZ,eACAC,EASElZ,EATFkZ,aACAC,EAQEnZ,EARFmZ,eACAC,EAOEpZ,EAPFoZ,eACAC,EAMErZ,EANFqZ,UACAT,EAKE5Y,EALF4Y,UACAC,EAIE7Y,EAJF6Y,WACAC,EAGE9Y,EAHF8Y,mBACAC,EAEE/Y,EAFF+Y,cAIF,MAAO,CACL7M,UAhB0D,IAaxDlM,EAbwD,oKAiB1D6Z,KAAM,CACJ1M,MAAOyL,EACPxL,OAAQyL,EACRU,eAAgBT,EAChBxb,UAAWyb,GAEbkB,MAAO,CACLV,eAAgBP,EAChBQ,WAAYP,EACZQ,SAAUP,EACVQ,WAAYP,EACZQ,WAAYP,EACZQ,MAAOP,KA3Cf,EAgDUW,mBAAqB,SAAC3a,GAAmC,IAAD,EAChC,EAAKlC,MAA3B8c,EADsD,EACtDA,MAAOC,EAD+C,EAC/CA,WAEf,OACE,kBAAC,GAAD,CACE5Y,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAOgZ,MAAOC,IAC5BD,IAvDT,EA4DUH,kBAAoB,SAACza,GAC3B,IAAM0a,EAA8C,EAAK5c,MAAM0c,KAAKxa,GAEpE,OAAOsE,IAAMkI,aAAakO,EAAa,CACrCzY,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAO4Y,KAAME,EAAY5c,MAAMkC,UAjEpD,EAqEUyM,wBAA0B,SAACzM,GAA4C,IAAD,EACpD,EAAKlC,MAArB8c,EADoE,EACpEA,MAER,MAAO,CAHqE,EAC7DJ,MAGL,EAAKC,kBAAkBza,EAAMwa,MACrCxF,GAAc4F,IAAU,EAAKD,mBAAmB3a,EAAM4a,SA1E5D,wDA8E8D,IAAD,EACT5c,KAAKF,MAA7C0D,EADiD,EACjDA,YAAaxB,EADoC,EACpCA,MAAUqN,EAD0B,iCAEfrP,KAAKsU,kBAAkB9Q,GAAzDqL,EAFiD,EAEjDA,UAAcnL,EAFmC,uBAIrB1D,KAAKyO,wBAAwB/K,GAJR,YAIlDgZ,EAJkD,KAIrCI,EAJqC,KAMzD,OACE,kBAAClO,GAAA,EAAD,KACEG,cAAe,GACXM,EAFN,CAGErN,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW7M,GACrC8M,QAAS9O,KAAK8O,UACb4N,EACAI,OA3FT,GAAkCxW,IAAMI,WAA3BoxC,GAEJnxC,oBAA8B,MAF1BmxC,GAIJ9wC,aAAkC,CACvC+T,UAAU,GA4Fd,IAAMnX,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTuH,eAAgB,SAChBD,WAAY,UAEdqG,KAAM,GACNI,MAAO,KAGIm7B,GAAMtxC,EAAiBqxC,IClKvBC,GAAb,mLAEUC,OAA+B1xC,IAAM2W,YAF/C,EAGUC,kBAA+C/F,GAAkBxH,OAAlB,SAHzD,EAKSyH,aAAe,WACpB,EAAK4gC,OAAOx2C,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAE5C,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBATjB,EAaSC,aAAe,WACpB,EAAK2gC,OAAOx2C,QAAQ1B,MAAMwH,SAAS,IAE/B,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBAjBjB,EAqBSC,QAAU,WACX,EAAKxX,MAAMwX,SACb,EAAKxX,MAAMwX,WAvBjB,EA2BSC,OAAS,WACV,EAAKzX,MAAMyX,QACb,EAAKzX,MAAMyX,UA7BjB,wDAiCiC,IAAD,EACIvX,KAAKF,MAA7BkC,EADoB,EACpBA,MAAU9B,EADU,iBAG5B,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAKg4C,OACVh2C,MAAO,CAACA,EAAO4B,GAAOuM,gBAzC9B,GAAyB7J,IAAMI,WA+CzB9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,K,qjBCmBX,IAAM66B,GAAb,YAUE,WAAYn4C,GAAqB,IAAD,eAC9B,4BAAMA,KAcDo4C,6BAA+B,WACpC,OAAO,GAhBuB,EAmBzBC,oCAAsC,WAC3C,OAAO,GApBuB,EAuBzB/2B,4BAA8B,WACnC,OAAO,GAxBuB,EA2BzBg3B,mCAAqC,WAC1C,OAAO,GA5BuB,EA+BzBC,iCAAmC,WACxC,OAAO,GAhCuB,EAmCzBC,oBAAsB,WAAa,IAAD,EACI,EAAKx4C,MAAxC44B,EAD+B,EAC/BA,QAAS9T,EADsB,EACtBA,SAAUphB,EADY,EACZA,YAE3B,IAAIohB,EAAJ,CAMA,GAFA,EAAKtH,YAED,EAAKi7B,8BAGP,OAFA,EAAKA,+BAAgC,OACrC,EAAKC,iBAIP,EAAKC,kBAA2C,IAAzBj1C,EAAYk1C,YACnC,EAAKC,oBAAoBjgB,EAAU,EAAI,OAnDT,EAsDzB9W,mBAAoC,WACzC,OAAO,GAvDuB,EA0DzBG,sBAAwB,SAAC62B,EAA0BC,GAAkD,IAAD,EAC9D,EAAK/4C,MAAxC44B,EADiG,EACjGA,QAAS9T,EADwF,EACxFA,SAAUphB,EAD8E,EAC9EA,YAEtBohB,KACG8T,GAAWmgB,EAAav3B,IAAM,GAAOoX,GAAWmgB,EAAav3B,GAAK,EACtE,EAAKw3B,OAAO,EAAKhqC,SAEjB,EAAK6pC,oBAAoBjgB,EAAU,IAAO,IAI9C,EAAK+f,kBAAkBj1C,EAAYk1C,YACnC,EAAKl7B,cAtEyB,EAyExBF,UAAY,WAClB,EAAKxd,MAAMwH,SAAS,CAACmJ,GAAY8M,UA1EH,EA6ExBC,WAAa,WACnB,EAAK1d,MAAMwH,SAAS,KA9EU,EAiFxBwH,QAAU,WACZ,EAAKhP,MAAM24B,UACb,EAAK34B,MAAM24B,UAAU,EAAK34B,MAAM44B,UAnFJ,EAuFxBpkB,kBAAoB,SAAC3R,GAAkC,IAAD,EAC9B,EAAK7C,MAA3B44B,EADoD,EACpDA,QAAS9T,EAD2C,EAC3CA,SAGfxH,EAqBEza,EArBFya,aACAwb,EAoBEj2B,EApBFi2B,cACAC,EAmBEl2B,EAnBFk2B,oBACAC,EAkBEn2B,EAlBFm2B,uBAEAigB,GAgBEp2C,EAjBF+1C,WAiBE/1C,EAhBFo2C,aACAC,EAeEr2C,EAfFq2C,kBACAC,EAcEt2C,EAdFs2C,qBACAx7B,EAaE9a,EAbF8a,qBACA5B,EAYElZ,EAZFkZ,aACAE,EAWEpZ,EAXFoZ,eACAD,EAUEnZ,EAVFmZ,eACAF,EASEjZ,EATFiZ,eACAI,EAQErZ,EARFqZ,UAGAN,GAKE/Y,EAPF4Y,UAOE5Y,EANF6Y,WAME7Y,EALF+Y,eACAqf,EAIEp4B,EAJFo4B,YACA1lB,EAGE1S,EAHF0S,gBACA0C,EAEEpV,EAFFoV,YACGvD,EAxBuD,IAyBxD7R,EAzBwD,mVA2BtDu2C,EAA0D,EAAKC,qBACnE9jC,EACA0C,GAGIqhC,EAAyC,EAAKC,kBAAkBte,GAEtE,MAAO,CACLue,gBAAiB,GACjBC,iBAAiB,IACfxhC,YAAaA,EACb1C,gBAAiB6jC,GACd1kC,GAELykB,UAAW,CACTnpB,MAAOsN,EACPrN,OAAQ6oB,EACRjkB,aAAckkB,EACdxjB,gBAAiByjB,GAEnB0gB,QAAS,CACP1pC,MAAO0E,EAAoB1E,MAA2C,EAAlC0E,EAAoBkD,YACxD3H,OAAQyE,EAAoBzE,OAA4C,EAAlCyE,EAAoBkD,YAC1D/C,cAAehS,EAAOoN,OAA+B,EAArBpN,EAAO+U,aAAoB,EAC3DrC,gBAAiB6jC,EACjBrzC,UAAW,CAAC,CAAEmO,MAAO0kB,EAAU0gB,EAAa,EAAKK,yBAEnDC,MAAO,CACL1pC,UAAW0oB,EAAU,WAAa,aAClC5oB,MAAO,EAAK6pC,oBACZ5pC,OAAQgpC,EACRpkC,aAAcqkC,EACd3jC,gBAAiB4jC,EACjBW,UAAWh1B,EAAW,EAAI,EAC1B/e,UAAW,CAAC,CAAEsO,WAAY,EAAK0lC,2BAEjC59B,KAAM,CACJhC,iBAAkBwD,EAClBrB,SAAUP,EACVS,WAAYP,EACZM,WAAYP,EACZK,WAAYP,EACZW,MAAOP,GAETQ,KAAM,CACJ1M,MAAOnN,EAAO4Y,UACdxL,OAAQpN,EAAO6Y,WACfnG,gBAAiBqG,KAjKS,EAsKxBo+B,sBAAwB,SAACh5C,GAA4D,IAA7CkS,EAA4C,uDAArB,kBAAM,MAC3E,EAAKulC,+BAAgC,EAErC/kC,KAASI,OAAO,EAAKimC,wBAAyB,CAC5ChmC,QAAS4C,GAAkBoC,OAAO/X,GAAQA,GAC1CwS,SAAU,IACVH,OAAQC,KAAOC,SACdP,OAAM,WACP,EAAKylC,+BAAgC,EACrCvlC,QA/K4B,EAmLxBylC,kBAAoB,SAAC33C,GAA4D,IAA7CkS,EAA4C,uDAArB,kBAAM,MACvEQ,KAASI,OAAO,EAAK+lC,oBAAqB,CACxC9lC,QAAS/S,EACTwS,SAAU,IACVH,OAAQC,KAAOC,SACdP,MAAME,IAxLqB,EA2LxB2lC,oBAAsB,SAAC73C,GAA4D,IAA7CkS,EAA4C,uDAArB,kBAAM,MACzEQ,KAASI,OAAO,EAAK6lC,sBAAuB,CAC1C5lC,QAAS/S,EACTwS,SAAU,IACVH,OAAQC,KAAOC,SACdP,MAAME,IAhMqB,EAmMxBqmC,kBAAoB,SAACv4C,GAC3B,OAAO,EAAK+4C,wBAAwBnU,YAAY,CAC9CC,WAAY,EAAE7kC,EAAO,GACrB8kC,YAAa,CAAC,EAAG,QAtMW,EA0MxB4S,eAAiB,WACvB,IAAM13C,EAAgB,EAAKhB,MAAM44B,QAAU,IAAO,EAElD,EAAKmhB,wBAAwB/K,gBAC7B,EAAK2K,sBAAsB3K,gBAC3B,EAAK6K,oBAAoB7K,gBAEzB,EAAK2K,sBAAsB33B,SAAShhB,IAjNN,EAoNxBg4C,OAAS,WAAoD,IAAnD9lC,EAAkD,uDAAvC,SAAClN,GAAD,OAAwB,MAAe,EACjC,EAAKhG,MAA9B44B,EAD0D,EAC1DA,QAASl1B,EADiD,EACjDA,YAEX1C,EAAgB43B,GAAWl1B,EAAYu3B,YAAcv3B,EAAYu3B,YAEvE,EAAK+e,sBAAsBh5C,GAAO,WAChC,EAAK+4C,wBAAwB/3B,SAAS,GACtC9O,GAAU0lB,MAGZ,EAAK+f,kBAAkB,EAAK34C,MAAM0D,YAAYk1C,aA9NhB,EAiOxBS,qBAAuB,SAACY,EAAoBC,GAAkD,IAAD,EAClE,EAAKl6C,MAA9B44B,EAD2F,EAC3FA,QAASl1B,EADkF,EAClFA,YAEjB,OAAO,EAAKq2C,wBAAwBnU,YAAY,CAC9CC,WAAYjN,EAAU,EAAEl1B,EAAYu3B,YAAa,GAAK,CAAC,EAAGv3B,EAAYu3B,aACtE6K,YAAa,CAACmU,EAAYC,MAtOE,EA0OxBr8B,kBAAoB,SAAC3b,GAC3B,OACE,kBAAC,GAAD,CAAMA,MAAO,CAACA,EAAO,EAAKlC,MAAM8d,YAC7B,EAAK9d,MAAMmc,OA7Oc,EAkPxBxN,wBAA0B,SAACzM,GACjC,MAAO,CACL,EAAKlC,MAAMmc,MAAQ,EAAK0B,kBAAkB3b,EAAMia,QApPpB,IAGtByc,EAAyB54B,EAAzB44B,QAASl1B,EAAgB1D,EAAhB0D,YAHa,OAK9B,EAAKm2C,oBAAsB,IAAInmC,KAASC,MAAMjQ,EAAYk1C,YAC1D,EAAKmB,wBAA0B,IAAIrmC,KAASC,MAAM,GAClD,EAAKgmC,sBAAwB,IAAIjmC,KAASC,MAAMilB,EAAU,IAAO,GACjE,EAAK6f,+BAAgC,EAErC,EAAKr3B,aAAeC,KAAaxR,OAAb,SAVU,EAVlC,sDAkQkD,IAAD,EACS3P,KAAKF,MAAnD0D,EADqC,EACrCA,YAAaxB,EADwB,EACxBA,MAAmB9B,GADK,EACjBw4B,QADiB,0CAGvC9jB,EAA4B5U,KAAKsU,kBAAkB9Q,GAHZ,EAIvBxD,KAAKyO,wBAAwBmG,GAA5CmJ,EAJsC,aAM7C,OACE,kBAAC9O,GAAA,EAAD,OACMjP,KAAKkhB,aAAauB,YADxB,CAEEzgB,MAAO,CAAC4B,GAAOiL,UAAW7M,KAC1B,kBAAC4M,GAAA,EAAD,KACEG,cAAe,GACX7O,EAFN,CAGE8B,MAAO,CAAC4S,EAAe0kC,gBAAiB11C,GAAO01C,mBAC/C,kBAACrqC,GAAA,EAAD,CAAMjN,MAAO,CAAC4S,EAAeqkB,UAAWr1B,GAAOq1B,aAC/C,kBAACzlB,GAAA,EAASvE,KAAV,CAAejN,MAAO,CAAC4S,EAAe2kC,iBAAkB31C,GAAO21C,mBAC7D,kBAAC/lC,GAAA,EAASvE,KAAV,CAAejN,MAAO,CAAC4S,EAAe4kC,QAAS51C,GAAO41C,WACtD,kBAAChmC,GAAA,EAASvE,KAAV,CAAejN,MAAO,CAAC4S,EAAe8kC,MAAO91C,GAAO81C,QAClD,kBAAC,GAAD,CAAW13C,MAAO4S,EAAe4H,KAAMrE,YAAY,OAIxD4F,OAxRT,GAAqCzX,IAAMI,WAA9BuxC,GAEJtxC,oBAA8B,SA4RvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfF,WAAY,SACZC,eAAgB,UAElBkjC,gBAAiB,CACfnjC,WAAY,SACZC,eAAgB,UAElBmjC,iBAAkB,CAChBnjC,eAAgB,SAChBpG,UAAW,SACXuP,SAAU,UAEZi6B,QAAS,CACPxpC,UAAW,SACXH,SAAU,YAEZopB,UAAW,CACTjpB,UAAW,SACXH,SAAU,YAEZ6pC,MAAO,CACLtjC,eAAgB,SAChBD,WAAY,YAIH8jC,GAASxzC,EAAoBwxC,IChY7BgC,GAAb,mLAEUC,UAAkC5zC,IAAM2W,YAFlD,EAGUC,kBAA+C/F,GAAkBxH,OAAlB,SAHzD,EAKSyH,aAAe,WACf,EAAKtX,MAAM8kB,UACd,EAAKs1B,UAAU14C,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAGjD,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBAXjB,EAeSC,aAAe,WACf,EAAKvX,MAAM8kB,UACd,EAAKs1B,UAAU14C,QAAQ1B,MAAMwH,SAAS,IAGpC,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBArBjB,EAyBSC,QAAU,WACV,EAAKxX,MAAM8kB,UACd,EAAKs1B,UAAU14C,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAYyN,UAGjD,EAAKpe,MAAMwX,SACb,EAAKxX,MAAMwX,WA/BjB,EAmCSC,OAAS,WACT,EAAKzX,MAAM8kB,UACd,EAAKs1B,UAAU14C,QAAQ1B,MAAMwH,SAAS,IAGpC,EAAKxH,MAAMyX,QACb,EAAKzX,MAAMyX,UAzCjB,wDA6CoC,IAAD,EACCvX,KAAKF,MAA7BkC,EADuB,EACvBA,MAAU9B,EADa,iBAG/B,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAKk6C,UACVl4C,MAAO,CAACA,EAAO4B,GAAOuM,gBArD9B,GAA4B7J,IAAMI,WA2D5B9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,KCQL+8B,GAAb,mLAQU7lC,kBAAoB,SAAC3R,GAAkC,IAE3D8X,EAWE9X,EAXF8X,yBACAc,EAUE5Y,EAVF4Y,UACAC,EASE7Y,EATF6Y,WACAkC,EAQE/a,EARF+a,qBACAhC,EAOE/Y,EAPF+Y,cACA+B,EAME9a,EANF8a,qBACA5B,EAKElZ,EALFkZ,aACAD,EAIEjZ,EAJFiZ,eACAE,EAGEnZ,EAHFmZ,eACAE,EAEErZ,EAFFqZ,UAIF,MAAO,CACLnN,UAhB0D,IAaxDlM,EAbwD,kLAiB1D9C,QAAS,GACT8a,UAAW,CACTtF,gBAAiBoF,GAEnB+B,KAAM,CACJ1M,MAAOyL,EACPxL,OAAQyL,EACRvB,iBAAkByD,EAClBzd,UAAWyb,GAEbO,KAAM,CACJhC,iBAAkBwD,EAClBtB,WAAYP,EACZQ,SAAUP,EACVQ,WAAYP,EACZS,MAAOP,KAxCf,EA6CU2B,kBAAoB,SAAC3b,GAAmC,IAAD,EACjC,EAAKlC,MAAzBmc,EADqD,EACrDA,KAAM2B,EAD+C,EAC/CA,UAEd,OACE,kBAAC,GAAD,CACE3Z,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAOqY,KAAM2B,IAC3B3B,IApDT,EAyDUQ,kBAAoB,SAACza,GAC3B,IAAM0a,EAA2B,EAAK5c,MAAM0c,KAAKxa,GAEjD,OAAOsE,IAAMkI,aAAakO,EAAa,CACrCzY,IAAK,EACLjC,MAAO,CAACA,EAAO4B,GAAO4Y,KAAME,EAAY5c,MAAMkC,UA9DpD,EAkEUo1B,6BAA+B,SAACp1B,GAGtC,MAAO,CAFU,EAAKlC,MAAd0c,MAGE,EAAKC,kBAAkBza,EAAMwa,MACrC,EAAKmB,kBAAkB3b,EAAMia,QAvEnC,EA2EU83B,4BAA8B,SAAC/xC,GAAqD,IAClFnC,EAA8BmC,EAA9BnC,QAAYu6C,EADqE,IACnDp4C,EADmD,aAGnFq4C,EAAmC,EAAKjjB,6BAA6BgjB,GAE3E,OACE,kBAACnrC,GAAA,EAAD,CAAMjN,MAAO,CAACnC,EAAS+D,GAAO/D,UAC3Bw6C,IAlFT,wDAuFmC,IAAD,EAC4Cr6C,KAAKF,MAAvE0D,EADsB,EACtBA,YAAaxB,EADS,EACTA,MAAO6Y,EADE,EACFA,eAAgBjN,EADd,EACcA,SAAayB,EAD3B,6DAEsBrP,KAAKsU,kBAAkB9Q,GAAnEqL,EAFsB,EAEtBA,UAAW8L,EAFW,EAEXA,UAAc/F,EAFH,iCAIxBq/B,EAA8Bj0C,KAAK+zC,4BAA4Bn/B,GAErE,OACE,kBAACmtB,GAAD,OACM1yB,EADN,CAEErN,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW7M,GACrC6Y,eAAgB,CAACF,EAAWE,GAC5Bhb,QAASo0C,IACRrmC,OAnGT,GAAsCtH,IAAMI,WAA/ByzC,GAEJxzC,oBAA8B,UAF1BwzC,GAIJnzC,aAAsC,CAC3Cg3B,gBAAiB,GAoGrB,IAAMp6B,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,GACXhP,QAAS,CACPwW,cAAe,OAEjBsE,UAAW,GACX6B,KAAM,GACNP,KAAM,CACJjM,UAAW,YAIFsqC,GAAU7zC,EAAqB0zC,I,+NC9HrC,IAAMI,GAAb,mLAIUC,4BAA8B,SAACne,GACrC,MAAkB,WAAdA,EACK,CACLxtB,UAAWjL,GAAO62C,kBAClBC,eAAgB92C,GAAO+2C,wBAIpB,CACLC,uBAAwBh3C,GAAOi3C,8BAbrC,EAiBUvmC,kBAAoB,SAAC3R,GAAkC,IAE3Dm4C,EAaEn4C,EAbFm4C,eACAzqB,EAYE1tB,EAZF0tB,gBACAJ,EAWEttB,EAXFstB,cACAE,EAUExtB,EAVFwtB,gBACAD,EASEvtB,EATFutB,gBACAE,EAQEztB,EARFytB,WACA2qB,EAOEp4C,EAPFo4C,kBACAC,EAMEr4C,EANFq4C,mBACAC,EAKEt4C,EALFs4C,iBACAC,EAIEv4C,EAJFu4C,mBACAC,EAGEx4C,EAHFw4C,mBACAC,EAEEz4C,EAFFy4C,cAKF,MAAO,CACLvsC,UAnB0D,IAexDlM,EAfwD,6NAoB1D+3C,eAAgB,GAChB99B,MAAO,CACL8a,UAAWojB,EACX3+B,WAAYkU,EACZjU,SAAU6T,EACV5T,WAAY8T,EACZ7T,WAAY4T,EACZ3T,MAAO6T,GAETirB,SAAU,CACR3jB,UAAWqjB,EACX5+B,WAAY6+B,EACZ5+B,SAAU6+B,EACV1+B,MAAO6+B,EACP9+B,WAAY6+B,EACZ9+B,WAAY6+B,GAEdI,qBAAsB,GACtBV,uBAAwB,KAvD9B,EA2DUj9B,kBAAoB,SAAC1B,EAAcja,GACzC,OACE,kBAAC,GAAD,CAAMA,MAAOA,GACVia,IA9DT,EA4EUxN,wBAA0B,SAACzM,GAA4C,IAAD,EAQxE,EAAKlC,MANP8c,EAF0E,EAE1EA,MACAy+B,EAH0E,EAG1EA,SACAE,EAJ0E,EAI1EA,YACAC,EAL0E,EAK1EA,cACA3+B,EAN0E,EAM1EA,WACA4+B,EAP0E,EAO1EA,cAGF,MAAO,CACLzkC,GAAc4F,IAAU,EAAKe,kBAAkBf,EAAO,CAAC5a,EAAM4a,MAAOhZ,GAAOgZ,MAAOC,IAClF7F,GAAcqkC,IAAa,EAAK19B,kBAAkB09B,EAAU,CAACr5C,EAAMq5C,SAAUz3C,GAAOy3C,SAAUI,IAC9FF,GAAe,EAAKG,qBAAqBH,GACzCC,GAAiB,EAAKE,qBAAqBF,KA1FjD,oEAmE+B74C,GAA0D,IAAD,OACpF,OAAO2D,IAAMoI,SAAS/J,IAAIhC,GAAQ,SAACwN,EAAqCkB,GACtE,OAAO/K,IAAMkI,aAAa2B,EAAS,CACjClM,IAAKoN,EACL9O,WAAY,EAAKzC,MAAMyC,kBAvE/B,+BA8FkD,IAAD,EACWvC,KAAKF,MAArD0D,EADqC,EACrCA,YAAaxB,EADwB,EACxBA,MAAOq6B,EADiB,EACjBA,UAAcn8B,EADG,6CASzCF,KAAKsU,kBAAkB9Q,GALzBqL,EAJ2C,EAI3CA,UACAysC,EAL2C,EAK3CA,qBACAZ,EAN2C,EAM3CA,eACAE,EAP2C,EAO3CA,uBACGl3C,EARwC,sFAWvCi4C,EAA6B37C,KAAKw6C,4BAA4Bne,GAXvB,EAkBzCr8B,KAAKyO,wBAAwB/K,GAlBY,YAc3CoZ,EAd2C,KAe3C8+B,EAf2C,KAgB3CC,EAhB2C,KAiB3CC,EAjB2C,KAoB7C,OACE,kBAAC7sC,GAAA,EAAD,KACEjN,MAAO,CAAC6M,EAAWjL,GAAOiL,UAAW8sC,EAAgB9sC,UAAW7M,IAC5D9B,GACJ,kBAAC+O,GAAA,EAAD,CAAMjN,MAAO,CAACs5C,EAAsB13C,GAAO03C,uBACxCO,GAEH,kBAAC5sC,GAAA,EAAD,CAAMjN,MAAO,CAAC04C,EAAgB92C,GAAO82C,eAAgBiB,EAAgBjB,iBAClE59B,EACA8+B,GAEH,kBAAC3sC,GAAA,EAAD,CAAMjN,MAAO,CAAC44C,EAAwBh3C,GAAOg3C,uBAAwBe,EAAgBf,yBAClFkB,QA9HX,GAA4Cx1C,IAAMI,WAArC6zC,GAEJ5zC,oBAA8B,gBAmIvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,CACTwH,cAAe,MACfF,WAAY,UAEdskC,kBAAmB,CACjBrkC,eAAgB,iBAElBskC,eAAgB,GAChBC,uB,mVAAuB,IAClBjrC,KAAWE,mBADM,CAEpBwG,eAAgB,SAChBD,WAAY,WAEdyG,MAAO,GACPy+B,SAAU,GACVC,qBAAsB,CACpBjlC,cAAe,MACf6tB,OAAQ,GAEV0W,uBAAwB,CACtBvkC,cAAe,MACf6tB,OAAQ,GAEV2W,4BAA6B,CAC3B9oC,KAAM,EACNqE,eAAgB,cAIP2lC,GAAgBt1C,EAA2B8zC,I,yjBC7LlDyB,G,mLAIIltC,QAAU,SAACiK,GACb,EAAKjZ,MAAMgP,SACb,EAAKhP,MAAMgP,QAAQiK,I,EAIfuE,UAAY,SAACvE,GACnB,EAAKjZ,MAAMwH,SAAS,CAACmJ,GAAY8M,SAE7B,EAAKzd,MAAMwd,WACb,EAAKxd,MAAMwd,UAAUvE,I,EAIjByE,WAAa,SAACzE,GACpB,EAAKjZ,MAAMwH,SAAS,IAEhB,EAAKxH,MAAM0d,YACb,EAAK1d,MAAM0d,WAAWzE,I,EAIlBzE,kBAAoB,SAAC3R,GAAkC,IAE3D+Y,EAIE/Y,EAJF+Y,cACAH,EAGE5Y,EAHF4Y,UACAC,EAEE7Y,EAFF6Y,WAIF,MAAO,CACL3M,UAAW,CACToL,iBAJAtX,EADF+a,sBAOAlB,KAAK,IACHvc,UAAWyb,EACX5L,MAAOyL,EACPxL,OAAQyL,GACL5X,GAAO4Y,Q,EAKR0c,oBAAsB,SAACtZ,GAC7B,IAGM9e,EAAgB,GAHQ4O,KAAWgF,QAAQkL,GAGZ9P,MAErC,MAAO,CACLkI,KAAMlX,EACNmX,IAAKnX,EACLoX,MAAOpX,EACPq4B,OAAQr4B,I,EAIJ2b,kBAAoB,SAACza,GAC3B,OAAO,EAAKlC,MAAM0c,KAAKxa,I,wDAGS,IAAD,EACyBhC,KAAKF,MAArD0D,EADuB,EACvBA,YAAaxB,EADU,EACVA,MAAgBi6C,GADN,EACHz/B,KADG,uCAEzB5H,EAA4B5U,KAAKsU,kBAAkB9Q,GAEnDg2B,EAAwBx5B,KAAKk5B,oBAAoBtkB,EAAe4H,MAEhEE,EAA2B1c,KAAKyc,kBAAkB7H,EAAe4H,MAEvE,OACE,kBAAC5N,GAAA,EAAD,KACEG,cAAe,EACf0qB,QAASD,GACLyiB,EAHN,CAIEj6C,MAAO,CAAC4S,EAAe/F,UAAWjL,GAAOiL,UAAW7M,GACpD8M,QAAS9O,KAAK8O,QACdwO,UAAWtd,KAAKsd,UAChBE,WAAYxd,KAAKwd,aAChBd,O,GAlFkCpW,IAAMI,WAA3Cs1C,GAEGr1C,oBAA8B,sBAsFvC,IAAM/C,GAAS8L,KAAWC,OAAO,CAC/Bd,UAAW,GACX2N,KAAM,KAGK0/B,GAAsBz1C,EAAiCu1C,IChIvDE,GAAb,mLAGUC,uBAA+C71C,IAAM2W,YAH/D,EAIUC,kBAA+C/F,GAAkBxH,OAAlB,SAJzD,EAMSyH,aAAe,WACpB,EAAK+kC,uBAAuB36C,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAY0M,QAE5D,EAAKrd,MAAMsX,cACb,EAAKtX,MAAMsX,gBAVjB,EAcSC,aAAe,WACpB,EAAK8kC,uBAAuB36C,QAAQ1B,MAAMwH,SAAS,IAE/C,EAAKxH,MAAMuX,cACb,EAAKvX,MAAMuX,gBAlBjB,EAsBSC,QAAU,WACf,EAAK6kC,uBAAuB36C,QAAQ1B,MAAMwH,SAAS,CAACmJ,GAAYyN,UAE5D,EAAKpe,MAAMwX,SACb,EAAKxX,MAAMwX,WA1BjB,EA8BSC,OAAS,WACd,EAAK4kC,uBAAuB36C,QAAQ1B,MAAMwH,SAAS,IAE/C,EAAKxH,MAAMyX,QACb,EAAKzX,MAAMyX,UAlCjB,wDAsCiD,IAAD,EACZvX,KAAKF,MAA7BkC,EADoC,EACpCA,MAAU9B,EAD0B,iBAG5C,OACE,kBAAC,GAAD,OACMA,EACAF,KAAKkd,kBAAkBhG,cAF7B,CAGE7P,IAAKrH,KAAKm8C,uBACVn6C,MAAO,CAACA,EAAO4B,GAAOuM,gBA9C9B,GAAyC7J,IAAMI,WAoDzC9C,GAAS8L,KAAWC,OAAO,CAC/BQ,QAAS,CAEPiN,aAAc,K,4BClELg/B,YAAiB,GAC5B,OACE,+BAEEz5C,OAAQ,CAAE05C,IAHd,0EC0EWC,GAAoC,CAC/CC,SAAU,CAZkC,CAC5C3/B,MAD4C,OAE5ClR,MAAO,CAnEkC,CACzCkR,MADyC,QAEzC9c,MAAO,CACLqR,KAHJ,UAO2C,CACzCyL,MADyC,QAEzC9c,MAAO,CACLqR,KAHJ,UAO4C,CAC1CyL,MAD0C,SAE1C9c,MAAO,CACLqR,KAHJ,WAO2C,CACzCyL,MADyC,QAEzC9c,MAAO,CACLqR,KAHJ,UAO0C,CACxCyL,MADwC,OAExC9c,MAAO,CACLqR,KAHJ,WA4B+C,CAC7CyL,MAD6C,QAE7ClR,MAAO,CAvBkC,CACzCkR,MADyC,QAEzC9c,MAAO,CACL2X,MAHJ,UAO6C,CAC3CmF,MAD2C,UAE3C9c,MAAO,CACL2X,MAHJ,YAO4C,CAC1CmF,MAD0C,SAE1C9c,MAAO,CACL2X,MAHJ,e,UCjBM+kC,YAAa,UACjB,+BAAiBn8C,KADA,oBAIbo8C,YAAe,UACnB,+BAAiBp8C,KADE,eAIfq8C,YAAY,UAChB,+BAAiBr8C,KADD,YA4HLs8C,GAAmB90C,E,mLAtHvBvC,MAAe,CACpBs3C,mBADoB,EAEpBC,qBAFoB,G,EAKdC,sBAAwB,YAC9B,MAAO,CACLlgC,MAAOmgC,eAA0BA,EAA1BA,kBAAmDA,EAD5D,Q,EAKMC,oBAAsB,YAC5B,MAAO,CACLpgC,MADF,I,EAKMqgC,cAAgB,YAAoB,IACzBp8C,EAAUO,YAAY,QADE,WAGzC,yBACA,WAAc,CAAEw7C,mBAAhB,K,EAGMM,mBAAqB,WAC3B,mB,EAGMC,gBAAkB,YAAoB,IAC3BJ,EAAY,QADc,YAG3C,+BACGA,EADH,aAC0BA,EAD1B,QAGA,WAAc,CAAEF,qBAAhB,K,EAGMO,sBAAwB,WAC9B,GAAI,QAAJ,OACE,OAAOh8C,YAAY,QAAZA,YAAmC,EAA1C,sB,EAIIi8C,wBAA0B,WAChC,OAAI,QAAJ,SACS,qBAAwB,EAA/B,uBAGF,I,EAGMC,iBAAmB,WACzB,IAAMV,GAA8B,QAApC,kBAEA,WAAc,CAAEA,kBAAhB,K,EAGMW,mBAAqB,WAC3B,IAAMV,GAAgC,QAAtC,oBAEA,WAAc,CAAEA,oBAAhB,K,EAGMW,UAAY,WAClB9mC,eAAsBA,KAAtBA,OACAA,cAAqBA,KAArBA,OACA+mC,e,wDAGgC,IAAD,EACAz9C,KADA,MACvBgC,EADuB,QAChBwB,EADgB,cAG/B,OACE,wBAAMxB,MAAO,CAACwB,EAAD,UAAb,IACE,sBACEiM,QAASzP,KAAKsF,MADhB,kBAEEgV,SAAUta,KAFZ,cAGE6gB,KAAM7gB,KAHR,wBAIEkO,gBAAiBlO,KAJnB,kBAKE,sBACEmR,KADF,OAEEqL,KAFF,GAGEoI,UAAW5kB,KAAKF,MAHlB,OAIEgP,QAAS9O,KAJX,kBANJ,WAcE,sBACEyP,QAASzP,KAAKsF,MADhB,oBAEEgV,SAAUta,KAFZ,gBAGE6gB,KAAM7gB,KAHR,0BAIEkO,gBAAiBlO,KAJnB,oBAKE,sBACEmR,KADF,OAEEqL,KAFF,GAGEoI,UAAW5kB,KAAKF,MAHlB,SAIEgP,QAAS9O,KAJX,oBAnBJ,aA2BE,sBACEmR,KADF,OAEEwN,OAFF,SAGEnC,KAHF,GAIEoI,UAAW5kB,KAAKF,MAJlB,SAKEgP,QAAS9O,KALX,oBA3BF,SAmCE,sBACE04B,QAAShiB,KADX,MAEE+hB,SAAUz4B,KAFZ,UAGEic,KAvCN,a,GA1EoC3V,IAAMI,YAwHwB,kBAAuB,CAC3FmI,UAAW,CACTwH,cADS,MAETD,eAFS,eAGToK,gBAHS,GAITnL,gBAAiBxU,EALiD,iC,SC9GzD68C,GAAe71C,E,mLArClB81C,cAAgB,WAAgC,IAAD,EACX,EADW,MAC7Cn6C,EAD6C,cAChCkX,EADgC,OAG/CvK,GAAmC6S,EAHY,cAGDtI,EAApD,OAEA,OAAOpU,mBAA4B,CACjCtE,MAAO,CAACwB,EAAD,QAAsB2M,QAD/B,U,EAKMwM,mBAAqB,WAAsC,IAAD,EAClC,EADkC,MACxDnZ,EADwD,cAC3CkX,EAD2C,OAGhE,OACE,sBACEnY,WADF,OAEEP,MAAOwB,EAFT,YAGGkX,EAJL,Q,wDASgC,IAAD,EACM1a,KADN,MACvBgC,EADuB,QAChBwB,EADgB,cAGzBsZ,EAHyB,OAGqBpC,OAAc1a,KAAlE,qBACM49C,EAA2C59C,KAAjD,gBAEA,OACE,wBAAMgC,MAAO,CAACwB,EAAD,UAAb,MADF,O,GA9BgC8C,IAAMI,YAuCoB,kBAAuB,CACnFmI,UAAW,CACTwH,cADS,MAETF,WAFS,SAGTC,eAJiF,iBAMnFynC,WAAY,CACVn9B,SADU,IAEVtE,SAFU,GAGVsb,UATiF,QAWnFvnB,QAX4D,OCOjD2tC,GAAkBj2C,E,mLArCrBmb,WAAa,cAAwF,IAAD,EACtE,EADsE,MAClGxf,EADkG,cACrFwf,EADqF,aAG1G,OACE,sBACE/e,IADF,EAEEjC,MAAOwB,EAFT,KAGEkX,KAHF,EAIEsI,WALJ,K,EAUMrG,mBAAqB,WAAsC,IAAD,EAC/B,EAD+B,MACxDnZ,EADwD,cAC3Cu6C,EAD2C,UAGhE,OACE,sBAAM/7C,MAAOwB,EAAb,YACGu6C,EAFL,Q,wDAOgC,IAAD,EACS/9C,KADT,MACvBgC,EADuB,QAChBwB,EADgB,cACHu6C,EADG,UAGzBjhC,EAA8CihC,SAAiB/9C,KAArE,qBAEA,OACE,wBAAMgC,MAAO,CAACwB,EAAD,UAAb,MAEGu6C,YAAkB/9C,KAHvB,iB,GA9BmCsG,IAAMI,YAuCuB,kBAAuB,CACzFmI,UADyF,GAEzFgvC,WAAY,CACV3hC,eADU,EAEVE,SAFU,GAGVC,WAHU,GAIVqb,UANuF,QAQzFhd,KAAM,CACJwB,eATgE,O,+NCtC9D8hC,IA4COC,GAAWp2C,E,mLA1Cdq2C,sBAAwB,YAC9B,OAAO,mB,mVAAA,SAEF,QAFL,Y,EAMMC,qBAAuB,YAC7B,OACE,sBACEJ,QADF,EAEE/6B,WAAY,EAHhB,yB,EAQMo7B,kBAAoB,cAAqE,IAAD,EAC5D,EAD4D,MACtF56C,EADsF,cACzE66C,EADyE,WAGxFC,EAAmC,uBAAzC,GAEMC,EAAgCltC,IAAUgtC,kBAAVhtC,OAAgD7N,EAAtF,WAEA,OAAO8C,mBAAoC,CACzCrC,IADyC,EAEzCjC,MAAO,CAACwB,EAAD,OAAgC86C,QAFzC,U,wDAMgC,IAAD,EACGt+C,KADH,MACvBwD,EADuB,cACV66C,EADU,WAG/B,OACE,wBACEr8C,MAAOwB,EADT,UAEE8jC,SAFF,GAGG+W,eAAsBr+C,KAJ3B,wB,GAlC4BsG,IAAMI,YA4CgB,YACpD,MAAO,CACLmI,UAAW,CACTkD,KADS,EAETsD,gBAAiBxU,EAHd,6BAKL6Z,KAAM,CACJ+F,kBADI,GAEJD,gBAPG,IASLg+B,WAAY,CACVrpC,kBADU,EAEVC,kBAAmBvU,EAXvB,6BC7DW49C,GAAwB,CACnC,YADmC,EAEnC,WAFK,GCAMj4C,GAAgDF,kBALtB,CACrCjG,KADqC,YAErCq+C,YAAa,gB,+NCkBf,IAAaC,GAAb,yLAEwB,CACpBC,SAHJ,sBAM4B,YACxB,IAAMA,E,mVAAiC,IAAQ,QAAR,YAAvC,GAEA,WAAc,CAAEA,SAAhB,KATJ,kBAY4B,WAGxB,WAAc,CAAEA,SAFhB,MAbJ,gBAkB0B,YAAGF,MAAuD,EAAvDA,YAAuD,EACpB,EADoB,MACxEL,EADwE,WAC9DO,EAD8D,WACpD57B,EADoD,aACxCpV,EADwC,WAC9B5L,EAD8B,QAGhF,OACE,wBAAMA,MAAO,CAAC,CAAE+P,KAAH,GAAb,IACE,sBACE0sC,OADF,GAEEG,SAFF,EAGEzB,gBAAiB,EAHnB,gBAIEF,cAJF,EAKE4B,QAAS,EANb,oBASE,sBACER,SADF,EAEEr7B,WAFF,EAGE47B,SAAU,QAbhB,aArBJ,wDAyCI,OACE,kBAAC,GAAD,cACG5+C,KAFL,mBAzCJ,GAAuCsG,IAAvC,WCnBaw4C,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDAQI,OACE,sBACET,SADF,GAEEr7B,WAAYhjB,KAHhB,iBARJ,GAAqCsG,IAArC,WCEay4C,GAAb,yLAEwB,CACpBxkC,cAHJ,cAMqB,YACjB,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,4BACMva,KADN,OAEEua,cAAeva,KAAKsF,MAFtB,cAGEgV,SAAUta,KAJd,gBAXJ,GAA8CsG,IAA9C,WCKMvG,YAAO,GACX,OACE,wBAAO4C,OAAQ,CAAE05C,IADnB,8DAwDW2C,GAA8C,CACzDzC,SAAU,CAtBmC,CAC7C3/B,MAD6C,QAE7ClR,MAAO,CAhC4C,CACnD5L,MAAO,CACL8N,SAAU,CACR,sBAAqBgP,MADb,UAER,sBAAqBA,MAFb,UAGR,sBAAqBA,MAL3B,eAqC8C,CAC5CA,MAD4C,OAE5ClR,MAAO,CA7B2C,CAClD5L,MAAO,CACL8N,SAAU,CACR,sBAAqB4O,KADb,KAER,sBAAqBA,KAFb,KAGR,sBAAqBA,KAL3B,UAkCmD,CACjDI,MADiD,aAEjDlR,MAAO,CA1BgD,CACvD5L,MAAO,CACL8N,SAAU,CACR,sBAAqB4O,KAArB,GAAiCI,MADzB,UAER,sBAAqBJ,KAArB,GAAiCI,MAFzB,UAGR,sBAAqBJ,KAArB,GAAiCI,MALvC,iBAuCaqiC,GAAuD,CAClE,CACEC,aADF,aAEEp+C,MAFF,cAGE+0B,YAJG,iBCpEMspB,GAAb,8LAEuB,YACnB,OACE,+BAEEn9C,MAAO,CAAC4B,GAAD,UAAmB9D,EAH9B,WAHJ,wDAYI,OACE,sBACEu+C,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBAZJ,GAA+CsG,IAA/C,WAsBM1C,GAAS8L,YAAkB,CAC/BlH,UAAW,CACTuJ,KAFJ,KC5BaqtC,YAAiB,GAC5B,OACE,uBADF,WCKIC,YAAc,UAClB,0BAAMh/C,KAAN,QADkB,KAuGPi/C,GAAoC,CAC/C/C,SAAU,CA7BkC,CAC5C3/B,MAD4C,OAE5ClR,MAAO,CAzEoC,CAC3CkR,MAD2C,UAE3C9c,MAFF,IAK8C,CAC5C8c,MAD4C,WAE5C9c,MAAO,CACL8kB,UAHJ,MA0E8C,CAC5ChI,MAD4C,OAE5ClR,MAAO,CArEqC,CAC5CkR,MAD4C,YAE5C9c,MAAO,CACL0c,KAHJ,KAO+C,CAC7CI,MAD6C,aAE7C9c,MAAO,CACL0c,KADK,GAELxa,MAAO,CACLqU,cALN,iBAUkD,CAChDuG,MADgD,WAEhD9c,MAAO,CACL0c,KADK,GAELoI,UAJJ,MA2D8C,CAC5ChI,MAD4C,OAE5ClR,MAAO,CArDkC,CACzCkR,MADyC,QAEzC9c,MAAO,CACLqR,KAHJ,UAO2C,CACzCyL,MADyC,QAEzC9c,MAAO,CACLqR,KAHJ,UAO4C,CAC1CyL,MAD0C,SAE1C9c,MAAO,CACLqR,KAHJ,WAO2C,CACzCyL,MADyC,QAEzC9c,MAAO,CACLqR,KAHJ,UAO0C,CACxCyL,MADwC,OAExC9c,MAAO,CACLqR,KAHJ,aA0CaouC,GAA6C,CACxD,CACEL,aADF,aAEEp+C,MAHsD,UAKxD,CACEo+C,aADF,aAEEp+C,MAPsD,WASxD,CACEo+C,aADF,aAEEp+C,MAXsD,SAaxD,CACEo+C,aADF,SAEEp+C,MAfsD,WAiBxD,CACEo+C,aADF,SAEEp+C,MAnBsD,WAqBxD,CACEo+C,aADF,SAEEp+C,MAvBsD,QAyBxD,CACEo+C,aADF,SAEEp+C,MA3BsD,WA6BxD,CACEo+C,aADF,SAEEp+C,MA/BsD,UAiCxD,CACEo+C,aADF,SAEEp+C,MAnCsD,WAqCxD,CACEo+C,aADF,SAEEp+C,MAvCG,UC/GM0+C,GAAb,8LAEuB,YACnB,OACE,+BAEEx9C,MAAO,CAAC4B,GAAD,UAAmB9D,EAH9B,WAHJ,wDAYI,OACE,sBACEu+C,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBAZJ,GAAqCsG,IAArC,WAsBM1C,GAAS8L,YAAkB,CAC/BlH,UAAW,CACTuJ,KAFJ,KC3Ba0tC,YAAsB,GACjC,OACE,uBACE,0BADF,KAEE,0BAFF,KAGE,0BAJJ,OCwDWC,GAAyC,CACpDnD,SAAU,CAnBqC,CAC/C3/B,MAD+C,UAE/ClR,MAAO,CA1CyC,CAChDkR,MADgD,UAEhD9c,MAFF,MA+C8C,CAC5C8c,MAD4C,OAE5ClR,MAAO,CA5CuC,CAC9CkR,MAD8C,QAE9C9c,MAAO,CACLqR,KAHJ,UAOgD,CAC9CyL,MAD8C,QAE9C9c,MAAO,CACLqR,KAHJ,UAOiD,CAC/CyL,MAD+C,SAE/C9c,MAAO,CACLqR,KAHJ,WAOgD,CAC9CyL,MAD8C,QAE9C9c,MAAO,CACLqR,KAHJ,UAO+C,CAC7CyL,MAD6C,OAE7C9c,MAAO,CACLqR,KAHJ,aAgCawuC,GAAkD,CAC7D,CACET,aADF,aAEEp+C,MAH2D,UAK7D,CACEo+C,aADF,aAEEp+C,MAP2D,WAS7D,CACEo+C,aADF,SAEEp+C,MAX2D,WAa7D,CACEo+C,aADF,SAEEp+C,MAf2D,WAiB7D,CACEo+C,aADF,SAEEp+C,MAnB2D,QAqB7D,CACEo+C,aADF,SAEEp+C,MAvB2D,WAyB7D,CACEo+C,aADF,SAEEp+C,MA3B2D,UA6B7D,CACEo+C,aADF,SAEEp+C,MA/B2D,WAiC7D,CACEo+C,aADF,SAEEp+C,MAnCG,UC5DM8+C,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACEvB,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAA0CsG,IAA1C,WCAMu5C,G,mLAOGv6C,MAAwC,CAC7CozB,QAAS,QADoC,QAE7CY,cAAe,QAF8B,e,EAKvCb,SAAW,cACjB,WAAc,CAAEC,QAAF,EAAWY,cAAzB,K,wDAIA,OACE,4BACMt5B,KADN,OAEE04B,QAAS14B,KAAKsF,MAFhB,QAGEg0B,cAAet5B,KAAKsF,MAHtB,cAIEmzB,SAAUz4B,KALd,gB,GAjBoCsG,IAAMI,WAAxCm5C,GAEG74C,aAA8B,CACnC0xB,SADmC,EAEnCY,eAFmC,GA0BhC,IAAMwmB,YAAmB,GAC9B,OACE,qBADF,ICoCWC,GAAsC,CACjDxD,SAAU,CApBmC,CAC7C3/B,MAD6C,QAE7ClR,MAAO,CArDsC,CAC7CkR,MAD6C,UAE7C9c,MAAO,CACL44B,SAHJ,IAOiD,CAC/C9b,MAD+C,YAE/C9c,MAAO,CACL44B,SAHJ,IAOqD,CACnD9b,MADmD,gBAEnD9c,MAAO,CACLw5B,eAHJ,IAOgD,CAC9C1c,MAD8C,WAE9C9c,MAAO,CACL8kB,UAHJ,MAwCqD,CACnDhI,MADmD,cAEnDlR,MAAO,CAnCwC,CAC/CkR,MAD+C,aAE/C9c,MAAO,CACLmc,KAHJ,oBAOgD,CAC9CW,MAD8C,YAE9C9c,MAAO,CACLkC,MAAO,CAAEqU,cADJ,eAEL4F,KAJJ,oBAQoD,CAClDW,MADkD,gBAElD9c,MAAO,CACL8kB,UADK,EAEL3I,KAJJ,wBAkCa+jC,GAA+C,CAC1D,CACEd,aADF,SAEEp+C,MAHwD,WAK1D,CACEo+C,aADF,SAEEp+C,MAPwD,WAS1D,CACEo+C,aADF,SAEEp+C,MAXwD,QAa1D,CACEo+C,aADF,SAEEp+C,MAfwD,WAiB1D,CACEo+C,aADF,SAEEp+C,MAnBwD,UAqB1D,CACEo+C,aADF,SAEEp+C,MAvBwD,WAyB1D,CACEo+C,aADF,SAEEp+C,MA3BG,UCxEMm/C,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACE5B,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAuCsG,IAAvC,WCLa45C,YAAiB,GAC5B,OACE,uBADF,kBCYWC,GAAoC,CAC/C5D,SAAU,CARqC,CAC/C3/B,MAD+C,UAE/ClR,MAAO,CAPoC,CAC3CkR,MAD2C,UAE3C9c,MAFF,QCAasgD,GAAb,gMAEyB,WACrB,mCAHJ,aAMuB,YACnB,OACE,+BAEEp+C,MAAO,CAAC4B,GAAD,UAAmB9D,EAF5B,OAGEgP,QAAS,EAJb,iBAPJ,wDAiBI,OACE,sBACEuvC,SADF,GAEEr7B,WAAYhjB,KAHhB,iBAjBJ,GAAqCsG,IAArC,WA0BM1C,GAAS8L,YAAkB,CAC/BlH,UAAW,CACTuJ,KAFJ,KCgCasuC,GAAkC,CAC7C9D,SAAU,CAxBqC,CAC/C3/B,MAD+C,UAE/ClR,MAAO,CAtCkC,CACzCkR,MADyC,UAEzC9c,MAFF,MA2CmD,CACjD8c,MADiD,aAEjDlR,MAAO,CAxC+B,CACtCkR,MADsC,OAEtC9c,MAAO,CACLmT,UAHJ,SAOyC,CACvC2J,MADuC,QAEvC9c,MAAO,CACLmT,UAHJ,UAOyC,CACvC2J,MADuC,QAEvC9c,MAAO,CACLmT,UAHJ,YAiCkD,CAChD2J,MADgD,qBAEhDlR,MAAO,CA5BsC,CAC7CkR,MAD6C,WAE7C9c,MAAO,CACLmT,UADK,QAELg8B,gBAAiB,CACf18B,QALN,SAyCa+tC,GAA2C,CACtD,CACEpB,aADF,OAEEp+C,MAHoD,OAKtD,CACEo+C,aADF,OAEEp+C,MAPoD,OAStD,CACEo+C,aADF,OAEEp+C,MAXoD,WAatD,CACEo+C,aADF,OAEEp+C,MAfoD,gBAiBtD,CACEo+C,aADF,OAEEp+C,MAnBoD,YAqBtD,CACEo+C,aADF,OAEEp+C,MAvBG,uBC7DDy/C,GAAN,OAEaC,GAAb,2LAEgDl6C,IAFhD,oBAKwB,CACpBm6C,SANJ,wBAiB8B,YAC1B,iBAAsBxkC,aAAtB,IAlBJ,cAqBwB,WACpB,oCAtBJ,iBAyB2B,WACvB,oCA1BJ,aA6BuB,YACnB,OACE,0BACE5U,IAAK,EADP,QAEEhH,KAAM,QAFR,UAGM,EAHN,MADF,KA9BJ,mEAUIL,KAAK0gD,iBAAmB99B,WAAW5iB,KAAD,eAAlC,OAVJ,6CAcI2gD,aAAa3gD,KAAb2gD,oBAdJ,+BAyCI,OACE,sBACE3+C,MAAO,CAAE+P,KADX,GAEE4wB,YAFF,iBAGEie,eAHF,OAIEC,aAJF,EAKE5O,QALF,yBAMEP,YAAa1xC,KANf,WAOEwc,KAAMxc,KAPR,WAQE8gD,aAAc9gD,KARhB,kBASEuX,OAAQvX,KAVZ,kBAzCJ,GAAkCsG,IAAlC,WCHay6C,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACE1C,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAmCsG,IAAnC,WCWa06C,GAAb,+LAM8C16C,IAN9C,oBAQwB,CACpBwc,KAAM,QATV,iBAYqB,YACjB,WAAc,CAAEA,KAAhB,KAbJ,eAgByB,WACrB,uCAjBJ,sBAoBgC,WAC5B,OACE,kBAAC,IAAD,cACE,sBAAS9gB,MAAO4B,GADlB,gBAEE,wBAAM5B,MAAO4B,GAAb,iBACE,sBAAQkL,QAAS,EAAjB,cAJN,YArBJ,eAiCyB,WAGrB,OAFuB,EAD6B,kBAG/B,EAArB,uBApCJ,wDAwCI,OACE,4BACM9O,KADN,OAEEqH,IAAKrH,KAFP,YAGE8iB,KAAM9iB,KAAKsF,MAHb,KAIEgvB,aAAct0B,KAJhB,aAKEsa,SAAUta,KANd,gBAxCJ,GAAsCsG,IAAtC,WAAa06C,GAEJh6C,aAA+B,CACpCi6C,YADoC,GAkDxC,IAAMr9C,GAAS8L,YAAkB,CAC/BwxC,gBAAiB,CACfzgC,kBADe,EAEfpK,cAFe,MAGfF,WAHe,SAIfC,eAL6B,YAO/B+qC,cAAe,CACbjlC,eARJ,M,oBC3DMklC,GAASC,MAAiBC,KAEnBC,GAAb,YASE,aAAoC,IAAD,EAAvBz7B,EAAuB,uDAAN,KAAM,oBACjC,+BACK07B,UAAU17B,GAFkB,EATrC,uDAcmBA,GACf,kDAAgBA,GAChB9lB,KAAKyhD,oBAAoB37B,KAhB7B,6BAmBgBhD,EAAc2I,GAC1B,OAAOzrB,KAAK0hD,MAAM5+B,GAAM6+B,IAAI,CAAEl2B,WApBlC,+BAuBkB3I,EAAc8+B,GAC5B,OAAO5hD,KAAK0hD,MAAM5+B,GAAM6+B,IAAI,CAAEC,aAxBlC,8BA2BiB9+B,EAAc++B,GAC3B,OAAO7hD,KAAK0hD,MAAM5+B,GAAM6+B,IAAI,CAAEE,YA5BlC,4BA+Be/+B,GACX,OAAOA,EAAK4+B,QAAQ57B,OAAO9lB,KAAK8lB,UAhCpC,mCAmCsBC,EAAeC,GACjC,OAAOhmB,KAAKurB,QAAQxF,GAAS/lB,KAAKurB,QAAQvF,IACxChmB,KAAK2nB,SAAS5B,GAAS/lB,KAAK2nB,SAAS3B,IACrChmB,KAAK0nB,QAAQ3B,GAAS/lB,KAAK0nB,QAAQ1B,KAtCzC,iCAyCoB0C,EAAcJ,EAAexF,GAC7C,OAAOs+B,GAAOU,IAAI,CAACp5B,EAAMJ,EAAOxF,MA1CpC,6BA6CgBA,EAAcuE,GAC1B,OAAIvE,EACKA,EAAKuE,OAAOA,GAAUrnB,KAAK+hD,WAAWC,eAGxC,KAlDX,8BAqDiBl/B,GACb,OAAO9iB,KAAK0hD,MAAM5+B,GAAMA,SAtD5B,mCAyDsBA,GAClB,OAAO9iB,KAAK0hD,MAAM5+B,GAAMmJ,QA1D5B,0CA6DwF,IAA7DjqB,EAA4D,uDAAlCwkB,GAAiBsB,MAClE,OAAO9nB,KAAK+hD,WAAWt2B,KAAKzpB,KA9DhC,0CAkEI,OAAOhC,KAAK+hD,WAAWE,iBAlE3B,+BAqEkBn/B,GACd,OAAO9iB,KAAK0hD,MAAM5+B,GAAMwF,UAtE5B,kCAyEqBxF,GACjB,OAAO9iB,KAAK0hD,MAAM5+B,GAAMo/B,MAAM,WA1ElC,mCA6EsBp/B,GAAyE,IAA3D9gB,EAA0D,uDAAhCwkB,GAAiBsB,MACrEQ,EAAgBtoB,KAAK2nB,SAAS7E,GAEpC,OAAO9iB,KAAK+nB,oBAAoBO,EAAOtmB,KAhF3C,0CAmF6BsmB,GAA0E,IAA3DtmB,EAA0D,uDAAhCwkB,GAAiBsB,MACnF,OAAO9nB,KAAK+hD,WAAWH,OAAO5/C,GAAOsmB,KApFzC,oCAuFuBxF,GACnB,OAAO9iB,KAAK0hD,MAAM5+B,GAAMq/B,QAAQ,WAxFpC,6CA2FgCr/B,GAC5B,OAAO9iB,KAAK0hD,MAAM5+B,GAAMmK,gBA5F5B,8BA+FiBnK,GACb,OAAO9iB,KAAK0hD,MAAM5+B,GAAM4F,SAhG5B,iCAmGoB5F,GAChB,OAAO9iB,KAAK0hD,MAAM5+B,GAAMo/B,MAAM,UApGlC,mCAuGsBp/B,GAClB,OAAO9iB,KAAK0hD,MAAM5+B,GAAMq/B,QAAQ,UAxGpC,gCA2GmBp8B,EAAeC,GAC9B,OAAOhmB,KAAKomB,YAAYL,EAAOC,IAAUhmB,KAAK0nB,QAAQ3B,KAAW/lB,KAAK0nB,QAAQ1B,KA5GlF,kCA+GqBD,EAAeC,GAChC,OAAOhmB,KAAKqmB,WAAWN,EAAOC,IAAUhmB,KAAK2nB,SAAS5B,KAAW/lB,KAAK2nB,SAAS3B,KAhHnF,iCAmHoBD,EAAeC,GAC/B,OAAOhmB,KAAKurB,QAAQxF,KAAW/lB,KAAKurB,QAAQvF,KApHhD,wCAuH2BlD,EAAcuE,GACrC,OAAO+5B,GAAOt+B,EAAMuE,GAAQ+6B,YAxHhC,4BA2Het/B,EAAcuE,GACzB,OAAO+5B,GAAOt+B,EAAMuE,KA5HxB,8BAgII,OAAO+5B,OAhIX,8BAoII,MAAO,WApIX,0CAuIgCt7B,GAAiB,IAAD,IACtCu8B,EAAmBjB,GAAOW,WAAWj8B,GAE3C9lB,KAAK+hD,WAAa,CAChBE,eAAgBI,EAAiBJ,iBACjCD,cAAeK,EAAiBC,eAAe,KAC/CV,QAAM,WACHp7B,GAAiBsB,MAAQu6B,EAAiBE,eADvC,MAEH/7B,GAAiBsC,KAAOu5B,EAAiBT,UAFtC,GAINn2B,MAAI,WACDjF,GAAiBsB,MAAQu6B,EAAiBG,iBADzC,MAEDh8B,GAAiBsC,KAAOu5B,EAAiBI,YAFxC,QAjJV,GAAuC58B,I,yCCFjC0B,GAAQm7B,MAAeC,KACvBC,GAAaC,MAAgBC,KAQtBC,GAAb,YAME,aAA8D,IAAD,EAAjDj9B,EAAiD,uDAAhC,KAAMoB,EAA0B,2DAC3D,4BAAMpB,EAAQoB,KALNA,QAAmC,CAC3CG,OAAO,cAKP,EAAKH,QAAUA,GAAW,EAAKA,QAF4B,EAN/D,oDAWgBpE,EAAYuE,GACxB,OAAIvE,EACK8/B,GAAW9/B,EAAMuE,GAAUrnB,KAAKknB,QAAQG,OAAQrnB,KAAKknB,QAAQ87B,eAG/D,KAhBX,4BAmBelgC,EAAcuE,GAEzB,OAAOrnB,KAAKijD,UAAUngC,KArB1B,gCAwBoBA,GAChB,OAAOyE,GAAMzE,KAzBjB,8BA6BI,MAAO,eA7BX,GAAoCmE,ICD9BrjB,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTkD,KADS,EAETqE,eAFS,SAGTD,WAHS,SAITse,YAL6B,GAO/B3zB,MAAO,CACLsb,SADK,GAELE,WATJ,Y,qjBCVA,IAAM4mC,GAAY,IAAlB,KAEMC,GAAyC,CAC7CrjD,MAAO,CACL0oB,IAAK,IAAIf,KAAKy7B,iBAAT,KADA,GAEL73B,IAAK,IAAI5D,KAAKy7B,iBAAT,KAFA,GAGLjC,YAJJ,IAqJamC,IA3IHhC,OACO,IAHjB,GAUiB,IAHjB,GASe37B,GAFf,MAQS,IAAIgC,KAAKy7B,GAAT,cAA4BA,GAA5B,WADA,IAEA,IAAIz7B,KAAKy7B,GAAT,cAA4BA,cAA5B,EAHT,IAQQ,GAAD,GACAC,GADA,OAEH/vB,eAHJ,IAQQ,GAAD,GACA+vB,GADA,OAEH9vB,UDlDSgwB,SAAqB,KAAGvgC,MAA4D,EAA5DA,KAE7BhiB,EAAgB,IAAMgiB,EAAN,UAAuB/R,SAAS+R,EAAT/R,UAA7C,GAEA,OACE,wBACE/O,MAAO,CAAC4B,GAAD,UAAmB5B,EAD5B,YAEE,sBAAMA,MAAOA,EAAb,SAA6B8gB,EAF/B,WAGE,sBAAM9gB,MAAO,CAACA,EAAD,KAAa4B,GAA1B,QAA6C9C,EAJjD,SCmDM,GAAD,GACAqiD,GADA,OAEHvmC,MAAO,YACL,MAAM,QAER0mC,WAAY,YACV,MAAM,WAMJ,GAAD,GACAH,GADA,OAEHn+C,OAAQ,YACN,OAAO8d,gBAAP,IAA8BA,cAM5B,GAAD,GACAqgC,GADA,OAEHv5B,YAAa,IAAI,GAAJ,KAA4B,CACvC5C,eAJN,MA+EmD,CACjDu1B,SAAU,CAvEqC,CAC/C3/B,MAD+C,UAE/ClR,MAAO,CAFT,QCzFa63C,GAAb,8LAEuB,YACnB,OACE,0BAAkBvhD,MAAO,CAAC+P,KAA1B,IADF,KAHJ,wDASI,OACE,sBACEssC,SADF,GAEEr7B,WAAYhjB,KAHhB,iBATJ,GAAuCsG,IAAvC,WCCak9C,YAAgB,GAC3B,OACE,+BAEE7gB,YAHJ,sBCoEW8gB,GAAmC,CAC9ClH,SAAU,CAnBmC,CAC7C3/B,MAD6C,QAE7ClR,MAAO,CA/CmC,CAC1CkR,MAD0C,UAE1C9c,MAFF,IAK6C,CAC3C8c,MAD2C,WAE3C9c,MAAO,CACL8kB,UAHJ,MAgDqD,CACnDhI,MADmD,cAEnDlR,MAAO,CA3CgC,CACvCkR,MADuC,OAEvC9c,MAAO,CACL0c,KAAM,mBACJ,0BAAMnc,KAAN,QADI,OAMgC,CACxCuc,MADwC,QAExC9c,MAAO,CACL2sC,MAHJ,oBAO4C,CAC1C7vB,MAD0C,UAE1C9c,MAAO,CACLmyC,QAHJ,oBAOgD,CAC9Cr1B,MAD8C,eAE9C9c,MAAO,CACLmyC,QADK,kBAELP,YAAa,mBACX,0BAAMrxC,KAAN,QADW,WA+BJqjD,GAA4C,CACvD,CACExE,aADF,SAEEp+C,MAHqD,WAKvD,CACEo+C,aADF,SAEEp+C,MAPqD,WASvD,CACEo+C,aADF,SAEEp+C,MAXqD,QAavD,CACEo+C,aADF,SAEEp+C,MAfqD,WAiBvD,CACEo+C,aADF,SAEEp+C,MAnBqD,UAqBvD,CACEo+C,aADF,OAEEp+C,MAvBqD,SAyBvD,CACEo+C,aADF,OAEEp+C,MA3BqD,UA6BvD,CACEo+C,aADF,OAEEp+C,MA/BG,UCtEM6iD,GAAb,8LAEuB,YACnB,OACE,0BACE3hD,MAAO4B,GADT,WADF,KAHJ,wDAYI,OACE,sBACEy6C,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBAZJ,GAAoCsG,IAApC,WAsBM1C,GAAS8L,YAAkB,CAC/BlH,UAAW,CACTuJ,KAFJ,KC5Ba6xC,YAAiB,GAC5B,OACE,qBADF,ICUWC,GAAoC,CAC/CtH,SAAU,CARqC,CAC/C3/B,MAD+C,UAE/ClR,MAAO,CANoC,CAC3C5L,MADF,QAiBagkD,GAA6C,CACxD,CACE5E,aADF,QAEEp+C,MAFF,IAGE+0B,YAJsD,WAMxD,CACEqpB,aADF,QAEEp+C,MAFF,IAGE+0B,YATsD,WAWxD,CACEqpB,aADF,QAEEp+C,MAFF,IAGE+0B,YAdsD,WAgBxD,CACEqpB,aADF,QAEEp+C,MAFF,IAGE+0B,YAnBG,YCXMkuB,GAAb,8LAEuB,YACnB,OACE,+BAEE/hD,MAAO,CAAC4B,GAAD,UAAmB9D,EAH9B,WAHJ,wDAYI,OACE,sBACEu+C,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBAZJ,GAAqCsG,IAArC,WAsBM1C,GAAS8L,YAAkB,CAC/BlH,UAAW,CACTuJ,KADS,EAEThC,OAHJ,OC5Bai0C,YAAe,GAC1B,OACE,qBADF,ICIWC,YAAmB,GAC9B,OACE,qBADF,IAKWC,YAAuB,GAMlC,OACE,+BAAqB1nC,KALjB2nC,SAAW,YACf,0BAAM9jD,KAAN,QADe,SASN+jD,YAA4B,GAMvC,OACE,+BAAqBltB,UALjBmtB,SAAmB,YACvB,sBAAU3rB,QAASrnB,MADI,SASdizC,YAAgC,GAU3C,OACE,+BAAqB9nC,KATjB2nC,SAAW,YACf,+BAAiB9jD,KADF,WASsB62B,UALjCmtB,SAAmB,YACvB,sBAAU3rB,QAASrnB,MADI,SCqBdkzC,GAAkC,CAC7ChI,SAAU,CAR4C,CACtD3/B,MADsD,UAEtDlR,MAAO,CATyC,CAChD5L,MAAO,CACL+gB,KA/BqB,IAAItP,MAAM,IAAIpR,KAAO,CAC5Cyc,MAD4C,QAE5CiZ,YAFF,gBAgCI7S,WA3BEwhC,SAAiB,GACrB,OACE,qBAAsB/gD,EADxB,aA2CWghD,GAA2C,CACtD,CACEvF,aADF,aAEEp+C,MAzCE4jD,SAAqB,GACzB,OACE,qBAA0BjhD,EAD5B,OAyCEoyB,YAJoD,QAMtD,CACEqpB,aADF,aAEEp+C,MAxCE6jD,SAA0B,GAC9B,OACE,qBAA+BlhD,EADjC,OAwCEoyB,YAToD,aAWtD,CACEqpB,aADF,aAEEp+C,MAvCE8jD,SAA8B,GAClC,OACE,qBAAmCnhD,EADrC,OAuCEoyB,YAdG,mBC5DMgvB,GAAb,8LAEuB,YACnB,OACE,+BAEE7iD,MAAO,CAAC4B,GAAD,UAAmB9D,EAH9B,WAHJ,wDAYI,OACE,sBACEu+C,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBAZJ,GAAmCsG,IAAnC,WAsBM1C,GAAS8L,YAAkB,CAC/BlH,UAAW,CACTuJ,KAFJ,KCxBa+yC,GAAb,yLAEwB,CACpBvqC,cAHJ,iBAMqB,YACjB,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,4BACMva,KADN,OAEEua,cAAeva,KAAKsF,MAFtB,cAGEgV,SAAUta,KAJd,gBAXJ,GAAkCsG,IAAlC,WCGM69C,YAAW,UACf,+BAAkB9jD,KADH,WAmHJ0kD,GAAkC,CAC7CxI,SAAU,CAxBqC,CAC/C3/B,MAD+C,UAE/ClR,MAAO,CAvBkC,CACzCkR,MADyC,UAEzC9c,MAAO,CACL+gB,KAtEqC,CACvC,CAAEjE,MADqC,UAEvC,CAAEA,MAFqC,UAGvC,CAAEA,MAHJ,aA0E6C,CAC3CA,MAD2C,OAE3C9c,MAAO,CACL+gB,KAvEsC,CACxC,CACEjE,MADF,SAEEJ,KAHsC,IAKxC,CACEI,MADF,SAEEJ,KAPsC,IASxC,CACEI,MADF,SAEEJ,KAXJ,OA2EoD,CAClDI,MADkD,gBAElD9c,MAAO,CACL+gB,KA/D8C,CAChD,CACEjE,MADF,SAEEJ,KAH8C,IAKhD,CACEI,MADF,SAEEJ,KAFF,GAGEoI,UAR8C,GAUhD,CACEhI,MADF,SAEEJ,KAZJ,SAmFoD,CAClDI,MADkD,cAElDlR,MAAO,CATqC,CAC5CkR,MAD4C,SAE5C9c,MAAO,CACL+gB,KA/DwC,CAC1C,CACEjE,MADF,SAEEJ,KAHwC,IAK1C,CACEI,MADF,SAEEJ,KAFF,GAGE+oB,SAAU,CACR,CACE3oB,MADF,UAEEJ,KAFF,GAGEoI,UAJM,GAMR,CACEhI,MADF,UAEEJ,KARM,IAUR,CACEI,MADF,UAEEJ,KApBoC,MAwB1C,CACEI,MADF,SAEEJ,KA1BJ,WAiFawoC,GAA2C,CACtD,CACE9F,aADF,aAEEp+C,MAHoD,WAKtD,CACEo+C,aADF,aAEEp+C,MAPG,cC5HMmkD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACE5G,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAmCsG,IAAnC,WCEa4+C,GAAb,yLAEwB,CACpBnkB,gBAHJ,mBAM0B,WACtB,IAAMA,GAA2B,QAAjC,eAEA,WAAc,CAAEA,eAAhB,KATJ,uBAYiC,WAC7B,OACE,0BADF,qBAbJ,wDAqBI,OACE,4BACM/gC,KADN,OAEEyP,QAASzP,KAAKsF,MAFhB,eAGEzF,QAASG,KAHX,uBAIEkO,gBAAiBlO,KAJnB,gBAKE,sBAAQ8O,QAAS9O,KAAjB,eANJ,qBArBJ,GAAqCsG,IAArC,WCIa6+C,GAAqC,CAChD5I,SAAU,CAPqC,CAC/C7wC,MAAO,CANqC,CAC5CkR,MAD4C,UAE5C9c,MAFF,QAiBaslD,GAA8C,CACzD,CACElG,aADF,YAEEp+C,MAHuD,QAKzD,CACEo+C,aADF,YAEEp+C,MAPuD,cASzD,CACEo+C,aADF,YAEEp+C,MAXuD,YAazD,CACEo+C,aADF,YAEEp+C,MAfuD,OAiBzD,CACEo+C,aADF,YAEEp+C,MAnBuD,aAqBzD,CACEo+C,aADF,YAEEp+C,MAvBuD,WAyBzD,CACEo+C,aADF,YAEEp+C,MA3BuD,SA6BzD,CACEo+C,aADF,YAEEp+C,MA/BuD,eAiCzD,CACEo+C,aADF,YAEEp+C,MAnCuD,aAqCzD,CACEo+C,aADF,YAEEp+C,MAvCuD,UAyCzD,CACEo+C,aADF,YAEEp+C,MA3CuD,gBA6CzD,CACEo+C,aADF,YAEEp+C,MA/CG,eCZMukD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACEhH,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAsCsG,IAAtC,WCDMg/C,G,mLAMGhgD,MAAqC,CAC1CozB,QAAS,QADiC,S,EAIpCD,SAAW,YACjB,WAAc,CAAEC,QAAhB,K,wDAIA,OACE,4BACM14B,KADN,OAEE04B,QAAS14B,KAAKsF,MAFhB,QAGEmzB,SAAUz4B,KAJd,gB,GAfiCsG,IAAMI,WAArC4+C,GAEGt+C,aAA2B,CAChC0xB,SADgC,GAuB7B,IAAM6sB,YAAgB,GAC3B,OACE,qBADF,IC0CWC,GAAmC,CAC9CjJ,SAAU,CApBmC,CAC7C3/B,MAD6C,QAE7ClR,MAAO,CAvDmC,CAC1CkR,MAD0C,UAE1C9c,MAAO,CACL44B,SAHJ,IAO8C,CAC5C9b,MAD4C,YAE5C9c,MAAO,CACL44B,SAHJ,IAOoD,CAClD9b,MADkD,mBAElD9c,MAAO,CACL44B,SADK,EAEL9T,UAJJ,IAQsD,CACpDhI,MADoD,qBAEpD9c,MAAO,CACL44B,SADK,EAEL9T,UAJJ,MAyCqD,CACnDhI,MADmD,cAEnDlR,MAAO,CAnCqC,CAC5CkR,MAD4C,aAE5C9c,MAAO,CACLmc,KAHJ,oBAO6C,CAC3CW,MAD2C,YAE3C9c,MAAO,CACLkC,MAAO,CAAEqU,cADJ,eAEL4F,KAJJ,oBAQiD,CAC/CW,MAD+C,gBAE/C9c,MAAO,CACL8kB,UADK,EAEL3I,KAJJ,wBAkCawpC,GAA4C,CACvD,CACEvG,aADF,SAEEp+C,MAHqD,WAKvD,CACEo+C,aADF,SAEEp+C,MAPqD,WASvD,CACEo+C,aADF,SAEEp+C,MAXqD,QAavD,CACEo+C,aADF,SAEEp+C,MAfqD,WAiBvD,CACEo+C,aADF,SAEEp+C,MAnBqD,UAqBvD,CACEo+C,aADF,SAEEp+C,MAvBqD,WAyBvD,CACEo+C,aADF,SAEEp+C,MA3BqD,SA6BvD,CACEo+C,aADF,UAEEp+C,OA/BG,IC1EM4kD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACErH,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAoCsG,IAApC,WCAaq/C,GAAb,yLAEwB,CACpBprC,cAHJ,cAMqB,YACjB,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,sBACEA,cAAeva,KAAKsF,MADtB,cAEEmzB,SAAUz4B,KAFZ,UAGE,sBAAOic,KAHT,aAIE,sBAAOA,KAJT,aAKE,sBAAOA,KANX,kBAXJ,GAAwC3V,IAAxC,WCmDas/C,GAAwC,CACnDrJ,SAAU,CATwC,CAClD3/B,MADkD,aAElDlR,MAAO,CAnDwC,CAC/CkR,MAD+C,SAE/C9c,MAAO,CACLyC,WAHJ,WAOkD,CAChDqa,MADgD,UAEhD9c,MAAO,CACLyC,WAHJ,gBCJasjD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACExH,SADF,GAEEr7B,WAAYhjB,KAHhB,iBATJ,GAAyCsG,IAAzC,WCGaw/C,YAAkB,GAC7B,gBAAIhmD,SACKimD,GAAP,GAEOC,GAAP,IAIEA,YAAiB,GACrB,OACE,qBADF,IAKID,YAAe,GACnB,OACE,wBAAM/jD,MAAO4B,GAAb,uBACE,qBAFJ,KAOIA,GAAS8L,YAAkB,CAC/Bu2C,sBAAuB,CACrBn2C,MADqB,GAErBC,OAFqB,GAGrBsF,gBAHqB,UAIrBe,eAJqB,SAKrBD,WANJ,YCyEa+vC,GAAqC,CAChD3J,SAAU,CAxBkC,CAC5C3/B,MAD4C,OAE5ClR,MAAO,CA/EmC,CAC1CkR,MAD0C,QAE1C9c,MAAO,CACLqR,KAHJ,UAO4C,CAC1CyL,MAD0C,QAE1C9c,MAAO,CACLqR,KAHJ,UAO6C,CAC3CyL,MAD2C,SAE3C9c,MAAO,CACLqR,KAHJ,WAO4C,CAC1CyL,MAD0C,QAE1C9c,MAAO,CACLqR,KAHJ,UAO2C,CACzCyL,MADyC,OAEzC9c,MAAO,CACLqR,KAHJ,WA4DgD,CAC9CyL,MAD8C,SAE9ClR,MAAO,CAvDqC,CAC5CkR,MAD4C,UAE5C9c,MAAO,CACL6e,OAHJ,YAO8C,CAC5C/B,MAD4C,UAE5C9c,MAAO,CACL6e,OAHJ,YAO2C,CACzC/B,MADyC,OAEzC9c,MAAO,CACL6e,OAHJ,SAO8C,CAC5C/B,MAD4C,UAE5C9c,MAAO,CACL6e,OAHJ,YAO6C,CAC3C/B,MAD2C,SAE3C9c,MAAO,CACL6e,OAHJ,WAOkD,CAChD/B,MADgD,cAEhD9c,MAAO,CACL6e,OAHJ,oBAqCawnC,GAA8C,CACzD,CACEjH,aADF,YAEEp+C,OAHuD,GAKzD,CACEo+C,aADF,YAEEp+C,OAPG,ICtGMslD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACE/H,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAsCsG,IAAtC,WCDa+/C,GAAb,yLAEwB,CACpB9rC,cAHJ,cAMqB,YACjB,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,4BACMva,KADN,OAEEua,cAAeva,KAAKsF,MAFtB,cAGEgV,SAAUta,KAJd,gBAXJ,GAAqCsG,IAArC,WCIM69C,YAAW,GACf,OACE,+BAAiB9jD,KADnB,WA4FWimD,GAAqC,CAChD/J,SAAU,CAtBmC,CAC7C3/B,MAD6C,QAE7ClR,MAAO,CApE4C,CACnD5L,MAAO,CACL8N,SAAU,CACR,sBAAKgP,MAAL,SACE,0BACE,0BAHI,WAMR,sBAAKA,MAAL,SACE,0BACE,0BARI,WAWR,sBAAKA,MAAL,SACE,0BACE,0BAfV,gBAyE8C,CAC5CA,MAD4C,OAE5ClR,MAAO,CArD2C,CAClD5L,MAAO,CACL8N,SAAU,CACR,sBAAK4O,KAAL,IACE,0BACE,0BAHI,WAMR,sBAAKA,KAAL,IACE,0BACE,0BARI,WAWR,sBAAKA,KAAL,IACE,0BACE,0BAfV,gBA0DmD,CACjDI,MADiD,aAEjDlR,MAAO,CAtCgD,CACvD5L,MAAO,CACL8N,SAAU,CACR,sBAAK4O,KAAL,GAAiBI,MAAjB,SACE,0BACE,0BAHI,WAMR,sBAAKJ,KAAL,GAAiBI,MAAjB,SACE,0BACE,0BARI,WAWR,sBAAKJ,KAAL,GAAiBI,MAAjB,SACE,0BACE,0BAfV,kBCvDa2pC,GAAb,8LAEuB,YACnB,OACE,+BAEEvkD,MAAO,CAAC4B,GAAD,UAAmB9D,EAH9B,WAHJ,wDAYI,OACE,sBACEu+C,SADF,GAEEr7B,WAAYhjB,KAHhB,iBAZJ,GAAsCsG,IAAtC,WAqBM1C,GAAS8L,YAAkB,CAC/BlH,UAAW,CACTuJ,KAFJ,KCnBay0C,GAAb,yLAEwB,CACpBC,gBAHJ,mBAM0B,WACtB,IAAMA,GAA2B,QAAjC,eAEA,WAAc,CAAEA,eAAhB,KATJ,wDAaI,OACE,4BACMzmD,KADN,OAEEyP,QAASzP,KAAKsF,MAFhB,eAGE2W,KAHF,oBAIE/N,gBAAiBlO,KAJnB,gBAKE,sBAAQ8O,QAAS9O,KAAjB,eANJ,qBAbJ,GAAqCsG,IAArC,WCMaogD,GAAqC,CAChDnK,SAAU,CAPqC,CAC/C7wC,MAAO,CANqC,CAC5CkR,MAD4C,UAE5C9c,MAFF,QAiBa6mD,GAA8C,CACzD,CACEzH,aADF,YAEEp+C,MAHuD,QAKzD,CACEo+C,aADF,YAEEp+C,MAPuD,cASzD,CACEo+C,aADF,YAEEp+C,MAXuD,YAazD,CACEo+C,aADF,YAEEp+C,MAfuD,OAiBzD,CACEo+C,aADF,YAEEp+C,MAnBuD,aAqBzD,CACEo+C,aADF,YAEEp+C,MAvBuD,WAyBzD,CACEo+C,aADF,YAEEp+C,MA3BuD,SA6BzD,CACEo+C,aADF,YAEEp+C,MA/BuD,eAiCzD,CACEo+C,aADF,YAEEp+C,MAnCuD,aAqCzD,CACEo+C,aADF,YAEEp+C,MAvCuD,UAyCzD,CACEo+C,aADF,YAEEp+C,MA3CuD,gBA6CzD,CACEo+C,aADF,YAEEp+C,MA/CG,eCZM8lD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACEvI,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAsCsG,IAAtC,WCLaugD,YAAe,GAC1B,OACE,uBADF,SC6GWC,GAAkC,CAC7CvK,SAAU,CApBsC,CAChD3/B,MADgD,WAEhDlR,MAAO,CA7F6B,CACpCkR,MADoC,cAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,cAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,cAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,cAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,cAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,cAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,cAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,cAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,eAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,eAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,aAEpC9c,MAAO,CACL4kB,SAHJ,OAOsC,CACpC9H,MADoC,aAEpC9c,MAAO,CACL4kB,SAHJ,OAOyC,CACvC9H,MADuC,QAEvC9c,MAAO,CACL4kB,SAHJ,cAgCaqiC,GAA2C,CACtD,CACE7H,aADF,aAEEp+C,MAHoD,eAKtD,CACEo+C,aADF,aAEEp+C,MAPoD,QAStD,CACEo+C,aADF,SAEEp+C,MAXoD,WAatD,CACEo+C,aADF,SAEEp+C,MAfoD,WAiBtD,CACEo+C,aADF,SAEEp+C,MAnBoD,QAqBtD,CACEo+C,aADF,SAEEp+C,MAvBoD,WAyBtD,CACEo+C,aADF,SAEEp+C,MA3BG,WC/GMkmD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACE3I,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAmCsG,IAAnC,WCDM2gD,G,mLAMG3hD,MAAsC,CAC3CozB,QAAS,QADkC,S,EAIrCD,SAAW,YACjB,WAAc,CAAEC,QAAhB,K,wDAIA,OACE,4BACM14B,KADN,OAEE04B,QAAS14B,KAAKsF,MAFhB,QAGEmzB,SAAUz4B,KAJd,gB,GAfkCsG,IAAMI,WAAtCugD,GAEGjgD,aAA4B,CACjC0xB,SADiC,GAuB9B,I,GAAMwuB,YAAiB,GAC5B,OACE,qBADF,ICuBIC,GAAyC,CAC7CvqC,MAD6C,QAE7ClR,MAAO,CAvDsC,CAC7CkR,MAD6C,aAE7C9c,MAAO,CACLmc,KAHJ,oBAOgD,CAC9CW,MAD8C,YAE9C9c,MAAO,CACLkC,MAAO,CAAEqU,cADJ,eAEL4F,KAJJ,oBAQmD,CACjDW,MADiD,gBAEjD9c,MAAO,CACLmc,KADK,kBAEL2I,UAJJ,MA+CMwiC,GAAyC,CAC7CxqC,MAD6C,QAE7ClR,MAAO,CAzCoC,CAC3CkR,MAD2C,UAE3C9c,MAAO,CACL44B,SAHJ,IAO+C,CAC7C9b,MAD6C,YAE7C9c,MAAO,CACL44B,SAHJ,IAeqD,CACnD9b,MADmD,mBAEnD9c,MAAO,CACL44B,SADK,EAEL9T,UAJJ,IARuD,CACrDhI,MADqD,qBAErD9c,MAAO,CACL44B,SADK,EAEL9T,UAJJ,MAmCayiC,GAAoC,CAC/C9K,SAAU,CAAC,GADN,KAOM+K,GAA6C,CACxD,CACEpI,aADF,SAEEp+C,MAHsD,WAKxD,CACEo+C,aADF,SAEEp+C,MAPsD,WASxD,CACEo+C,aADF,SAEEp+C,MAXsD,QAaxD,CACEo+C,aADF,SAEEp+C,MAfsD,WAiBxD,CACEo+C,aADF,SAEEp+C,MAnBsD,UAqBxD,CACEo+C,aADF,SAEEp+C,MAvBsD,WAyBxD,CACEo+C,aADF,SAEEp+C,MA3BG,UC1EMymD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACElJ,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAqCsG,IAArC,WCEMkhD,YAAmB,GACvB,OACE,+BAAiBnnD,KADnB,WAKIonD,GAAoD,CACxD3nD,MAAO,CACL8c,MADK,QAELy+B,SAFK,WAGLE,YAAa,sBAAqB/+B,KAH7B,KAILg/B,cAAe,CACb,sBAAqBh/B,KADR,KAEb,sBAAqBA,KAP3B,QAYMkrC,GAAkD,CACtD5nD,MAAO,CACL8c,MADK,QAELy+B,SAFK,WAGLE,YAAa,sBAAqB/+B,KAJtC,OAqBMmrC,GAAiD,CACrD/qC,MADqD,iBAErDlR,MAAO,CAFT,KAOMk8C,GAA+C,CACnDhrC,MADmD,eAEnDlR,MAAO,CAFT,KAOMm8C,GAA4C,CAChDjrC,MADgD,WAEhDlR,MAAO,CA7B4C,CACnD5L,MAAO,CACL8c,MADK,QAELy+B,SAHJ,eAkCM8L,GAAyC,CAC7CvqC,MAD6C,QAE7ClR,MAAO,CA7ByC,CAChD5L,MAAO,CACL8c,MAFJ,YAkCakrC,GAA2C,CACtDvL,SAAU,CAAC,GAAD,MADL,KASMwL,GAAoD,CAC/D,CACE7I,aADF,aAEEp+C,MAH6D,WAK/D,CACEo+C,aADF,aAEEp+C,MAP6D,WAS/D,CACEo+C,aADF,YAEEp+C,MAX6D,SAa/D,CACEo+C,aADF,YAEEp+C,MAfG,WCnFMknD,YAAwB,GAEnC,OACE,qBADF,ICIWC,GAAb,8LAEuB,YACnB,OACE,+BAEEjmD,MAAO,CAAC4B,GAAD,UAAmB9D,EAH9B,WAHJ,wDAYI,OACE,sBACEu+C,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBAZJ,GAA4CsG,IAA5C,WAsBM1C,GAAS8L,YAAkB,CAC/BlH,UAAW,CACTuJ,KAFJ,KCtBam2C,GAAb,yLAEwB,CACpBC,aADoB,EAEpBC,kBAJJ,mBAOuB,WACnB,IAAMD,GAAwB,QAA9B,YACA,WAAc,CAAEA,YAAhB,KATJ,WAYqB,YACjB,WAAc,CAAEC,kBAAhB,GAAqC,EAArC,aAbJ,wDAgBwC,IAAD,EACQpoD,KADR,MAC3BmoD,EAD2B,cACdC,EADc,oBAGnC,OACE,4BACMpoD,KADN,OAEEyP,QAFF,EAGE8K,cAHF,EAIED,SAAUta,KAJZ,SAKEkO,gBAAiBlO,KALnB,aAME,sBAAQ8O,QAAS9O,KAAjB,YAPJ,oBAnBJ,GAA0CsG,IAA1C,WCCM69C,YAAW,UACf,+BAAiB9jD,KADF,WAUXgoD,GAA4C,CAChD,CACEzrC,MADF,SAEEJ,KAH8C,IAKhD,CACEI,MADF,SAEEJ,KAP8C,IAShD,CACEI,MADF,SAEEJ,KAXJ,KAeM8rC,GAAoD,CACxD,CACE1rC,MADF,SAEEJ,KAHsD,IAKxD,CACEI,MADF,SAEEJ,KAFF,GAGEoI,UARsD,GAUxD,CACEhI,MADF,SAEEJ,KAZJ,KAgBM+rC,GAA6C,CACjD3rC,MADiD,UAEjD9c,MAAO,CACL+gB,KAxC6C,CAC/C,CAAEjE,MAD6C,UAE/C,CAAEA,MAF6C,UAG/C,CAAEA,MAHJ,aA4CM4rC,GAAmC,CACvC5rC,MADuC,OAEvC9c,MAAO,CACL+gB,KAHJ,KAOM4nC,GAA0C,CAC9C7rC,MAD8C,OAE9C9c,MAAO,CACL+gB,KAHJ,KAOM6nC,GAA2C,CAC/Ch9C,MAAO,CAAC,GAAD,GADT,KAQai9C,GAA0C,CACrDpM,SAAU,CADL,KAMMqM,GAAmD,CAC9D,CACE1J,aADF,aAEEp+C,MAH4D,WAK9D,CACEo+C,aADF,aAEEp+C,MAP4D,aAS9D,CACEo+C,aADF,YAEEp+C,MAX4D,QAa9D,CACEo+C,aADF,YAEEp+C,MAf4D,cAiB9D,CACEo+C,aADF,YAEEp+C,MAnB4D,YAqB9D,CACEo+C,aADF,YAEEp+C,MAvB4D,OAyB9D,CACEo+C,aADF,YAEEp+C,MA3B4D,aA6B9D,CACEo+C,aADF,YAEEp+C,MA/B4D,WAiC9D,CACEo+C,aADF,YAEEp+C,MAnC4D,SAqC9D,CACEo+C,aADF,YAEEp+C,MAvC4D,eAyC9D,CACEo+C,aADF,YAEEp+C,MA3C4D,aA6C9D,CACEo+C,aADF,YAEEp+C,MA/C4D,UAiD9D,CACEo+C,aADF,YAEEp+C,MAnD4D,gBAqD9D,CACEo+C,aADF,YAEEp+C,MAvDG,eC9EM+nD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACExK,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAA2CsG,IAA3C,WCqBMwiD,G,mLAGGxjD,MAAe,CACpByjD,iBADoB,G,EAIdC,oBAAsB,WAC5B,IAAMD,GAA4B,QAAlC,gBACA,WAAc,CAAEA,gBAAhB,K,EAGME,mBAAqB,YAC3B,IAAMzsC,EAAe,8BAArB,UAEA,OACE,0BAAMnc,KAAN,GADF,K,wDAK8B,IAAD,EAC2BL,KAD3B,MACrBwD,EADqB,cACR0lD,EADQ,eACMC,EADN,SACcC,EADd,WAG7B,OACE,sBACEpnD,MAAOwB,EADT,UAEE6lD,MAFF,KAGE,sBAAQrnD,MAAOwB,EAAf,eACE,sBACExB,MAAOwB,EADT,WAEE6lD,MAFF,KAGE,wBAAMrnD,MAAOwB,EAAb,sBACE,sBACExB,MAAOwB,EADT,UAEEkhB,SAFF,MADF,aAME,sBACEvT,KADF,QAEEunB,QAASywB,IACT1wB,SAZN,KAeE,sBACEz2B,MAAOwB,EADT,aAEEb,OAjBJ,IAmBE,wBAAMX,MAAOwB,EAAb,kBACE,sBAAMkhB,SAAN,MADF,WAEE,sBAAMA,SAAN,MAtBN,6BAyBE,sBACE1iB,MAAOwB,EADT,cAEE6lD,MAFF,KAGE,sBACErnD,MAAOwB,EADT,UAEEoa,UAAWpa,EAFb,aAGEipC,MAHF,QAIE9J,YAPJ,sBASE,sBACE3gC,MAAOwB,EADT,UAEEoa,UAAWpa,EAFb,aAGE8lD,iBAAkBtpD,KAAKsF,MAHzB,gBAIEmnC,MAJF,WAKE9J,YALF,WAMEnmB,KAAMxc,KANR,mBAOEuwC,YAAavwC,KAhBjB,sBAkBE,sBAAQgC,MAAOwB,EAAf,cA/CR,kB,GAvB0B8C,IAAMI,WA8EvB6iD,GAAS1hD,EAAW,IAAiB,kBAAuB,CACvEgH,UAAW,CACTkD,KADS,EAET0O,kBAFS,GAGTD,gBAJqE,IAMvEgpC,cAAe,CACbz3C,KADa,EAEbsE,cAFa,MAGb1B,aAHa,EAIb4K,SAVqE,UAYvEkqC,WAAY,CACVpzC,cADU,MAEVF,WAFU,SAGVuK,SAHU,IAIVD,kBAhBqE,IAkBvEipC,qBAAsB,CACpB75C,SADoB,WAEpBmI,KAFoB,GAGpBmhB,OAHoB,GAIpB9iB,cAJoB,MAKpBF,WAvBqE,UAyBvEwzC,UAAW,CACT1vC,iBA1BqE,GA4BvEivC,aAAc,CACZp5C,MADY,GAEZC,OAFY,GAGZ2H,YAHY,EAIZK,YAAalX,EAhCwD,yBAkCvE+oD,iBAAkB,CAChBnpC,kBAnCqE,IAqCvEopC,cAAe,CACb93C,KADa,EAEbqE,eAFa,SAGbqK,kBAxCqE,IA0CvEqpC,UAAW,CACT5tC,eA3CqE,GA6CvE6tC,aAAc,CACZ3sC,aA9CqE,GAgDvE4sC,aAAc,CACZ9tC,eAjD8C,QCtGrC+tC,GAAb,gMAE8CxqD,EAF9C,mBAIwB,YACpB,mBAAOoC,QALX,cAQwB,cACpB,IAAMqoD,EAAsBvqD,EAAI,WAAhC,YAEAkC,kBAXJ,gBAc0B,YACtB,OACE,sBACEqnD,aAAc,EADhB,aAEEC,OAAQ,kBAAM,cAAN,IACRC,SAAU,mBAAmB,gBAAnB,OAnBlB,wDAyBI,OACE,kBAAC,GAAD,cACGppD,KAFL,mBAzBJ,GAAqCsG,IAArC,WCOa6jD,GAAb,yLAEwB,CACpBC,cAHJ,iBAMwB,YACpB,WAAc,CAAEA,aAAhB,KAPJ,wDAUoC,IAAD,OAC/B,OACE,wBAAMpoD,MAAO4B,GAAb,WACE,sBAAQkL,QAAS,kBAAM,eAAN,KADnB,cAIE,4BACM9O,KADN,OAEEyP,QAASzP,KAAKsF,MAFhB,aAGE4I,gBAAiB,kBAAM,eAAN,MACjB,0BAJF,qBAKE,sBACElM,MAAO4B,GADT,OAEEkL,QAAS,kBAAM,eAAN,KAZjB,iBAXJ,GAAmCxI,IAAnC,WAgCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTuH,eAF6B,iBAI/BkI,OAAQ,CACNmzB,UALJ,MCzCM7tC,GAAS8L,YAAkB,CAC/B+jC,MAAO,CACLp+B,gBADK,UAELvF,MAFK,IAGLC,OAHK,IAILm8B,QAJK,GAKL/1B,WALK,SAMLC,eANK,SAOLzB,aAR6B,GAU/B6+B,cAAe,CACbn+B,gBADa,QAEbysB,QAZ6B,IAc/BuoB,oBAAqB,CACnBryC,KADmB,IAEnBC,IAhBJ,OAyBMywC,GAA2C,CAC/C9rC,MAD+C,gBAE/ClR,MAAO,CAPmC,CAC1CkR,MAD0C,UAE1C9c,MAFF,MAYMwqD,GAA2C,CAC/C1tC,MAD+C,eAE/C9c,MAAO,CACLkC,MAAO4B,GAHX,QAOM2mD,GAAmD,CACvD3tC,MADuD,kBAEvD9c,MAAO,CACLkC,MAAO4B,GADF,MAEL4vC,cAAe5vC,GAJnB,gBAQMymD,GAA6C,CACjDztC,MADiD,kBAEjD9c,MAAO,CACLkC,MAAO,CAAE4B,GAAF,oBAA8BA,GAHzC,SAOM4mD,GAAgD,CACpD5tC,MADoD,UAEpDlR,MAAO,CAAC,GAAD,GAFT,KASM++C,GAAoD,CACxD7tC,MADwD,0BAExD9c,MAAO,CACLqO,eADK,EAELnM,MAAO4B,GAFF,MAGL4vC,cAAe5vC,GALnB,gBASM8mD,GAAuD,CAC3D9tC,MAD2D,2BAE3D9c,MAAO,CACL6qD,iBADK,EAEL3oD,MAAO4B,GAFF,MAGL4vC,cAAe5vC,GALnB,gBASMgnD,GAA0D,CAC9DhuC,MAD8D,+BAE9DlR,MAAO,CAAC,GAFV,KAQam/C,GAAmC,CAC9CtO,SAAU,CAAC,GAAD,GADL,KCvFMuO,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACEzM,SADF,GAEEr7B,WAAYhjB,KAHhB,iBATJ,GAAoCsG,IAApC,WCUMykD,G,YAEJ,cAAwC,IAAD,sBACrC,iCADqC,yBAOJ,WAAqB,IAAD,EACZ,EADY,MAC7ChjB,EAD6C,cAChCijB,EADgC,kBAGrD,SACSA,GAAP,GAEOA,GAAP,MAbmC,oBAiBX,YAC1B,WAAc,CAAErhB,eAAhB,KAhBA,QAAa,CACXA,eAAgB,EADlB,4BAFqC,E,sDAsBrC,OACE,4BACM3pC,KADN,OAEEgC,MAAO4B,GAFT,SAGE+lC,eAAgB3pC,KAAKsF,MAHvB,eAIEgV,SAAUta,KALd,yB,GAxBkCsG,IAAMI,WAmCtC9C,GAAS8L,YAAkB,CAC/Bu7C,SAAU,CACRn7C,MAFJ,OAMao7C,YAAiB,GAC5B,OACE,qBADF,IC/CIC,GAA0C,CAC9C,CACElvC,KADF,WAEE2I,UAH4C,GAK9C,CAAE3I,KAL4C,YAM9C,CAAEA,KAN4C,YAO9C,CAAEA,KAP4C,YAQ9C,CAAEA,KAR4C,YAS9C,CAAEA,KAT4C,YAU9C,CAAEA,KAV4C,YAW9C,CAAEA,KAXJ,aAcMmvC,GAA6C,CACjD,CAAEnvC,KAD+C,YAEjD,CACEA,KADF,WAEEvQ,MAAO,CACL,CACEuQ,KADF,YAEE2I,UAHG,GAKL,CAAE3I,KALG,aAML,CAAEA,KAVR,gBA0BMovC,GAAuC,CAC3CzuC,MAD2C,UAE3C9c,MAAO,CACL+gB,KAHJ,KAOMyqC,GAAwC,CAC5C1uC,MAD4C,WAE5C9c,MAAO,CACL+gB,KADK,GAEL+D,UAJJ,IAQM8jC,GAA2C,CAC/C9rC,MAD+C,iBAE/ClR,MAAO,CAAC,GAFV,KAQM6/C,GAA2C,CAC/C3uC,MAD+C,cAE/C9c,MAAO,CACLioC,aADK,EAELlnB,KAJJ,KAQM2qC,GAA+C,CACnD5uC,MADmD,qBAEnDlR,MAAO,CAFT,KAOM+/C,GAAqC,CACzC7uC,MADyC,cAEzC9c,MAAO,CACL+gB,KAHJ,KAeM6qC,GAA8C,CAClD9uC,MADkD,gBAElDlR,MAAO,CAFT,KAQMigD,GAAwC,CAC5C/uC,MAD4C,YAE5C9c,MAAO,CACL+gB,KADK,GAELrE,KAzEEsnB,SAAa,KACjB,IAAM2c,EAAWhxC,EAAO,mBAAxB,qBAEA,OACE,+BAAiBpP,KADnB,MAuEE0nC,aALJ,IASM6jB,GAA4C,CAChDhvC,MADgD,YAEhDlR,MAAO,CAFT,KAOMmgD,GAAyC,CAC7CjvC,MAD6C,QAE7C9c,MAAO,CACL+gB,KADK,GAEL4rB,MAJJ,UAQMqf,GAAqD,CACzDlvC,MADyD,cAEzD9c,MAAO,CACL+gB,KADK,GAEL8hB,YAJJ,oBAQMopB,GAA+C,CACnDnvC,MADmD,QAEnDlR,MAAO,CAAC,GAFV,KAQMsgD,GAA8C,CAClDpvC,MADkD,MAElD9c,MAAO,CACL+gB,KADK,GAELmqC,gBAAiBG,GAJrB,KAQMc,GAAyD,CAC7DrvC,MAD6D,YAE7D9c,MAAO,CACLioC,aADK,EAELlnB,KAFK,GAGLmqC,gBAAiB,CAACG,GALtB,MASMe,GAAwD,CAC5DtvC,MAD4D,wBAE5DlR,MAAO,CAAC,GAFV,KAQMygD,GAA2C,CAC/CvvC,MAD+C,SAE/C9c,MAAO,CACL+gB,KADK,GAELmqC,gBAAiB,CAAE/uC,KAFd,YAGLonB,aAAc,mBAA4B3oB,EAA5B,QAIZ0xC,GAAsD,CAC1DxvC,MAD0D,eAE1D9c,MAAO,CACLioC,aADK,EAELlnB,KAFK,GAGLmqC,gBAAiB,CAAC,CAAE/uC,KAHf,aAILonB,aAAc,mBAA4B3oB,EAA5B,QAIZ2xC,GAAqD,CACzDzvC,MADyD,qBAEzDlR,MAAO,CAAC,GAFV,KAQa4gD,GAAoC,CAC/C/P,SAAU,CAAC,GAAD,eADL,KAYMgQ,GAA6C,CACxD,CACErN,aADF,SAEEp+C,MAHsD,WAKxD,CACEo+C,aADF,SAEEp+C,MAPsD,WASxD,CACEo+C,aADF,SAEEp+C,MAXsD,QAaxD,CACEo+C,aADF,SAEEp+C,MAfsD,WAiBxD,CACEo+C,aADF,SAEEp+C,MAnBG,WC/MM0rD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACEnO,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAqCsG,IAArC,WCDammD,GAAb,yLAEwB,CACpB3pC,KAHJ,gBAMoB,YAChB,WAAc,CAAEA,KAAhB,KAPJ,wDAWI,OACE,4BACM9iB,KADN,OAEE8iB,KAAM9iB,KAAKsF,MAFb,KAGEgV,SAAUta,KAJd,eAXJ,GAAwCsG,IAAxC,WCCaomD,GAAb,yLAEwB,CACpBpoC,MAAO,CACLuG,UADK,KAELC,QALN,iBASoB,YAChB,WAAc,CAAExG,MAAhB,KAVJ,wDAcI,OACE,4BACMtkB,KADN,OAEEgC,MAAO4B,GAFT,WAGE0gB,MAAOtkB,KAAKsF,MAHd,MAIEgV,SAAUta,KALd,eAdJ,GAA6CsG,IAA7C,WAyBM1C,GAAS8L,YAAkB,CAC/Bi9C,WAAY,CACVhgB,aAFJ,MC9BaigB,GAAb,8LAEuB,WACnB,OAAO,MAHX,wDAOI,OACE,sBACE5qD,MAAO4B,GADT,UAEEy6C,SAAU,CAAE9B,SAFd,IAGEv5B,WAAYhjB,KAHd,YAIE,sBAAQgC,MAAO4B,GAAf,mBACE,qBALJ,OAOE,sBAAQ5B,MAAO4B,GAAf,mBACE,qBATN,YAPJ,GAAyC0C,IAAzC,WAuBa1C,GAAS8L,YAAkB,CACtCb,UAAW,CACTq9B,QAFoC,GAItC2gB,kBAAmB,CACjBrsC,gBALG,KChBMssC,GAAb,yLAEwB,CACpBxoC,MAAO,CACLuG,UADK,KAELC,QALN,kBASqB,YACjB,WAAc,CAAExG,MAAhB,KAVJ,wDAcI,OACE,4BACMtkB,KADN,OAEEskB,MAAOtkB,KAAKsF,MAFd,MAGEgV,SAAUta,KAJd,gBAdJ,GAA2CsG,IAA3C,WCRM48C,GAAY,IAAlB,KAEMC,GAAyC,CAC7CrjD,MAAO,CACL0oB,IAAK,IAAIf,KAAKy7B,iBAAT,KADA,GAEL73B,IAAK,IAAI5D,KAAKy7B,iBAAT,KAHT,KAOMwF,GAA2C,CAC/C9rC,MAD+C,UAE/ClR,MAAO,CAFT,KAOa03C,GAAsC,CACjD7G,SAAU,CADL,KChBMwQ,GAAb,8LAEuB,YACnB,OACE,0BAAuB/qD,MAAO,CAAC+P,KAA/B,IADF,KAHJ,wDASI,OACE,sBACEssC,SADF,GAEEr7B,WAAYhjB,KAHhB,iBATJ,GAA4CsG,IAA5C,WCCa0mD,YAAe,GAC1B,OACE,qBADF,ICWWC,cACX,OACE,4BACE,sBAAMjrD,MAAO4B,GAAb,UAPmB,sMAcZspD,cACX,OACE,sBACEtwC,MADF,QAEEiZ,YAHJ,iBA0BWs3B,cACX,OACE,wBAAMnrD,MAAO4B,GAAb,iBACE,sBACEuN,KADF,QAEEnP,MAAO4B,GAFT,eADF,UAME,sBACEuN,KADF,QAEEwN,OAFF,SAPJ,YAgBI/a,GAAS8L,YAAkB,CAC/B09C,SAAU,CACRhxC,SADQ,GAERC,WAFQ,GAGRE,MAJ6B,QAM/B8wC,oBAAqB,CACnB5sC,kBADmB,GAEnBD,gBAR6B,IAU/B8sC,WAAY,CACV/wC,MAX6B,WAa/BgxC,YAAa,CACXz9C,MADW,OAEXC,OAf6B,KAiB/BmxC,gBAAiB,CACf7qC,cADe,MAEfD,eAnB6B,YAqB/Bo3C,cAAe,CACb7b,YAtBJ,MC3DM8b,GAAqC,CACzC3tD,MAAO,CACL8N,SAAU,qBAFd,QAMM86C,GAA2C,CAC/C9rC,MAD+C,UAE/ClR,MAAO,CAFT,KAOMgiD,GAAuC,CAC3C5tD,MAAO,CACL8N,SAAU,qBADL,MAELynB,OAHJ,KAOMs4B,GAA6C,CACjD/wC,MADiD,aAEjDlR,MAAO,CAFT,KAOMkiD,GAA0C,CAC9C9tD,MAAO,CACL8N,SAAU,qBADL,MAELynB,ODNSw4B,WACX,OACE,4BACE,wBACElrD,OAAQ,CAAE05C,IAzBlB,4EA0BQr6C,MAAO4B,GAHX,cAKE,wBAAM5B,MAAO4B,GAAb,qBACE,sBACE8gB,SADF,KAEE1iB,MAAO4B,GAFT,YAPN,cCSIkqD,GAAgD,CACpDlxC,MADoD,gBAEpDlR,MAAO,CAFT,KAOMqiD,GAAoC,CACxCjuD,MAAO,CACL8N,SAAU,qBADL,MAEL6nB,OAHJ,KAOMu4B,GAA0C,CAC9CpxC,MAD8C,SAE9ClR,MAAO,CAFT,KAOMuiD,GAA0C,CAC9CnuD,MAAO,CACL8N,SAAU,qBADL,MAELynB,OAFK,GAGLI,OAJJ,KAQMy4B,GAAgD,CACpDtxC,MADoD,kBAEpDlR,MAAO,CAFT,KAOayiD,GAAkC,CAC7C5R,SAAU,CAAC,GAAD,SADL,KAUM6R,GAA2C,CACtD,CACElP,aADF,aAEEp+C,MAHoD,WAKtD,CACEo+C,aADF,aAEEp+C,MAPoD,UAStD,CACEo+C,aADF,SAEEp+C,MAXoD,WAatD,CACEo+C,aADF,SAEEp+C,MAfoD,WAiBtD,CACEo+C,aADF,SAEEp+C,MAnBoD,QAqBtD,CACEo+C,aADF,SAEEp+C,MAvBoD,WAyBtD,CACEo+C,aADF,SAEEp+C,MA3BG,WClFMutD,GAAb,8LAEuB,YACnB,OACE,qBADF,IAHJ,wDASI,OACE,sBACEhQ,SADF,GAEEO,SAFF,GAGE57B,WAAYhjB,KAJhB,iBATJ,GAAmCsG,IAAnC,WCMagoD,GAAsB,CACjC,CAAEjuD,KAD+B,UAEjC,CAAEA,KAF+B,qBAGjC,CAAEA,KAH+B,UAIjC,CAAEA,KAJ+B,gBAKjC,CAAEA,KAL+B,YAMjC,CAAEA,KAN+B,QAOjC,CAAEA,KAP+B,kBAQjC,CAAEA,KAR+B,YASjC,CAAEA,KAT+B,cAUjC,CAAEA,KAV+B,UAWjC,CAAEA,KAX+B,QAYjC,CAAEA,KAZ+B,SAajC,CAAEA,KAb+B,UAcjC,CAAEA,KAd+B,QAejC,CAAEA,KAf+B,QAgBjC,CAAEA,KAhB+B,SAiBjC,CAAEA,KAjB+B,iBAkBjC,CAAEA,KAlB+B,WAmBjC,CAAEA,KAnB+B,SAoBjC,CAAEA,KApB+B,eAqBjC,CAAEA,KArB+B,UAsBjC,CAAEA,KAtB+B,WAuBjC,CAAEA,KAvB+B,YAwBjC,CAAEA,KAxB+B,QAyBjC,CAAEA,KAzB+B,UA0BjC,CAAEA,KA1B+B,WA2BjC,CAAEA,KA3B+B,kBA4BjC,CAAEA,KA5BG,WAiCDkuD,G,mLAEIC,kBAAoB,YAAoB,IAC7BC,EAAUH,GADkB,GAG7C,4BAA+BG,EAA/B,O,EAGMC,kBAAoB,YAC1B,OACE,2BAAMC,UAAWlrD,OAAjB,MACE,sBAAUmZ,MAAOnZ,OAFrB,S,EAOMmrD,qBAAuB,YAC7B,OACE,sBACEhyC,MAAOnZ,OADT,KAEEqL,QAAS,EAHb,qB,EAQMkU,WAAa,YACnB,OAAO6rC,YAAgB,CACrB5pD,QAAS,uBADY,GAErB6pD,IAAK,oBAFP,M,wDAOA,OACE,sBACE9sD,MAAOhC,KAAKF,MAAM0D,YADpB,UAEEqd,KAFF,GAGEmC,WAAYhjB,KAJhB,iB,GAjCqBsG,IAAMI,WA2ChBmB,KAAW,IAAY,kBAAuB,CAC3DgH,UAAW,CACTkD,KADS,EAETsD,gBAAiBxU,EAHiB,iCCvFzBkuD,cAA4B,OACvC,sBAAQ/sD,MAAO4B,GAAf,WACE,sBAAQjB,OAAQ,CAAE05C,IAFmB,oEAMnCz4C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAFJ,MCNa8iB,cAA6B,OACxC,sBAAQhtD,MAAO4B,GAAf,WACE,sBAAQjB,OAAQ,CAAE05C,IAFoB,oEAMpCz4C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAFJ,MCNa+iB,cAAqB,OAChC,sBAAQjtD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,KAEEuN,KAFF,OAGExO,OAAQ,CAAE05C,IAJd,kEAME,sBACEr6C,MAAO4B,GADT,KAEEuN,KAFF,QAGExO,OAAQ,CAAE05C,IATd,kEAWE,sBACEr6C,MAAO4B,GADT,KAEEuN,KAFF,SAGExO,OAAQ,CAAE05C,IAdd,kEAgBE,sBACEr6C,MAAO4B,GADT,KAEEuN,KAFF,QAGExO,OAAQ,CAAE05C,IAnBd,kEAqBE,sBACEr6C,MAAO4B,GADT,KAEEuN,KAFF,QAGExO,OAAQ,CAAE05C,IAzBkB,oEA8B5Bz4C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,IAK/B/F,KAAM,CACJwB,eANJ,KC9BagzC,cAAsB,OACjC,sBAAQltD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,KAEE6T,MAFF,QAGE9U,OAAQ,CAAE05C,IAJd,kEAME,sBACEr6C,MAAO4B,GADT,KAEE6T,MAFF,UAGE9U,OAAQ,CAAE05C,IATd,kEAWE,sBACEr6C,MAAO4B,GADT,KAEE6T,MAFF,SAGE9U,OAAQ,CAAE05C,IAfmB,oEAoB7Bz4C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,IAK/B/F,KAAM,CACJwB,eANJ,KCpBaizC,cAA8B,OACzC,sBAAQntD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,OAEEjB,OAAQ,CAAE05C,IAJ2B,oEASrCz4C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAF6B,IAI/BkjB,OAAQ,CACNt/C,MADM,GAENC,OAFM,GAGN4E,aAPJ,MCTa06C,GAAb,yLAEU,CACN90C,cAHJ,iBAMgB,YACZ,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,sBACEvY,MAAO4B,GADT,iBAEEiX,eAAgBjX,GAFlB,UAGE2W,cAAeva,KAAKsF,MAHtB,cAIEgV,SAAUta,KAJZ,aAKE,sBAAqB4c,MALvB,cAME,sBAAqBA,MAPzB,kBAXJ,GAA2DtW,IAA3D,WAwBM1C,GAAS8L,YAAkB,CAC/B4/C,iBAAkB,CAAEj6C,gBADW,SAE/BsF,UAAW,CAAEtF,gBAFf,WCzBak6C,GAAb,yLAEU,CACNh1C,cAHJ,iBAMgB,YACZ,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,sBACEA,cAAeva,KAAKsF,MADtB,cAEEgV,SAAUta,KAFZ,aAGE,sBAAqB4c,MAHvB,cAIE,sBAAqBA,MALzB,kBAXJ,GAAyDtW,IAAzD,WCFakpD,cAA2C,OACtD,sBACExtD,MAAO4B,GADT,IAEEiZ,WAAYjZ,GAFd,SAGEgZ,MAJoD,WAQlDhZ,GAAS8L,YAAkB,CAC/BioC,IAAK,CAAEtiC,gBADwB,WAE/Bo6C,SAAU,CAAElzC,MAFd,aCTamzC,cAAyC,OACpD,sBAAqB9yC,MAD+B,WCChD+yC,YAAgB,UACpB,wBACE3tD,MADF,EAEEW,OAAQ,CAAC05C,IAHS,gEAOTuT,cAAoD,OAC/D,sBACEhzC,MADF,YAEEJ,KAH6D,MCA3DmzC,YAAgB,UACpB,+BAAiBtvD,KADG,aAITwvD,cAAsC,OACjD,sBACEjzC,MADF,YAEEJ,KAH+C,MCL7CmzC,YAAgB,UACpB,+BAAiBtvD,KADG,aAIhBo8C,YAAe,UACnB,+BAAiBp8C,KADE,eAIRyvD,GAAb,yLAEU,CACNv1C,cAHJ,iBAMgB,YACZ,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,sBACEA,cAAeva,KAAKsF,MADtB,cAEEgV,SAAUta,KAFZ,aAGE,sBACE4c,MADF,YAEEJ,KALJ,KAOE,sBACEI,MADF,WAEEJ,KAVN,UAXJ,GAAuDlW,IAAvD,WCZaypD,GAAb,yLAEU,CACNx1C,cAHJ,iBAMgB,YACZ,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,sBACEhY,WADF,cAEEgY,cAAeva,KAAKsF,MAFtB,cAGEgV,SAAUta,KAHZ,aAIE,sBAAqB4c,MAJvB,cAKE,sBAAqBA,MANzB,kBAXJ,GAA8DtW,IAA9D,WCCa0pD,cAA4B,OACvC,sBAAQhuD,MAAO4B,GAAf,WACE,sBAAQ5B,MAAO4B,GAAf,OAA8BrB,WAA9B,UADF,UAEE,sBAAQP,MAAO4B,GAAf,OAA8BrB,WAA9B,WAFF,WAGE,sBAAQP,MAAO4B,GAAf,OAA8BrB,WAA9B,SAJqC,WAQnCqB,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/BnC,OAAQ,CACNpC,eADM,EAENjC,iBATJ,KCRag2C,cAAsB,OACjC,sBAAQjuD,MAAO4B,GAAf,WACE,sBAAQ5B,MAAO4B,GAAf,OAA8BrB,WAA9B,QAAiDoc,OAAjD,WADF,WAEE,sBAAQ3c,MAAO4B,GAAf,OAA8BrB,WAA9B,QAAiDoc,OAAjD,WAFF,WAGE,sBAAQ3c,MAAO4B,GAAf,OAA8BrB,WAA9B,QAAiDoc,OAAjD,QAHF,QAIE,sBAAQ3c,MAAO4B,GAAf,OAA8BrB,WAA9B,QAAiDoc,OAAjD,WAJF,WAKE,sBAAQ3c,MAAO4B,GAAf,OAA8BrB,WAA9B,QAAiDoc,OAAjD,UALF,UAME,sBAAQ3c,MAAO4B,GAAf,OAA8BrB,WAA9B,QAAiDoc,OAAjD,SAP+B,WAW7B/a,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/BnC,OAAQ,CACNpC,eADM,EAENjC,iBATJ,KCXai2C,cAAwB,OACnC,sBAAQluD,MAAO4B,GAAf,WACE,sBAAQ5B,MAAO4B,GAAf,OAA8BrB,WAA9B,UAAmDoc,OAAnD,WADF,WAEE,sBAAQ3c,MAAO4B,GAAf,OAA8BrB,WAA9B,UAAmDoc,OAAnD,WAFF,WAGE,sBAAQ3c,MAAO4B,GAAf,OAA8BrB,WAA9B,UAAmDoc,OAAnD,QAHF,QAIE,sBAAQ3c,MAAO4B,GAAf,OAA8BrB,WAA9B,UAAmDoc,OAAnD,WAJF,WAKE,sBAAQ3c,MAAO4B,GAAf,OAA8BrB,WAA9B,UAAmDoc,OAAnD,UALF,UAME,sBAAQ3c,MAAO4B,GAAf,OAA8BrB,WAA9B,UAAmDoc,OAAnD,SAPiC,WAW/B/a,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/BnC,OAAQ,CACNpC,eADM,EAENjC,iBATJ,KCLMkqC,YAAW,UACf,+BAAiB9jD,KADF,WAIJ8vD,cAAyB,OACpC,sBAAQnuD,MAAO4B,GAAf,WACE,sBAAQ5B,MAAO4B,GAAf,OAA8B+a,OAA9B,UAA+CnC,KAA/C,IADF,WAEE,sBAAQxa,MAAO4B,GAAf,OAA8B+a,OAA9B,UAA+CnC,KAA/C,IAFF,WAGE,sBAAQxa,MAAO4B,GAAf,OAA8B+a,OAA9B,SAA8CnC,KAHhD,KAIE,sBAAQxa,MAAO4B,GAAf,OAA8BrB,WAA9B,QAAiDoc,OAAjD,SAAiEnC,KAL/B,OAShC5Y,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/BnC,OAAQ,CACNpC,eADM,EAENjC,iBATJ,KCnBam2C,cAA4B,OACvC,sBAAQpuD,MAAO4B,GAAf,WACE,sBAAQ5B,MAAO4B,GAAf,QADF,UAEE,sBAAQ5B,MAAO4B,GAAf,OAA8BghB,UAA9B,GAHqC,cAOnChhB,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/BnC,OAAQ,CACNpC,eADM,EAENjC,iBATJ,KCPao2C,cAAqB,OAChC,sBAAQruD,MAAO4B,GAAf,WACE,sBAAQ5B,MAAO4B,GAAf,OAA8BuN,KAA9B,QADF,QAEE,sBAAQnP,MAAO4B,GAAf,OAA8BuN,KAA9B,SAFF,SAGE,sBAAQnP,MAAO4B,GAAf,OAA8BuN,KAA9B,UAHF,UAIE,sBAAQnP,MAAO4B,GAAf,OAA8BuN,KAA9B,SAJF,SAKE,sBAAQnP,MAAO4B,GAAf,OAA8BuN,KAA9B,SAN8B,WAU5BvN,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETF,WAFS,SAGTI,SAHS,OAITiK,gBAJS,EAKTC,kBAN6B,GAQ/BnC,OAAQ,CACNpC,eADM,EAENjC,iBAVJ,KCVaq2C,cAAuB,OAClC,sBAAQtuD,MAAO4B,GAAf,WACE,sBAAQ5B,MAAO4B,GAAf,OAA8B+a,OAA9B,WADF,WAEE,sBAAQ3c,MAAO4B,GAAf,OAA8B+a,OAA9B,WAFF,WAGE,sBAAQ3c,MAAO4B,GAAf,OAA8B+a,OAA9B,QAHF,QAIE,sBAAQ3c,MAAO4B,GAAf,OAA8B+a,OAA9B,WAJF,WAKE,sBAAQ3c,MAAO4B,GAAf,OAA8B+a,OAA9B,UALF,UAME,sBAAQ3c,MAAO4B,GAAf,OAA8B+a,OAA9B,SAPgC,WAW9B/a,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/BnC,OAAQ,CACNpC,eADM,EAENjC,iBATJ,KCVas2C,cAAgC,OAC3C,sBAAQvuD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,YAEErB,WAFF,UAGE,sBAAQP,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QANJ,MAQE,sBACE5B,MAAO4B,GADT,YAEErB,WAFF,WAGE,sBAAQP,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QAduC,QAmBvCA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,IAK/B+vC,YAAa,CACXt0C,eAN6B,GAQ/BoC,OAAQ,CACNvM,KATJ,KCpBa0+C,cAAmC,OAC9C,sBAAazuD,MAAO4B,GAApB,aACE,sBAAQ5B,MAAO4B,GAAf,QADF,KAEE,sBAAQ5B,MAAO4B,GAAf,QAFF,KAGE,sBAAQ5B,MAAO4B,GAAf,QAJ4C,OAQ1CA,GAAS8L,YAAkB,CAC/B8gD,YAAa,CACXE,OADW,GAEX/7C,aAH6B,GAK/B2J,OAAQ,CACNvM,KANJ,KCRa4+C,cAAiC,OAC5C,sBAAa3uD,MAAO4B,GAApB,WACE,sBAAQ5B,MAAO4B,GAAf,QADF,KAEE,sBAAQ5B,MAAO4B,GAAf,QAFF,KAGE,sBAAQ5B,MAAO4B,GAAf,QAJ0C,OAQxCA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT6hD,OAF6B,IAI/BpyC,OAAQ,CACNvM,KALJ,KCPa6+C,cAA0B,OACrC,sBAAQ5uD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,YAEEuN,KAFF,QAGE,sBAAQnP,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QANJ,MAQE,sBACE5B,MAAO4B,GADT,YAEEuN,KAFF,SAGE,sBAAQnP,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QAbJ,MAeE,sBACE5B,MAAO4B,GADT,YAEEuN,KAFF,UAGE,sBAAQnP,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QApBJ,MAsBE,sBACE5B,MAAO4B,GADT,YAEEuN,KAFF,SAGE,sBAAQnP,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QA3BJ,MA6BE,sBACE5B,MAAO4B,GADT,YAEEuN,KAFF,SAGE,sBAAQnP,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QAnCiC,QAwCjCA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,IAK/B+vC,YAAa,CACXt0C,eAN6B,GAQ/BoC,OAAQ,CACNvM,KATJ,KCxCa8+C,cAA4B,OACvC,sBAAQ7uD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,YAEE+a,OAFF,WAGE,sBAAQ3c,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QANJ,MAQE,sBACE5B,MAAO4B,GADT,YAEE+a,OAFF,WAGE,sBAAQ3c,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QAbJ,MAeE,sBACE5B,MAAO4B,GADT,YAEE+a,OAFF,QAGE,sBAAQ3c,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QApBJ,MAsBE,sBACE5B,MAAO4B,GADT,YAEE+a,OAFF,WAGE,sBAAQ3c,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QA3BJ,MA6BE,sBACE5B,MAAO4B,GADT,YAEE+a,OAFF,UAGE,sBAAQ3c,MAAO4B,GAAf,QAHF,KAIE,sBAAQ5B,MAAO4B,GAAf,QAJF,KAKE,sBAAQ5B,MAAO4B,GAAf,QAnCmC,QAwCnCA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAF6B,IAI/BskB,YAAa,CACX7jB,aAL6B,IAO/BruB,OAAQ,CACNvM,KARJ,KCzCa++C,GAAb,yLAEU,CACNhuC,KAAM,IAHV,iBAMa,YACT,WAAc,CAAEA,KAAhB,KAPJ,wDAWI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEE8tB,eAFF,EAGE9Y,SAAUta,KALhB,gBAXJ,GAAmDsG,IAAnD,WAuBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QADS,GAETvrB,UAHJ,OCvBMuiC,GAAM,IAAZ,KAEa6N,GAAb,yLAEU,CACNjuC,KAAM,IAHV,iBAMa,YACT,WAAc,CAAEA,KAAhB,KAPJ,wDAWI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACE4kB,IAAK,IAAIf,KAAKy7B,GAAT,cAA4BA,GAA5B,WADP,IAEE73B,IAAK,IAAI5D,KAAKy7B,GAAT,cAA4BA,cAA5B,EAFP,IAGEpgC,KAAM9iB,KAAKsF,MAHb,KAIEgV,SAAUta,KANhB,gBAXJ,GAA4CsG,IAA5C,WAwBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QADS,GAETvrB,UAHJ,OCtBaqwC,GAAb,yLAEU,CACNluC,KAAM,IAHV,iBAMa,YACT,WAAc,CAAEA,KAAhB,KAPJ,YAUc,kBAAGA,EAAH,cACV,wBACE9gB,MAAO,CAAC4B,GAAD,aAAsB5B,EAD/B,YAEE,sBAAMA,MAAOA,EAAb,SAA6B8gB,EAF/B,WAGE,sBAAM9gB,MAAO,CAACA,EAAD,KAAa4B,GAA1B,QACM,IAAMkf,EAAN,UAAuB/R,SAAS+R,EAAT/R,UAD7B,GAJQ,OAVd,wDAqBI,OACE,sBAAQ/O,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEgV,SAAUta,KAFZ,SAGEqzB,UAAWrzB,KALjB,iBArBJ,GAA+CsG,IAA/C,WAiCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QADS,GAETvrB,UAH6B,KAK/BswC,aAAc,CACZl/C,KADY,EAEZqE,eAFY,SAGZD,WAHY,SAIZse,YAT6B,GAW/B3zB,MAAO,CACLsb,SADK,GAELE,WAbJ,SCpCM6K,GAAO,CACXT,SAAU,CACRC,MAAO,CAAC,eAAK,eAAN,4DADC,gBAERC,KAAM,CAAC,qBAAM,qBAAP,oFAHG,uBAKXC,WAAY,CACVF,MAAO,CAAC,UAAK,UAAN,4FADG,YAEVC,KAAM,CAAC,eAAK,eAAN,6IAPV,wBAWasqC,GAAb,yLAEU,CACNpuC,KAAM,IAHV,oBAMgB,IAAI,GAAJ,KAA4B,CAAEqE,KAN9C,gBAQa,YACT,WAAc,CAAErE,KAAhB,KATJ,wDAaI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEskB,YAAa5pB,KAFf,YAGEsa,SAAUta,KALhB,gBAbJ,GAAkDsG,IAAlD,WAyBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QADS,GAETvrB,UAHJ,OCrCawwC,GAAb,yLAEU,CACNruC,KAAM,IAHV,iBAMa,YACT,WAAc,CAAEA,KAAhB,KAPJ,SAUW,YACP,OAAOA,gBAAP,IAA8BA,YAXlC,wDAeI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEgV,SAAUta,KAFZ,SAGEgF,OAAQhF,KALd,cAfJ,GAA4CsG,IAA5C,WA2BM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QADS,GAETvrB,UAHJ,OCpBaywC,GAAb,yLAEU,CACNtuC,KAAMs+B,QAHV,cAMgB,IANhB,cAQa,YACT,WAAc,CAAEt+B,KAAhB,KATJ,wDAaI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEskB,YAAa5pB,KAFf,YAGEsa,SAAUta,KALhB,gBAbJ,GAA4CsG,IAA5C,WAyBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QADS,GAETvrB,UAHJ,OChCa0wC,GAAb,yLAEU,CACNvuC,KAAM,IAHV,iBAMa,YACT,WAAc,CAAEA,KAAhB,KAPJ,wDAWI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEgV,SAAUta,KAJhB,gBAXJ,GAAiDsG,IAAjD,WAsBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QADS,GAETvrB,UAHJ,OCrBa2wC,GAAb,yLAEU,CACNxuC,KAAM,IAHV,oBAMgB,IAAI,GAAJ,KAA4B,CAAEkE,eAN9C,eAQa,YACT,WAAc,CAAElE,KAAhB,KATJ,wDAaI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEskB,YAAa5pB,KAFf,YAGEsa,SAAUta,KALhB,gBAbJ,GAAoDsG,IAApD,WAyBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QADS,GAETvrB,UAHJ,OC1Ba4wC,GAAb,yLAEU,CACNjtC,MAAO,CACLuG,UADK,KAELC,QALN,kBASa,YACT,WAAc,CAAExG,MAAhB,KAVJ,wDAcI,OACE,sBAAQtiB,MAAO4B,GAAf,WACE,sBACE0gB,MAAOtkB,KAAKsF,MADd,MAEEgV,SAAUta,KAJhB,gBAdJ,GAAsDsG,IAAtD,WAyBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QADS,GAET91B,eAFS,SAGTD,WAJJ,YChBaq7C,cACX,OACE,4BACE,wBACE7uD,OAAQ,CAAE05C,IANlB,4EAOQr6C,MAAO4B,GAHX,cAKE,wBAAM5B,MAAO4B,GAAb,qBACE,sBACE8gB,SADF,KAEE1iB,MAAO4B,GAFT,YAPN,YAiBW6tD,cAA2B,OACtC,sBAAQzvD,MAAO4B,GAAf,WACE,sBAAMyxB,OAAN,IACE,sBAAMrzB,MAAO4B,GAAb,UAzBmB,uMAgCnBA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,GAK/BixC,KAAM,CACJx1C,eAN6B,GAQ/BkxC,SAAU,CACR7wC,MAT6B,WAW/B8wC,oBAAqB,CACnB5sC,kBADmB,GAEnBD,gBAb6B,IAe/B8sC,WAAY,CACV/wC,MAhB6B,WAkB/BgxC,YAAa,CACXz9C,MADW,OAEXC,OApBJ,OChCM4hD,cAAS,OACb,sBACE/0C,MADF,QAEEiZ,YAHW,iBAOF+7B,cAAwB,OACnC,sBAAQ5vD,MAAO4B,GAAf,WACE,sBAAMyxB,OAAN,IACE,sBAAMrzB,MAAO4B,GAAb,UAbmB,uMAoBnBA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,GAK/BixC,KAAM,CACJx1C,eAN6B,GAQ/BkxC,SAAU,CACR7wC,MATJ,aCdMs1C,cACJ,OACE,wBAAM7vD,MAAO4B,GAAb,iBACE,sBACEuN,KADF,QAEEnP,MAAO4B,GAFT,eADF,UAME,sBACEuN,KADF,QAEEwN,OAFF,SAPJ,YAgBWmzC,cAAqB,OAChC,sBAAQ9vD,MAAO4B,GAAf,WACE,sBAAM6xB,OAAN,IACE,sBAAMzzB,MAAO4B,GAAb,UAvBmB,uMA8BnBA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,GAK/BixC,KAAM,CACJx1C,eAN6B,GAQ/BkxC,SAAU,CACR7wC,MAT6B,WAW/B2kC,gBAAiB,CACf7qC,cADe,MAEfD,eAb6B,YAe/Bo3C,cAAe,CACb7b,YAhBJ,MC1BMkgB,cACJ,OACE,wBAAM7vD,MAAO4B,GAAb,iBACE,sBACEuN,KADF,QAEEnP,MAAO4B,GAFT,eADF,UAME,sBACEuN,KADF,QAEEwN,OAFF,SAPJ,YAgBIgzC,cAAS,OACb,sBACE/0C,MADF,QAEEiZ,YAHW,iBAOFk8B,cAA2B,OACtC,sBAAQ/vD,MAAO4B,GAAf,WACE,sBACEyxB,OADF,GAEEI,OAFF,IAGE,sBAAMzzB,MAAO4B,GAAb,UAhCmB,uMAuCnBA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,GAK/BixC,KAAM,CACJx1C,eAN6B,GAQ/BkxC,SAAU,CACR7wC,MAT6B,WAW/B2kC,gBAAiB,CACf7qC,cADe,MAEfD,eAb6B,YAe/Bo3C,cAAe,CACb7b,YAhBJ,MCzCaqgB,cAA0B,OACrC,sBAAQhwD,MAAO4B,GAAf,WACE,0BACE,sBAAM5B,MAAO4B,GAAb,UANmB,uMAanBA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,GAK/BixC,KAAM,CACJx1C,eAN6B,GAQ/BkxC,SAAU,CACR7wC,MATJ,aCZM6wC,GAAmB,mMAGZ6E,GAAb,4LAEa,CAAC,UAAD,2BAFb,yBAUiB,kBACb,sBACEr1C,MADF,QAEEiZ,YAHW,iBAVjB,aAiBe,mBACX,sBACElX,OAAQlb,EADV,KAEEzB,MAAO4B,GAFT,KAGEyxB,OAAQ,EAHV,cAIE,sBAAMrzB,MAAO4B,GAAb,UALS,MAjBf,wDA6BI,OACE,sBACE5B,MAAO4B,GADT,UAEEid,KAAM7gB,KAFR,SAGEgjB,WAAYhjB,KAJhB,iBA7BJ,GAA0CsG,IAA1C,WAuCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTkB,OADS,IAETyQ,gBAFS,EAGTC,kBAJ6B,GAM/BixC,KAAM,CACJx1C,eAP6B,GAS/BkxC,SAAU,CACR7wC,MAVJ,aC5Ca21C,GAAb,yLAEU,CACNC,UAHJ,sBAMqB,YACjB,WAAc,CAAEA,SAAhB,KAPJ,wDAWI,OACE,sBAAQnwD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,SAEEqY,KAFF,SAGEyc,QAAS14B,KAAKsF,MAHhB,SAIEmzB,SAAUz4B,KALd,mBAOE,sBACEgC,MAAO4B,GADT,SAEEqY,KAFF,WAGE2I,UAVJ,IAYE,sBACE5iB,MAAO4B,GADT,SAEEqY,KAFF,mBAGE2I,UAHF,EAIE8T,SAjBN,SAXJ,GAAiDpyB,IAAjD,WAmCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/B2xC,SAAU,CACRl2C,eADQ,EAERjC,iBATJ,KChCao4C,GAAb,yLAEU,CACNC,gBADM,EAENC,gBAFM,EAGNC,aAHM,EAINC,gBAJM,EAKNC,eALM,EAMNC,cARJ,qBAWoB,YAChB,WAAc,CAAEL,eAAhB,KAZJ,kBAeoB,YAChB,WAAc,CAAEC,eAAhB,KAhBJ,eAmBiB,YACb,WAAc,CAAEC,YAAhB,KApBJ,kBAuBoB,YAChB,WAAc,CAAEC,eAAhB,KAxBJ,iBA2BmB,YACf,WAAc,CAAEC,cAAhB,KA5BJ,gBA+BkB,YACd,WAAc,CAAEC,aAAhB,KAhCJ,wDAoCI,OACE,sBAAQ3wD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,SAEE+a,OAFF,UAGE1C,KAHF,UAIEyc,QAAS14B,KAAKsF,MAJhB,eAKEmzB,SAAUz4B,KANd,kBAQE,sBACEgC,MAAO4B,GADT,SAEE+a,OAFF,UAGE1C,KAHF,UAIEyc,QAAS14B,KAAKsF,MAJhB,eAKEmzB,SAAUz4B,KAbd,kBAeE,sBACEgC,MAAO4B,GADT,SAEE+a,OAFF,OAGE1C,KAHF,OAIEyc,QAAS14B,KAAKsF,MAJhB,YAKEmzB,SAAUz4B,KApBd,eAsBE,sBACEgC,MAAO4B,GADT,SAEE+a,OAFF,UAGE1C,KAHF,UAIEyc,QAAS14B,KAAKsF,MAJhB,eAKEmzB,SAAUz4B,KA3Bd,kBA6BE,sBACEgC,MAAO4B,GADT,SAEE+a,OAFF,SAGE1C,KAHF,SAIEyc,QAAS14B,KAAKsF,MAJhB,cAKEmzB,SAAUz4B,KAlCd,iBAoCE,sBACEgC,MAAO4B,GADT,SAEE+a,OAFF,QAGE1C,KAHF,QAIEyc,QAAS14B,KAAKsF,MAJhB,aAKEmzB,SAAUz4B,KA1ChB,qBApCJ,GAA4CsG,IAA5C,WAqFM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/B2xC,SAAU,CACRl2C,eADQ,EAERjC,iBATJ,KC3Fa24C,GAAb,yLAEU,CACNl6B,SAHJ,qBAMoB,YAChB,WAAc,CAAEA,QAAhB,KAPJ,wDAWI,OACE,sBACE12B,MAAO4B,GADT,SAEE80B,QAAS14B,KAAKsF,MAFhB,QAGE2W,KAHF,kBAIEwc,SAAUz4B,KALd,sBAXJ,GAA0CsG,IAA1C,WAsBM1C,GAAS8L,YAAkB,CAC/B0iD,SAAU,CACR1B,OAFJ,KCtBamC,GAAb,yLAEU,CACNn6B,SAHJ,qBAMoB,YAChB,WAAc,CAAEA,QAAhB,KAPJ,wDAWI,OACE,sBACE12B,MAAO4B,GADT,SAEEga,UAAWha,GAFb,KAGE80B,QAAS14B,KAAKsF,MAHhB,QAIE2W,KAJF,kBAKEwc,SAAUz4B,KANd,sBAXJ,GAAmDsG,IAAnD,WAuBM1C,GAAS8L,YAAkB,CAC/B0iD,SAAU,CACR1B,OAF6B,GAI/Bz0C,KAAM,CACJM,MADI,UAEJH,SANJ,MCpBa02C,GAAb,yLAEU,CACNC,qBADM,EAENC,2BAFM,EAGNC,kBAHM,EAINC,kBAJM,EAKNC,kBAPJ,0BAUyB,YACrB,EACE,WAAc,CACZF,kBADY,EAEZC,kBAFY,EAGZC,kBAHF,IAMA,WAAc,CACZF,kBADY,EAEZC,kBAFY,EAGZC,kBAHF,IAMF,WAAc,CAAEJ,oBAAhB,KAxBJ,oBA2BsB,YAClB,WAAc,CAAEE,iBAAhB,GAA6C,EAA7C,gCA5BJ,oBA+BsB,YAClB,WAAc,CAAEC,iBAAhB,GAA6C,EAA7C,gCAhCJ,oBAmCsB,YAClB,WAAc,CAAEC,iBAAhB,GAA6C,EAA7C,gCApCJ,gCAuCkC,WAAO,IAAD,EAC6B,EAD7B,MAE9BtuD,EAAS,CAFqB,0DAG9BuuD,EAAcvuD,QAAY,uBAAU6V,KACpC24C,EAAexuD,SAAa,uBAAU6V,KAExC04C,IAAJ,EACE,WAAc,CACZL,qBADY,EAEZC,2BAFF,IAIUI,GAAL,EAKA,GACL,WAAc,CACZL,qBADY,EAEZC,2BAFF,IALA,WAAc,CACZD,qBADY,EAEZC,2BAFF,KAnDN,wDA+DY,IAAD,EAOHhzD,KAPG,MAEL+yD,EAFK,sBAGLC,EAHK,4BAILC,EAJK,mBAKLC,EALK,mBAMLC,EANK,mBASP,OACE,sBAAQnxD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,SAEEqY,KAFF,OAGEyc,QAHF,EAIEY,cAJF,EAKEb,SAAUz4B,KANd,uBAQE,sBACEic,KADF,aAEEja,MAAO,CAAC4B,GAAD,SAAkBA,GAF3B,WAGE80B,QAHF,EAIED,SAAUz4B,KAZd,oBAcE,sBACEic,KADF,aAEEja,MAAO,CAAC4B,GAAD,SAAkBA,GAF3B,WAGE80B,QAHF,EAIED,SAAUz4B,KAlBd,oBAoBE,sBACEic,KADF,aAEEja,MAAO,CAAC4B,GAAD,SAAkBA,GAF3B,WAGE80B,QAHF,EAIED,SAAUz4B,KAzBhB,yBAxEJ,GAAmDsG,IAAnD,WAwGa1C,GAAS8L,YAAkB,CACtCb,UAAW,CACT2R,gBADS,EAETC,kBAHoC,GAKtC2xC,SAAU,CACRl2C,eANoC,GAQtCo3C,UAAW,CACTr5C,iBATG,KCxGMs5C,GAAb,yLAEU,CACNzwC,KAAM,IAHV,iBAMa,YACT,WAAc,CAAEA,KAAhB,KAPJ,wDAWI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEE8tB,eAFF,EAGE9Y,SAAUta,KALhB,gBAXJ,GAAqDsG,IAArD,WAuBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UADS,IAETurB,QAHJ,MCnBasnB,GAAb,yLAEU,CACN1wC,KAAM,IAHV,iBAMa,YACT,WAAc,CAAEA,KAAhB,KAPJ,YAUc,kBAAGA,EAAH,cACV,wBACE9gB,MAAO,CAAC4B,GAAD,aAAsB5B,EAD/B,YAEE,sBAAMA,MAAOA,EAAb,SAA6B8gB,EAF/B,WAGE,sBAAM9gB,MAAO,CAACA,EAAD,KAAa4B,GAA1B,QACM,IAAMkf,EAAN,UAAuB/R,SAAS+R,EAAT/R,UAD7B,GAJQ,OAVd,wDAqBI,OACE,sBAAQ/O,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEgV,SAAUta,KAFZ,SAGEqzB,UAAWrzB,KALjB,iBArBJ,GAAiDsG,IAAjD,WAiCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UADS,IAETurB,QAH6B,IAK/B+kB,aAAc,CACZl/C,KADY,EAEZqE,eAFY,SAGZD,WAHY,SAIZse,YAT6B,GAW/B3zB,MAAO,CACLsb,SADK,GAELE,WAbJ,SCrCam3C,GAAb,yLAEU,CACN3wC,KAAM,IAHV,iBAMa,YACT,WAAc,CAAEA,KAAhB,KAPJ,SAUW,YACP,OAAOA,gBAAP,IAA8BA,YAXlC,wDAeI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEN,OAAQhF,KAFV,OAGEsa,SAAUta,KALhB,gBAfJ,GAA8CsG,IAA9C,WA2BM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UADS,IAETurB,QAHJ,MC1BM/kB,GAAO,CACXT,SAAU,CACRC,MAAO,CAAC,eAAK,eAAN,4DADC,gBAERC,KAAM,CAAC,qBAAM,qBAAP,oFAHG,uBAKXC,WAAY,CACVF,MAAO,CAAC,UAAK,UAAN,4FADG,YAEVC,KAAM,CAAC,eAAK,eAAN,6IAPV,wBAWa8sC,GAAb,yLAEU,CACN5wC,KAAM,IAHV,oBAMgB,IAAI,GAAJ,KANhB,eAQa,YACT,WAAc,CAAEA,KAAhB,KATJ,wDAaI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEskB,YAAa5pB,KAFf,YAGEsa,SAAUta,KALhB,gBAbJ,GAAoDsG,IAApD,WAyBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UADS,IAETurB,QAHJ,MC9BaynB,GAAb,+LAEgB,IAFhB,WAIU,CACN7wC,KAAMs+B,QALV,WAQa,YACT,WAAc,CAAEt+B,KAAhB,KATJ,wDAaI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEskB,YAAa5pB,KAFf,YAGEsa,SAAUta,KALhB,gBAbJ,GAA8CsG,IAA9C,WAyBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UADS,IAETurB,QAHJ,MChCa0nB,GAAb,yLAEU,CACN9wC,KAAM,IAHV,iBAMa,YACT,WAAc,CAAEA,KAAhB,KAPJ,wDAWI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEgV,SAAUta,KAJhB,gBAXJ,GAAmDsG,IAAnD,WAsBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UADS,IAETurB,QAHJ,MChBM2nB,YAAe,UACnB,+BAAiBxzD,KADE,eAIRyzD,GAAb,yLAEU,CACNhxC,KAAM,IAHV,iBAMa,YACT,WAAc,CAAEA,KAAhB,KAPJ,wDAWI,OACE,sBAAQ9gB,MAAO4B,GAAf,WACE,sBACEkf,KAAM9iB,KAAKsF,MADb,KAEEkX,KAFF,GAGElC,SAAUta,KALhB,gBAXJ,GAAgDsG,IAAhD,WAuBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UADS,IAETurB,QAHJ,MCjCa6nB,GAAb,yLAEU,CACNzvC,MAAO,CACLuG,UADK,KAELC,QALN,kBASa,YACT,WAAc,CAAExG,MAAhB,KAVJ,wDAcI,OACE,sBAAQtiB,MAAO4B,GAAf,WACE,sBACE0gB,MAAOtkB,KAAKsF,MADd,MAEEgV,SAAUta,KAJhB,gBAdJ,GAAwDsG,IAAxD,WAyBM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UADS,IAETurB,QAHJ,MCxBa8nB,GAAb,8LAEe,CACX,CAAEp3C,MADS,aAEX,CAAEA,MAFS,YAGX,CAAEA,MAHS,YAIX,CAAEA,MAJS,YAKX,CAAEA,MALS,aAMX,CAAEA,MARN,yBAWkB,cAXlB,wDAkBI,OACE,sBAAQ5a,MAAO4B,GAAf,WACE,uCACE,sBACEid,KAAM7gB,KADR,WAEEsa,SAAUta,KALlB,sBAlBJ,GAA+CsG,IAA/C,WA+BM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAFJ,MCzBMyjB,YAAgB,UACpB,+BAAiBtvD,KADG,aAIhB4zD,YAAe,UACnB,+BAAiB5zD,KADE,YAIfo8C,YAAe,UACnB,+BAAiBp8C,KADE,eAIR6zD,GAAb,8LAEe,CACX,CAAEt3C,MAAF,YAAsBJ,KADX,IAEX,CAAEI,MAAF,WAAqBJ,KAFV,IAGX,CAAEI,MAAF,WAAqBJ,KALzB,qBAQkB,cARlB,wDAeI,OACE,sBAAQxa,MAAO4B,GAAf,WACE,uCACE,sBACEid,KAAM7gB,KADR,WAEEsa,SAAUta,KALlB,sBAfJ,GAA6CsG,IAA7C,WA4BM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAFJ,MCvCMioB,YAAa,UACjB,+BAAiB9zD,KADA,aAIN+zD,GAAb,8LAEe,CACX,CAAEx3C,MADS,aAEX,CAAEA,MAFS,YAGX,CAAEA,MAHS,YAIX,CAAEA,MAJS,YAKX,CAAEA,MALS,aAMX,CAAEA,MARN,yBAWkB,cAXlB,sBAiBwB,kBACpB,sBACEA,MADF,WAEEiZ,YAFF,yBAGErZ,KAJkB,MAjBxB,wDA0BI,OACE,sBAAQxa,MAAO4B,GAAf,WACE,uCACE,sBACEid,KAAM7gB,KADR,WAEEq1B,OAAQr1B,KAFV,oBAGEsa,SAAUta,KANlB,sBA1BJ,GAA0CsG,IAA1C,WAwCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAFJ,MCvDamoB,cAA0C,OACrD,sBACEryD,MAAO4B,GADT,aAEEiZ,WAAYjZ,GAFd,kBAGE2yB,iBAAkB3yB,GAHpB,wBAIEgZ,MAJF,WAKEiZ,YANmD,4BAUjDjyB,GAAS8L,YAAkB,CAC/B4kD,aAAc,CAAEj/C,gBADe,SAE/Bk/C,kBAAmB,CAAEh4C,MAFU,SAG/Bi4C,wBAAyB,CAAEj4C,MAH7B,UCHMk4C,YAAc,UAClB,+BAAiBp0D,KADC,aAIPq0D,cAAwC,OACnD,sBACE93C,MADF,WAEEiZ,YAFF,yBAGErZ,KAJiD,MCH/Cm4C,YAAa,UACjB,+BAAiBt0D,KADA,cAIbu0D,YAAe,UACnB,sBAAQ5yD,MAAR,EAAsBwa,KADH,MAIRq4C,cAA0C,OACrD,sBACEj4C,MADF,WAEEiZ,YAFF,yBAGEqB,UAJmD,MChBjDu9B,YAAc,UAClB,wBAAOzyD,MAAP,EAAqBW,OAAQ,CAAC05C,IADZ,iEAIPyY,cAAmD,OAC9D,sBACEl4C,MADF,WAEEiZ,YAFF,yBAGErZ,KAJ4D,MCCnDu4C,GAAb,8LAEe,CACX,CAAEn4C,MADS,aAEX,CAAEA,MAFS,YAGX,CAAEA,MAHS,YAIX,CAAEA,MAJS,YAKX,CAAEA,MALS,aAMX,CAAEA,MARN,yBAWkB,cAXlB,eAiBiB,kBACb,sBAAoBiZ,YADP,mBAjBjB,wDAsBI,OACE,sBAAQ7zB,MAAO4B,GAAf,WACE,uCACE,sBACEid,KAAM7gB,KADR,WAEEy1B,OAAQz1B,KAFV,aAGEsa,SAAUta,KANlB,sBAtBJ,GAA0CsG,IAA1C,WAoCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAFJ,MCpCa8oB,GAAb,8LAEe,CACX,CAAEp4C,MADS,aAEX,CAAEA,MAFS,YAGX,CAAEA,MAHS,YAIX,CAAEA,MAJS,YAKX,CAAEA,MALS,aAMX,CAAEA,MARN,yBAWkB,cAXlB,eAiBiB,kBACb,sBAAQysC,MAAR,KACE,sBAAM3kC,SAAN,MAFW,mBAjBjB,wDAwBI,OACE,sBAAQ1iB,MAAO4B,GAAf,WACE,uCACE,sBACEid,KAAM7gB,KADR,WAEEq1B,OAAQr1B,KAFV,aAGEsa,SAAUta,KANlB,sBAxBJ,GAAgDsG,IAAhD,WAsCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAFJ,MCtCM+oB,YAAoB,UACxB,sBAAQjzD,MAAO,CAACA,EAAO4B,GAAvB,QACE,0BAFsB,SAMbsxD,GAAb,8LAEe,CACX,CAAEt4C,MADS,aAEX,CAAEA,MAAF,WAAqBsa,UAFV,IAGX,CAAEta,MAHS,YAIX,CAAEA,MANN,6BASkB,cATlB,wDAgBI,OACE,sBAAQ5a,MAAO4B,GAAf,WACE,uCACE,sBACEid,KAAM7gB,KADR,WAEEsa,SAAUta,KALlB,sBAhBJ,GAAyDsG,IAAzD,WA6BM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAF6B,IAI/BipB,MAAO,CACL/+C,eADK,SAELD,WAFK,SAGLpG,OAHK,GAILD,MAJK,GAKL2Q,kBALK,GAML9L,aANK,GAOLU,gBAXJ,YCjCa+/C,cAA0B,OACrC,sBAAM/0D,KAAN,OAAkByP,MAAlB,GAA6BC,OAA7B,GAAyC5P,KADJ,aCA1Bk1D,GAAb,yLAEU,CACNC,OAHJ,aAMY,WACR,IAAMA,GAAS,QAAf,MACA,WAAc,CAAEA,MAAhB,KARJ,aAWe,mBACX,0BACEj1D,KAAM,sBADR,iBADW,KAXf,wDAmBI,OACE,sBACEmc,KAAMxc,KADR,WAEE8O,QAAS9O,KAFX,SADF,YAnBJ,GAA8CsG,IAA9C,WCAaivD,GAAb,yLAEU,CACNz0D,MADM,GAENwoD,iBAJJ,kBAOiB,YACb,WAAc,CAAExoD,MAAhB,KARJ,cAWgB,WACZ,IAAMwoD,GAAmB,QAAzB,gBACA,WAAc,CAAEA,gBAAhB,KAbJ,aAgBe,mBACX,+BAEEjpD,KAAO,QAAD,gBAHG,UAGH,UAnBZ,wDAwBI,OACE,sBACEsiC,YADF,WAEE7hC,MAAOd,KAAKsF,MAFd,MAGEgkD,gBAAiBtpD,KAAKsF,MAHxB,gBAIEw7C,aAAc9gD,KAJhB,aAKEwc,KAAMxc,KALR,WAMEuwC,YAAavwC,KAPjB,kBAxBJ,GAA6CsG,IAA7C,WCPMkvD,YAAiB,UACrB,wBACExzD,MADF,EAEEW,OAAQ,CAAE05C,IAHS,yEAOVoZ,YAA6B,UACxC,sBAAQj5C,KAAR,IADwC,wBCA7Bk5C,GAAb,2LAEYpvD,IAFZ,sBAIY,WACR,oCALJ,aAQe,mBACX,+BAEEe,IAAK,EAFP,QAGEhH,KAHF,OAIE4S,UALS,YARf,wDAkBI,OACE,sBACEuJ,KAAMxc,KADR,WAEE8O,QAAS9O,KAFX,SADF,uBAlBJ,GAA2CsG,IAA3C,WCAaqvD,GAAb,2LAEYrvD,IAFZ,sBAIY,WACR,oCALJ,aAQe,mBACX,+BAEEe,IAAK,EAFP,QAGEhH,KAHF,OAIE4S,UAJF,QAKEg8B,gBAAiB,CAAE18B,QANV,OARf,wDAmBI,OACE,sBACEiK,KAAMxc,KADR,WAEE8O,QAAS9O,KAFX,SADF,uBAnBJ,GAAmDsG,IAAnD,WCHasvD,YAA4B,UACvC,sBACEv1D,KADF,SAEEyP,MAFF,GAGEC,OAHF,GAIE5P,KALqC,aCJ5B01D,GAAb,yLAEU,CACNC,WAHJ,mBAMiB,YACb,WAAc,CAAEh1D,MAAhB,KAPJ,wDAWI,OACE,sBACEA,MAAOd,KAAKsF,MADd,WAEEq9B,YAFF,kBAGE3gC,MAAO4B,GAHT,MAIEga,UAAWha,GAJb,UAKE6nC,WAAY7nC,GALd,WAMEouC,iBAAkBpuC,GANpB,aAOEk9C,aAAc9gD,KAPhB,aAQEysC,MARF,QASEwF,QAVJ,gBAXJ,GAAgD3rC,IAAhD,WA2BM1C,GAAS8L,YAAkB,CAC/BqmD,MAAO,CAAEphD,aADsB,IAE/BqhD,UAAW,CAAEz5C,MAFkB,WAG/B05C,WAAY,CAAE15C,MAHiB,WAI/B25C,aAAc,CAAE35C,MAJlB,aCxBa45C,GAAb,yLAEU,CACNr1D,MAHJ,mBAMiB,YACb,WAAc,CAAEA,MAAhB,KAPJ,wDAWI,OACE,sBAAQkB,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,MAEE9C,MAAOd,KAAKsF,MAFd,MAGEw7C,aAAc9gD,KAHhB,aAIE2iC,YALJ,WAOE,sBACE3gC,MAAO4B,GADT,MAEEghB,UAFF,EAGE+d,YAXN,kBAXJ,GAA8Cr8B,IAA9C,WA6BM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETmK,gBAFS,EAGTC,kBAJ6B,GAM/Bs1C,MAAO,CACLhkD,KADK,EAELkI,iBARJ,KC7Bam8C,GAAb,yLAEU,CACNC,WADM,GAENC,YAFM,GAGNC,WALJ,wBAQsB,YAClB,WAAc,CAAEF,WAAhB,KATJ,qBAYuB,YACnB,WAAc,CAAEC,YAAhB,KAbJ,oBAgBsB,YAClB,WAAc,CAAEC,WAAhB,KAjBJ,wDAqBI,OACE,sBAAQv0D,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,MAEEuN,KAFF,QAGEwxB,YAHF,QAIE7hC,MAAOd,KAAKsF,MAJd,WAKEw7C,aAAc9gD,KANlB,oBAQE,sBACEgC,MAAO4B,GADT,MAEEuN,KAFF,SAGEwxB,YAHF,SAIE7hC,MAAOd,KAAKsF,MAJd,YAKEw7C,aAAc9gD,KAblB,qBAeE,sBACEgC,MAAO4B,GADT,MAEEuN,KAFF,QAGEwxB,YAHF,QAIE7hC,MAAOd,KAAKsF,MAJd,WAKEw7C,aAAc9gD,KArBpB,yBArBJ,GAAuCsG,IAAvC,WAiDM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,GAK/Bs1C,MAAO,CACL75C,eANJ,KCjDas6C,GAAb,yLAEU,CACNC,aADM,GAENC,aAFM,GAGNC,UAHM,GAINC,aAJM,GAKNC,YAPJ,0BAUwB,YACpB,WAAc,CAAEJ,aAAhB,KAXJ,sBAcwB,YACpB,WAAc,CAAEC,aAAhB,KAfJ,mBAkBqB,YACjB,WAAc,CAAEC,UAAhB,KAnBJ,sBAsBwB,YACpB,WAAc,CAAEC,aAAhB,KAvBJ,qBA0BuB,YACnB,WAAc,CAAEC,YAAhB,KA3BJ,wDA+BI,OACE,sBAAQ70D,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,MAEE+a,OAFF,UAGEgkB,YAHF,UAIE7hC,MAAOd,KAAKsF,MAJd,aAKEw7C,aAAc9gD,KANlB,sBAQE,sBACEgC,MAAO4B,GADT,MAEE+a,OAFF,UAGEgkB,YAHF,UAIE7hC,MAAOd,KAAKsF,MAJd,aAKEw7C,aAAc9gD,KAblB,sBAeE,sBACEgC,MAAO4B,GADT,MAEE+a,OAFF,OAGEgkB,YAHF,OAIE7hC,MAAOd,KAAKsF,MAJd,UAKEw7C,aAAc9gD,KApBlB,mBAsBE,sBACEgC,MAAO4B,GADT,MAEE+a,OAFF,UAGEgkB,YAHF,UAIE7hC,MAAOd,KAAKsF,MAJd,aAKEw7C,aAAc9gD,KA3BlB,sBA6BE,sBACEgC,MAAO4B,GADT,MAEE+a,OAFF,SAGEgkB,YAHF,SAIE7hC,MAAOd,KAAKsF,MAJd,YAKEw7C,aAAc9gD,KAnCpB,0BA/BJ,GAAyCsG,IAAzC,WAyEM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT2R,gBADS,EAETC,kBAH6B,GAK/Bs1C,MAAO,CACL75C,eANJ,KC7Ea46C,GAAb,yLAEU,CACNh2D,MAHJ,mBAMiB,YACb,WAAc,CAAEA,MAAhB,KAPJ,eAUiB,WACb,OAAO,sBAAP,GAXJ,wDAeI,IAAMi2D,EAAoB/2D,KAA1B,eACA,OACE,sBACE2iC,YADF,kBAEEhkB,OAAQo4C,EAAiB,UAF3B,SAGE9kB,QAAS8kB,EAAiB,GAH5B,gBAIEj2D,MAAOd,KAAKsF,MAJd,MAKEw7C,aAAc9gD,KANlB,mBAhBJ,GAA8CsG,IAA9C,WCKa0wD,GAAb,yLAEU,CACNl2D,MADM,GAENwoD,iBAJJ,kBAOiB,YACb,WAAc,CAAExoD,MAAhB,KARJ,cAWgB,WACZ,IAAMwoD,GAAmB,QAAzB,gBACA,WAAc,CAAEA,gBAAhB,KAbJ,aAgBe,YACX,IAAM7I,EAAW,kCAAjB,MACA,OACE,+BAAiBpgD,KADnB,MAlBJ,wDAwBI,OACE,sBACES,MAAOd,KAAKsF,MADd,MAEEq9B,YAFF,kBAGEnmB,KAAMxc,KAHR,WAIEspD,gBAAiBtpD,KAAKsF,MAJxB,gBAKEirC,YAAavwC,KALf,YAME8gD,aAAc9gD,KAPlB,mBAxBJ,GAA2CsG,IAA3C,WCCa2wD,GAAb,yLAEU,CACNn2D,MAHJ,mBAMiB,YACb,WAAc,CAAEA,MAAhB,KAPJ,aAUe,YACX,OACE,wBACEkB,MADF,EAEEW,OAAQ,CAAC05C,IAHb,iEAXJ,wDAoBI,OACE,sBACEv7C,MAAOd,KAAKsF,MADd,MAEEq9B,YAFF,kBAGEnmB,KAAMxc,KAHR,WAIEspD,iBAJF,EAKExI,aAAc9gD,KANlB,mBApBJ,GAAyDsG,IAAzD,WCNa4wD,GAAb,yLAEU,CACNp2D,MAHJ,mBAMiB,YACb,WAAc,CAAEA,MAAhB,KAPJ,wDAWI,OACE,sBACE2rC,MADF,QAEE9J,YAFF,kBAGE7hC,MAAOd,KAAKsF,MAHd,MAIEw7C,aAAc9gD,KALlB,mBAXJ,GAA4CsG,IAA5C,WCIa6wD,cAEX,OACE,sBAAQn1D,MAAO4B,GAAf,WACE,0BAFJ,wCAOIA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAFJ,MCTakrB,cAEX,OACE,sBAAQp1D,MAAO4B,GAAf,UAAiCylD,MAAjC,KACE,sBAAQrnD,MAAO4B,GAAf,UAAiCylD,MAAjC,KACE,sBAAQrnD,MAAO4B,GAAf,UAAiCylD,MAAjC,KACE,sBAAQrnD,MAAO,CAAC4B,GAAD,UAAmBA,GAAlC,mBACE,0BALV,2CAcIA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAF6B,IAI/B7pB,iBAAkB,CAChBjM,eADgB,SAEhBD,WANJ,YChBakhD,cAEX,OACE,sBAAQr1D,MAAO,CAAC4B,GAAD,UAAmBA,GAAlC,2BACE,0BAFJ,wCAOIA,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAF6B,IAI/BorB,yBAA0B,CACxBv/C,YADwB,MAExBL,YAFwB,EAGxB/C,aAHwB,EAIxBwB,WAJwB,SAKxBC,eATJ,YCCMmhD,GAAc,CAClB36C,MADkB,iBAElBiZ,YAFF,wBAKa2hC,cAEX,IAAM32C,EAAO,IAAItP,MAAM,GAAGpR,KAA1B,IAEMs3D,WAAsB,UAC1B,sBAAQz1D,MAAR,GAD0B,WAItB01D,WAAiB,UACrB,+BAAiBr3D,KADI,aAavB,OACE,sBACE2B,MAAO4B,GADT,KAEEid,KAFF,EAGEmC,WAbEA,SAAa,OAAGtI,EAAH,OAASrJ,EAAT,eACjB,sBACEuL,MAAUlC,EAAL,WAAmBrJ,EAD1B,GAEEwkB,YAAgBnb,EAAL,iBAAyBrJ,EAFtC,GAGEmL,KAHF,EAIE0a,UALe,QAkBftzB,GAAS8L,YAAkB,CAC/BioD,KAAM,CACJ5nD,OAFJ,OC7CMwnD,GAAc,CAClB36C,MADkB,iBAElBiZ,YAFF,wBAKa+hC,YAA4B,GAEvC,IAAM/2C,EAAO,IAAItP,MAAM,GAAGpR,KAA1B,IASA,OACE,sBACE03D,sBAAuBj0D,GADzB,iBAEEid,KAFF,EAGEmC,WAXEA,SAAa,OAAGtI,EAAH,OAASrJ,EAAT,eACjB,sBACEuL,MAAUlC,EAAL,WAAmBrJ,EAD1B,GAEEwkB,YAAgBnb,EAAL,iBAAyBrJ,EAHrB,SAgBfzN,GAAS8L,YAAkB,CAC/B2S,iBAAkB,CAAE5B,kBADtB,KC5Baq3C,YAAgC,UAC3C,sBACE91D,MAAO4B,GADT,SAEEiZ,WAAYjZ,GAFd,cAGE2yB,iBAAkB3yB,GAHpB,oBAIEgZ,MAJF,QAKEiZ,YANyC,iBAUvCjyB,GAAS8L,YAAkB,CAC/BqoD,SAAU,CAAEpjD,aADmB,GAE/BqjD,cAAe,CAAEz7C,MAFc,WAG/B07C,oBAAqB,CAAE17C,MAHzB,aCXa27C,YAA8B,UACzC,sBAAUt7C,MAD+B,WCG9Bu7C,GAAb,yLAEU,CACNz/B,SAHJ,6BAM4B,YACxB,IAAMA,GAAW,QAAjB,QACA,WAAc,CAAEA,QAAhB,KARJ,kBAWoB,qBAChB,sBACE12B,MADF,EAEE02B,QAAS,QAFX,QAGED,SAAU,kBAAM,0BAAN,OAfhB,wDAoBI,OACE,sBACE7b,MADF,QAEEiZ,YAFF,cAGEqB,UAAWl3B,KAJf,sBApBJ,GAAmDsG,IAAnD,WCFM8xD,YAAiB,UACrB,wBACEp2D,MADF,EAEEW,OAAQ,CAAE05C,IAHS,8DAOVgc,YAAmC,UAC9C,sBACEz7C,MADF,QAEEiZ,YAFF,cAGErZ,KAJ4C,MCA1C2nC,YAAW,UACf,+BAAiB9jD,KADF,WAIJi4D,YAA2B,UACtC,sBACE17C,MADF,QAEEiZ,YAFF,cAGErZ,KAJoC,MCRlC+6C,GAAc,CAClB36C,MADF,QAIa27C,YAA0B,GAErC,IAAM13C,EAAO,IAAItP,MAAM,GAAGpR,KAA1B,IAMA,OACE,sBACE6B,MAAO4B,GADT,KAEEid,KAFF,EAGEmC,WAREA,SAAa,OAAGtI,EAAH,OAASrJ,EAAT,eACjB,sBAAUuL,MAAUlC,EAAL,WAAmBrJ,EADjB,SAafzN,GAAS8L,YAAkB,CAC/BioD,KAAM,CACJ5nD,OAFJ,OCzBayoD,GAAb,yLAEU,CACNj+C,cAHJ,aAMS,CACL,CAAEqC,MADG,UAEL,CAAEA,MAAF,SAAmBgI,UAFd,GAGL,CAAEhI,MAHG,UAIL,CAAEA,MAVN,sBAaa,YACT,WAAc,CAAErC,cAAhB,KAdJ,wDAkBI,OACE,sBACEsG,KAAM7gB,KADR,KAEEua,cAAeva,KAAKsF,MAFtB,cAGEgV,SAAUta,KAJd,eAlBJ,GAA6CsG,IAA7C,WCAamyD,GAAb,yLAEU,CACNl+C,cAHJ,aAMS,CACL,CAAEqC,MADG,UAEL,CACEA,MADF,SAEE2oB,SAAU,CACR,CAAE3oB,MADM,cAER,CAAEA,MAND,gBASL,CAAEA,MATG,UAUL,CAAEA,MAhBN,sBAmBa,YACT,WAAc,CAAErC,cAAhB,KApBJ,wDAwBI,OACE,sBACEsG,KAAM7gB,KADR,KAEEua,cAAeva,KAAKsF,MAFtB,cAGEgV,SAAUta,KAJd,eAxBJ,GAA6CsG,IAA7C,WCAaoyD,GAAb,yLAEU,CACNn+C,cAHJ,aAMS,CACL,CAAEqC,MADG,UAEL,CAAEA,MAFG,UAGL,CAAEA,MAHG,UAIL,CAAEA,MAVN,sBAaa,YACT,WAAc,CAAErC,cAAhB,KAdJ,wDAkBI,OACE,sBACEhY,WADF,YAEEse,KAAM7gB,KAFR,KAGEua,cAAeva,KAAKsF,MAHtB,cAIEgV,SAAUta,KALd,eAlBJ,GAA4CsG,IAA5C,WCQM69C,YAAW,UACf,+BAAiB9jD,KADF,WAIJs4D,GAAb,yLAEU,CACNp+C,cAHJ,aAMS,CACL,CACEqC,MADF,SAEEJ,KAHG,IAKL,CACEI,MADF,SAEEJ,KAPG,IASL,CACEI,MADF,SAEEJ,KAXG,IAaL,CACEI,MADF,SAEEJ,KArBN,gBAyBa,YACT,WAAc,CAAEjC,cAAhB,KA1BJ,wDA8BI,OACE,sBACEsG,KAAM7gB,KADR,KAEEua,cAAeva,KAAKsF,MAFtB,cAGEgV,SAAUta,KAJd,eA9BJ,GAA2CsG,IAA3C,WCXasyD,GAAb,yLAEU,CACNr+C,cAHJ,aAMS,CACL,CACEqC,MADF,SAEEC,WAAYjZ,GAHT,eAKL,CAAEgZ,MALG,UAML,CACEA,MADF,SAEEC,WAAYjZ,GART,eAUL,CAAEgZ,MAhBN,sBAmBa,YACT,WAAc,CAAErC,cAAhB,KApBJ,wDAwBI,OACE,sBACEsG,KAAM7gB,KADR,KAEEua,cAAeva,KAAKsF,MAFtB,cAGEgV,SAAUta,KAJd,eAxBJ,GAA+CsG,IAA/C,WAkCM1C,GAAS8L,YAAkB,CAC/BmpD,cAAe,CACbt8C,MADa,QAEbH,SAHJ,MC9Ba08C,GAAb,yLAEU,CACN3Q,aADM,EAEN5tC,cAJJ,aAOS,CACL,CAAEqC,MADG,eAEL,CAAEA,MAFG,eAGL,CAAEA,MAHG,eAIL,CAAEA,MAXN,+BAciB,YACb,WAAc,CAAErC,cAAhB,GAAiC,EAAjC,aAfJ,aAkBe,WACX,IAAM4tC,GAAe,QAArB,YACA,WAAc,CAAEA,YAAhB,KApBJ,wDAwBI,OACE,sBAAQnmD,MAAO4B,GAAf,WACE,sBACErB,WADF,YAEEse,KAAM7gB,KAFR,KAGEyP,QAASzP,KAAKsF,MAHhB,YAIEiV,cAAeva,KAAKsF,MAJtB,cAKEgV,SAAUta,KALZ,aAMEkO,gBAAiBlO,KANnB,YAOE,sBAAQ8O,QAAS9O,KAAjB,YATN,qBAxBJ,GAAwDsG,IAAxD,WA0CM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UAFJ,OCvCMy3C,YAAiB,UACrB,wBACEp2D,MADF,EAEEW,OAAQ,CAAE05C,IAHS,8DAOV0c,GAAb,yLAEU,CACN5Q,aADM,EAEN5tC,cAJJ,aAOS,CACL,CAAEqC,MAAF,cAAwBJ,KADnB,IAEL,CAAEI,MAAF,cAAwBJ,KAFnB,IAGL,CAAEI,MAAF,cAAwBJ,KAHnB,IAIL,CAAEI,MAAF,cAAwBJ,KAX5B,oBAciB,YACb,WAAc,CAAEjC,cAAhB,GAAiC,EAAjC,aAfJ,aAkBe,WACX,IAAM4tC,GAAe,QAArB,YACA,WAAc,CAAEA,YAAhB,KApBJ,wDAwBI,OACE,sBAAQnmD,MAAO4B,GAAf,WACE,sBACEid,KAAM7gB,KADR,KAEEyP,QAASzP,KAAKsF,MAFhB,YAGEiV,cAAeva,KAAKsF,MAHtB,cAIEgV,SAAUta,KAJZ,aAKEkO,gBAAiBlO,KALnB,YAME,sBAAQ8O,QAAS9O,KAAjB,YARN,qBAxBJ,GAA6DsG,IAA7D,WAyCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UAFJ,OCnDaq4C,GAAb,yLAEU,CACN7Q,aADM,EAEN5tC,cAJJ,aAOS,CACL,CAAEqC,MADG,eAEL,CAAEA,MAFG,eAGL,CAAEA,MAHG,eAIL,CAAEA,MAXN,+BAciB,YACb,WAAc,CAAErC,cAAhB,GAAiC,EAAjC,aAfJ,aAkBe,WACX,IAAM4tC,GAAe,QAArB,YACA,WAAc,CAAEA,YAAhB,KApBJ,wDAwBI,OACE,sBAAQnmD,MAAO4B,GAAf,WACE,sBACEid,KAAM7gB,KADR,KAEEyP,QAASzP,KAAKsF,MAFhB,YAGEiV,cAAeva,KAAKsF,MAHtB,cAIEgV,SAAUta,KAJZ,aAKEkO,gBAAiBlO,KALnB,YAME,sBAAQ8O,QAAS9O,KAAjB,YARN,qBAxBJ,GAAqDsG,IAArD,WAyCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UAFJ,OCzCas4C,GAAb,yLAEU,CACN9Q,aADM,EAEN5tC,cAJJ,aAOS,CACL,CAAEqC,MADG,eAEL,CAAEA,MAAF,cAAwBgI,UAFnB,GAGL,CAAEhI,MAHG,eAIL,CAAEA,MAXN,+BAciB,YACb,WAAc,CAAErC,cAAhB,GAAiC,EAAjC,aAfJ,aAkBe,WACX,IAAM4tC,GAAe,QAArB,YACA,WAAc,CAAEA,YAAhB,KApBJ,wDAwBI,OACE,sBAAQnmD,MAAO4B,GAAf,WACE,sBACEid,KAAM7gB,KADR,KAEEyP,QAASzP,KAAKsF,MAFhB,YAGEiV,cAAeva,KAAKsF,MAHtB,cAIEgV,SAAUta,KAJZ,aAKEkO,gBAAiBlO,KALnB,YAME,sBAAQ8O,QAAS9O,KAAjB,YARN,qBAxBJ,GAA2DsG,IAA3D,WAyCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UAFJ,OCnCMwjC,YAAW,UACf,+BAAiB9jD,KADF,WAIJ64D,GAAb,yLAEU,CACN/Q,aADM,EAEN5tC,cAJJ,aAOS,CACL,CAAEqC,MAAF,cAAwBJ,KADnB,IAEL,CAAEI,MAAF,cAAwBJ,KAFnB,IAGL,CAAEI,MAAF,cAAwBJ,KAHnB,IAIL,CAAEI,MAAF,cAAwBJ,KAX5B,oBAciB,YACb,WAAc,CAAEjC,cAAhB,GAAiC,EAAjC,aAfJ,aAkBe,WACX,IAAM4tC,GAAe,QAArB,YACA,WAAc,CAAEA,YAAhB,KApBJ,wDAwBI,OACE,sBAAQnmD,MAAO4B,GAAf,WACE,sBACEid,KAAM7gB,KADR,KAEEyP,QAASzP,KAAKsF,MAFhB,YAGEiV,cAAeva,KAAKsF,MAHtB,cAIEgV,SAAUta,KAJZ,aAKEkO,gBAAiBlO,KALnB,YAME,sBAAQ8O,QAAS9O,KAAjB,YARN,qBAxBJ,GAAmDsG,IAAnD,WAyCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UAFJ,OClDaw4C,GAAb,yLAEU,CACNp4B,gBAHJ,yBAMwB,WACpB,IAAMA,GAAkB,QAAxB,eACA,WAAc,CAAEA,eAAhB,KARJ,uBAWyB,kBACrB,sBAAQ/+B,MAAO4B,GAAf,gBACE,0BAFmB,0BAXzB,wDAkBI,OACE,sBACE6L,QAASzP,KAAKsF,MADhB,eAEEzF,QAASG,KAFX,uBAGEkO,gBAAiBlO,KAHnB,qBAIE,sBAAQ8O,QAAS9O,KAAjB,qBALJ,uBAlBJ,GAAgDsG,IAAhD,WA+BM1C,GAAS8L,YAAkB,CAC/B0pD,eAAgB,CACdhjD,eADc,SAEdD,WAHJ,YC3BakjD,GAAb,yLAEU,CACN5pD,SADM,EAEN6tB,UAAW,CAAErhB,KAJjB,qBAOe,CACX,CAAEA,KADS,OAEX,CAAEA,KAFS,aAGX,CAAEA,KAHS,WAIX,CAAEA,KAJS,QAKX,CAAEA,KALS,cAMX,CAAEA,KANS,YAOX,CAAEA,KAPS,SAQX,CAAEA,KARS,eASX,CAAEA,KATS,aAUX,CAAEA,KAVS,UAWX,CAAEA,KAXS,gBAYX,CAAEA,KAnBN,4BAsBe,WACX,IAAMxM,GAAW,QAAjB,QAEA,WAAc,CAAEA,QAAhB,KAzBJ,eA4BiB,YACb,WAAc,CAAE6tB,UAAhB,KA7BJ,uBAgCyB,kBACrB,sBAAQt7B,MAAO4B,GAAf,gBACE,0BAFmB,0BAhCzB,wDAuCI,OACE,wBAAM5B,MAAO4B,GAAb,WACE,sBACE6oC,MADF,2BAEE5rB,KAAM7gB,KAFR,WAGE2pC,eAAgB3pC,KAAKsF,MAHvB,UAIEgV,SAAUta,KALd,eAOE,wBAAMgC,MAAO4B,GAAb,cACE,sBACE6L,QAASzP,KAAKsF,MADhB,QAEEg4B,UAAWt9B,KAAKsF,MAAMg4B,UAFxB,KAGEz9B,QAASG,KAHX,uBAIEkO,gBAAiBlO,KAJnB,YAKE,sBACEmR,KADF,QAEErC,QAAS9O,KAFX,YAdR,uBAvCJ,GAA8CsG,IAA9C,WAiEM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAF6B,IAI/BjsB,aAAc,CACZlQ,OADY,IAEZqG,eAFY,SAGZD,WAP6B,UAS/BmI,OAAQ,CACNxO,MAV6B,KAY/BspD,eAAgB,CACdhjD,eADc,SAEdD,WAd6B,UAgB/B0C,OAAQ,CACNhJ,SAjBJ,cCvEaypD,GAAb,yLAEU,CACN5gC,SAHJ,cAMa,YACT,WAAc,CAAEA,QAAhB,KAPJ,wDAWI,OACE,sBAAQ12B,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,MAEEqY,KAFF,SAGEyc,QAAS14B,KAAKsF,MAHhB,QAIEmzB,SAAUz4B,KALd,WAOE,sBACEgC,MAAO4B,GADT,MAEEqY,KAFF,WAGE2I,UAVJ,IAYE,sBACE5iB,MAAO4B,GADT,MAEEqY,KAFF,mBAGEyc,SAHF,EAIE9T,UAjBN,SAXJ,GAA8Cte,IAA9C,WAmCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/B84C,MAAO,CACLr9C,eADK,EAELjC,iBATJ,KCvCau/C,GAAb,yLAEU,CACN9gC,SAHJ,cAMa,YACT,WAAc,CAAEA,QAAhB,KAPJ,wDAWI,OACE,sBACEzc,KADF,kBAEEyc,QAAS14B,KAAKsF,MAFhB,QAGEmzB,SAAUz4B,KAJd,eAXJ,GAA2CsG,IAA3C,WCIamzD,GAAb,yLAEU,CACNnH,gBADM,EAENC,gBAFM,EAGNC,aAHM,EAINC,gBAJM,EAKNC,eALM,EAMNC,cARJ,qBAWoB,YAChB,WAAc,CAAEL,eAAhB,KAZJ,kBAeoB,YAChB,WAAc,CAAEC,eAAhB,KAhBJ,eAmBiB,YACb,WAAc,CAAEC,YAAhB,KApBJ,kBAuBoB,YAChB,WAAc,CAAEC,eAAhB,KAxBJ,iBA2BmB,YACf,WAAc,CAAEC,cAAhB,KA5BJ,gBA+BkB,YACd,WAAc,CAAEC,aAAhB,KAhCJ,wDAoCI,OACE,sBAAQ3wD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,MAEE+a,OAFF,UAGE1C,KAHF,UAIEyc,QAAS14B,KAAKsF,MAJhB,eAKEmzB,SAAUz4B,KANd,kBAQE,sBACEgC,MAAO4B,GADT,MAEE+a,OAFF,UAGE1C,KAHF,UAIEyc,QAAS14B,KAAKsF,MAJhB,eAKEmzB,SAAUz4B,KAbd,kBAeE,sBACEgC,MAAO4B,GADT,MAEE+a,OAFF,OAGE1C,KAHF,OAIEyc,QAAS14B,KAAKsF,MAJhB,YAKEmzB,SAAUz4B,KApBd,eAsBE,sBACEgC,MAAO4B,GADT,MAEE+a,OAFF,UAGE1C,KAHF,UAIEyc,QAAS14B,KAAKsF,MAJhB,eAKEmzB,SAAUz4B,KA3Bd,kBA6BE,sBACEgC,MAAO4B,GADT,MAEE+a,OAFF,SAGE1C,KAHF,SAIEyc,QAAS14B,KAAKsF,MAJhB,cAKEmzB,SAAUz4B,KAlCd,iBAoCE,sBACEgC,MAAO4B,GADT,MAEE+a,OAFF,QAGE1C,KAHF,QAIEyc,QAAS14B,KAAKsF,MAJhB,aAKEmzB,SAAUz4B,KA1ChB,qBApCJ,GAAyCsG,IAAzC,WAqFM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/B84C,MAAO,CACLr9C,eADK,EAELjC,iBATJ,KCxFay/C,GAAb,yLAEU,CACNhhC,SAHJ,cAMa,YACT,WAAc,CAAEA,QAAhB,KAPJ,wDAWI,OACE,sBACE12B,MAAO4B,GADT,MAEEga,UAAWha,GAFb,UAGE80B,QAAS14B,KAAKsF,MAHhB,QAIE2W,KAJF,kBAKEwc,SAAUz4B,KANd,eAXJ,GAAgDsG,IAAhD,WAuBM1C,GAAS8L,YAAkB,CAC/B6pD,MAAO,CACLzpD,MADK,GAELC,OAH6B,IAK/B4pD,UAAW,CAAEp9C,MALf,aCpBaq9C,GAAb,yLAEU,CACNr/C,cAHJ,cAMa,YACT,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,sBACEvY,MAAO4B,GADT,UAEE2W,cAAeva,KAAKsF,MAFtB,cAGEmzB,SAAUz4B,KAHZ,UAIE,sBAAOgC,MAAO4B,GAAd,MAA4BqY,KAJ9B,aAKE,sBAAOja,MAAO4B,GAAd,MAA4BqY,KAL9B,aAME,sBAAOja,MAAO4B,GAAd,MAA4BqY,KAPhC,kBAXJ,GAAmD3V,IAAnD,WAwBa1C,GAAS8L,YAAkB,CACtCb,UAAW,CACT2R,gBADS,EAETC,kBAHoC,GAKtC84C,MAAO,CACLr9C,eANG,KCxBM29C,GAAb,wLAES,CACL,CAAE59C,KADG,YAEL,CAAEA,KAFG,YAGL,CAAEA,KAAF,WAAoB2I,UAHf,GAIL,CAAE3I,KANN,qBASU,CACN0tB,eAVJ,iBAaa,YACT,WAAc,CAAEA,eAAhB,KAdJ,wDAkBI,OACE,sBAAQ3nC,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,OAEEid,KAAM7gB,KAFR,KAGE2iC,YAHF,SAIEgH,eAAgB3pC,KAAKsF,MAJvB,eAKEgV,SAAUta,KANd,WAQE,sBACEgC,MAAO4B,GADT,OAEEid,KAAM7gB,KAFR,KAGE2iC,YAHF,WAIE/d,UAJF,EAKEtK,SAAUta,KAdhB,gBAlBJ,GAA+CsG,IAA/C,WAuCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETtG,OAFS,IAGTyQ,gBAHS,EAITC,kBAL6B,GAO/B5H,OAAQ,CACN9G,KADM,EAENkI,iBATJ,KCvCa6/C,GAAb,wLAES,CACL,CAAE79C,KADG,YAEL,CAAEA,KAFG,YAGL,CAAEA,KALN,qBAQU,CACN0tB,eATJ,eAYa,YACT,WAAc,CAAEA,eAAhB,KAbJ,wDAiBI,OACE,sBAAQ3nC,MAAO4B,GAAf,WACE,sBACEid,KAAM7gB,KADR,KAEE+nC,aAFF,EAGE4B,eAAgB3pC,KAAKsF,MAHvB,eAIEgV,SAAUta,KANhB,gBAjBJ,GAA+CsG,IAA/C,WA8BM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTkB,OADS,IAETm8B,QAHJ,MC9Ba6tB,GAAb,yLAEU,CACN,CAAE99C,KADI,YAEN,CAAEA,KAFI,YAGN,CACEA,KADF,WAEEvQ,MAAO,CACL,CAAEuQ,KADG,eAEL,CAAEA,KATV,0BAcU,CACN0tB,eAfJ,iBAkBa,YACT,WAAc,CAAEA,eAAhB,KAnBJ,wDAuBI,OACE,sBAAQ3nC,MAAO4B,GAAf,WACE,sBACEid,KAAM7gB,KADR,MAEE2pC,eAAgB3pC,KAAKsF,MAFvB,eAGEgV,SAAUta,KALhB,gBAvBJ,GAA8CsG,IAA9C,WAmCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTkB,OADS,IAETm8B,QAHJ,MC7Ba8tB,GAAb,wLAES,CACL,CAAE/9C,KADG,YAEL,CAAEA,KAFG,YAGL,CAAEA,KALN,qBAQU,CACN0tB,eATJ,iBAYa,YACT,WAAc,CAAEA,eAAhB,KAbJ,aAgBe,cACX,IAAM8W,EAAWhxC,EAAO,mBAAxB,qBACA,OACE,+BAAiBpP,KADnB,MAlBJ,wDAwBI,OACE,sBAAQ2B,MAAO4B,GAAf,WACE,sBACEid,KAAM7gB,KADR,KAEE2pC,eAAgB3pC,KAAKsF,MAFvB,eAGEkX,KAAMxc,KAHR,WAIEsa,SAAUta,KANhB,gBAxBJ,GAA8CsG,IAA9C,WAqCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTkB,OADS,IAETm8B,QAHJ,MC3Ca+tB,GAAb,wLAES,CACL,CAAEh+C,KADG,YAEL,CAAEA,KAFG,YAGL,CAAEA,KALN,qBAQU,CACNi+C,sBADM,KAENC,sBAFM,KAGNC,mBAHM,KAINC,qBAJM,KAKNC,sBALM,KAMNC,oBAdJ,wBAiBoB,YAChB,WAAc,CAAEL,sBAAhB,KAlBJ,kBAqBoB,YAChB,WAAc,CAAEC,sBAAhB,KAtBJ,eAyBiB,YACb,WAAc,CAAEC,mBAAhB,KA1BJ,iBA6BmB,YACf,WAAc,CAAEC,qBAAhB,KA9BJ,kBAiCoB,YAChB,WAAc,CAAEC,sBAAhB,KAlCJ,gBAqCkB,YACd,WAAc,CAAEC,oBAAhB,KAtCJ,wDA0CI,OACE,sBAAQv4D,MAAO4B,GAAf,WACE,sBACEid,KAAM7gB,KADR,KAEE2e,OAFF,UAGEgkB,YAHF,UAIEgH,eAAgB3pC,KAAKsF,MAJvB,sBAKEgV,SAAUta,KANd,kBAQE,sBACE6gB,KAAM7gB,KADR,KAEE2e,OAFF,UAGEgkB,YAHF,UAIEgH,eAAgB3pC,KAAKsF,MAJvB,sBAKEgV,SAAUta,KAbd,kBAeE,sBACE6gB,KAAM7gB,KADR,KAEE2e,OAFF,OAGEgkB,YAHF,OAIEgH,eAAgB3pC,KAAKsF,MAJvB,mBAKEgV,SAAUta,KApBd,eAsBE,sBACE6gB,KAAM7gB,KADR,KAEE2e,OAFF,UAGEgkB,YAHF,UAIEgH,eAAgB3pC,KAAKsF,MAJvB,sBAKEgV,SAAUta,KA3Bd,kBA6BE,sBACE6gB,KAAM7gB,KADR,KAEE2e,OAFF,SAGEgkB,YAHF,SAIEgH,eAAgB3pC,KAAKsF,MAJvB,qBAKEgV,SAAUta,KAlCd,iBAoCE,sBACE6gB,KAAM7gB,KADR,KAEE2e,OAFF,QAGEgkB,YAHF,QAIEgH,eAAgB3pC,KAAKsF,MAJvB,oBAKEgV,SAAUta,KA1ChB,qBA1CJ,GAA0CsG,IAA1C,WA2FM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAFJ,MC3FasuB,GAAb,wLAEiB,CACb,CAAEv+C,KADW,YAEb,CAAEA,KAAF,WAAoB2B,UAAWha,GAFlB,SAGb,CAAEqY,KALN,qBAQU,CACN0tB,eATJ,iBAYa,YACT,WAAc,CAAEA,eAAhB,KAbJ,wDAiBI,OACE,sBAAQ3nC,MAAO4B,GAAf,WACE,sBACE6nC,WAAY7nC,GADd,WAEEopC,iBAAkBppC,GAFpB,iBAGE2pC,aAAc3pC,GAHhB,aAIEid,KAAM7gB,KAJR,KAKE2pC,eAAgB3pC,KAAKsF,MALvB,eAMEgV,SAAUta,KARhB,gBAjBJ,GAAiDsG,IAAjD,WAgCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTkB,OADS,IAETm8B,QAH6B,IAK/BT,WAAY,CACVlvB,MAN6B,QAQ/BywB,iBAAkB,CAChBzwB,MAT6B,QAW/BgxB,aAAc,CACZ54B,aAZ6B,GAc/Bm1B,QAAS,CACPvtB,MADO,MAEPH,SAhBJ,MC5Baq+C,GAAb,wLAES,CACL,CAAEx+C,KADG,YAEL,CAAEA,KAFG,YAGL,CAAEA,KALN,qBAQU,CACN0tB,eAAgB,CACd,CAAE1tB,KADY,YAEd,CAAEA,KAXR,yBAea,YACT,WAAc,CAAE0tB,eAAhB,KAhBJ,aAmBe,YACX,OAAOjvB,EAAP,MApBJ,wDAwBI,OACE,sBAAQ1Y,MAAO4B,GAAf,WACE,sBACEid,KAAM7gB,KADR,KAEE+nC,aAFF,EAGE4B,eAAgB3pC,KAAKsF,MAHvB,eAIE+9B,aAAcrjC,KAJhB,WAKEsa,SAAUta,KAPhB,gBAxBJ,GAA0DsG,IAA1D,WAsCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTkB,OADS,IAETm8B,QAHJ,MC1CawuB,GAAb,wLAES,CACL,CAAEz+C,KADG,YAEL,CAAEA,KAFG,YAGL,CAAEA,KALN,qBAQU,CACN0tB,eAAgB,CAAC,OAAD,GAAe,OATnC,gBAYa,YACT,WAAc,CAAEA,eAAhB,KAbJ,wDAiBI,OACE,sBAAQ3nC,MAAO4B,GAAf,WACE,sBACEid,KAAM7gB,KADR,KAEE+nC,aAFF,EAGE4B,eAAgB3pC,KAAKsF,MAHvB,eAIEgV,SAAUta,KANhB,gBAjBJ,GAA6DsG,IAA7D,WA8BM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTkB,OADS,IAETm8B,QAHJ,MC1BMqrB,GAAc,CAClB36C,MADF,kBAIa+9C,GAAb,yLAEU,CACN95C,KAHJ,eAUa,WACT,IAAMA,EAAO,IAAItP,MAAM,GAAGpR,KAA1B,IACA,WAAc,CAAE0gB,KAAhB,KAZJ,gBAe0B,kBACtB,wBAAM7e,MAAO4B,GAAb,SACE,qBAFoB,QAf1B,iBAqBmB,gBAAG8W,EAAH,OAASrJ,EAAT,eACf,sBAAUuL,MAAUlC,EAAL,WAAmBrJ,EADnB,MArBnB,aAyBe,kBACX,sBACEwP,KAAM,QADR,KAEEmC,WAAY,EAHH,kBAzBf,mEAOIJ,WAAW5iB,KAAD,SAAV4iB,OAPJ,+BAkCI,OAD0B5iB,KAAKsF,MAAMub,KAAKxc,OAA1C,EACkBrE,KAAH,aAAuBA,KAAtC,oBAlCJ,GAAgDsG,IAAhD,WAsCM1C,GAAS8L,YAAkB,CAC/BkrD,QAAS,CACP7oD,KADO,EAEPqE,eAFO,SAGPD,WAJJ,YClDa0kD,cAA6B,OACxC,qBADwC,OCI7BC,cAAuB,OAClC,sBAAQ94D,MAAO4B,GAAf,WACE,sBAASuN,KADX,SAEE,sBAASA,KAFX,UAGE,sBAASA,KAHX,WAIE,sBAASA,KAJX,UAKE,sBAASA,KANuB,YAU9BvN,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETD,eAFS,gBAGTG,SAHS,OAITiK,gBAJS,EAKTC,kBANJ,KCVas6C,cAA0B,OACrC,sBAAQ/4D,MAAO4B,GAAf,WACE,sBAAS+a,OADX,YAEE,sBAASA,OAFX,YAGE,sBAASA,OAHX,SAIE,sBAASA,OAJX,YAKE,sBAASA,OALX,WAME,sBAASA,OAP0B,kBAWjC/a,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETD,eAFS,gBAGTG,SAHS,OAITiK,gBAJS,EAKTC,kBANJ,KCZau6C,GAAb,yLAEU,CACNzgD,cAHJ,iBAMgB,YACZ,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,sBACEA,cAAeva,KAAKsF,MADtB,cAEEgV,SAAUta,KAFZ,aAGE,sBAAK4c,MAHP,UAIE,sBAAKA,MAJP,UAKE,sBAAKA,MANT,eAXJ,GAA+CtW,IAA/C,WCFa20D,YAA2B,UACtC,sBACEj5D,MAAO4B,GADT,IAEEiZ,WAAYjZ,GAFd,SAGEgZ,MAJoC,eAQlChZ,GAAS8L,YAAkB,CAC/BioC,IAAK,CAAEtiC,gBADwB,WAE/Bo6C,SAAU,CAAElzC,MAFd,aCTa2+C,YAAyB,UACpC,sBAAKt+C,MAD+B,eCKzBu+C,YAA+B,UAC1C,sBACEn5D,MAAO4B,GADT,QAEEi0C,YAAaj0C,GAFf,OAGEiX,eAAgBjX,GAHlB,kBAIE,sBAAKgZ,MAAL,aACE,0BALJ,cAOE,sBAAKA,MAAL,YACE,0BATsC,eActChZ,GAAS8L,YAAkB,CAC/B0rD,QAAS,CAAE/lD,gBADoB,WAE/BmiC,OAAQ,CAAEniC,gBAFqB,WAG/BgmD,iBAAkB,CAAEhmD,gBAHtB,aCfaimD,GAAb,yLAEU,CACN/gD,cAHJ,cAMa,YACT,WAAc,CAAEA,cAAhB,KAPJ,uBAUyB,YACrB,OAAOlJ,IAAU,QAAjB,eAXJ,wDAeI,OACE,sBACEkJ,cAAeva,KAAKsF,MADtB,cAEE8c,oBAAqBpiB,KAFvB,qBAGEsa,SAAUta,KAHZ,UAIE,sBAAK4c,MAAL,aACE,0BALJ,cAOE,sBAAKA,MAAL,YACE,0BATN,kBAfJ,GAAgDtW,IAAhD,WCAai1D,GAAb,yLAEU,CACNhhD,cAHJ,cAMa,YACT,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,sBACEA,cAAeva,KAAKsF,MADtB,cAEEgV,SAAUta,KAFZ,UAGE,sBAAK4c,MAAL,aACE,0BAJJ,cAME,sBAAKA,MAAL,YACE,0BARN,kBAXJ,GAAgDtW,IAAhD,WCHMqpD,YAAgB,UACpB,wBAAO3tD,MAAP,EAAqBW,OAAQ,CAAE05C,IADX,gEAITmf,YAAoC,UAC/C,sBAAK5+C,MAAL,YAAuBJ,KADwB,MCG3CmzC,YAAgB,UACpB,+BAAiBtvD,KADG,aAITo7D,YAAsB,UACjC,sBAAK7+C,MAAL,YAAuBJ,KADU,MCTtBk/C,cAA0B,OACrC,0BACE,sBAAMn5D,WAAN,WADF,WAEE,sBAAMA,WAAN,eAFF,eAGE,sBAAMA,WAAN,QAJmC,UCA1Bo5D,cAAyB,OACpC,0BACE,sBAAMj3C,SAAN,MADF,MAEE,sBAAMA,SAAN,MAFF,MAGE,sBAAMA,SAAN,MAHF,MAIE,sBAAMA,SAAN,MAJF,MAKE,sBAAMA,SAAN,MALF,MAME,sBAAMA,SAAN,MANF,MAOE,sBAAMA,SAAN,MAPF,MAQE,sBAAMA,SAAN,MARF,MASE,sBAAMA,SAAN,MATF,MAUE,sBAAMA,SAAN,MAVF,MAWE,sBAAMA,SAAN,MAXF,MAYE,sBAAMA,SAAN,MAZF,MAaE,sBAAMA,SAAN,SAdkC,WCFzBk3C,cAA4B,OACvC,sBAAM55D,MAAO4B,GAAb,MADuC,gBAInCA,GAAS8L,YAAkB,CAC/BuM,KAAM,CACJM,MADI,UAEJH,SAHJ,MCLay/C,cAA0B,OACrC,0BADqC,gBCG1BC,cAAuB,OAClC,0BACE,sBAAMn9C,OAAN,WADF,WAEE,sBAAMA,OAAN,WAFF,WAGE,sBAAMA,OAAN,QAHF,QAIE,sBAAMA,OAAN,WAJF,WAKE,sBAAMA,OAAN,UANgC,YCCvBo9C,GAAb,yLAEU,CACNrjC,SAHJ,yBAMwB,YACpB,WAAc,CAAEA,QAAhB,KAPJ,wDAWI,OACE,sBAAQ12B,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,OAEEqY,KAFF,SAGEyc,QAAS14B,KAAKsF,MAHhB,QAIEmzB,SAAUz4B,KALd,sBAOE,sBACEgC,MAAO4B,GADT,OAEEqY,KAFF,WAGE2I,UAVJ,IAYE,sBACE5iB,MAAO4B,GADT,OAEEqY,KAFF,mBAGEyc,SAHF,EAIE9T,UAjBN,SAXJ,GAA+Cte,IAA/C,WAmCM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/Bq4B,OAAQ,CACN58B,eADM,EAENjC,iBATJ,KCnCa+hD,GAAb,yLAEU,CACN1J,gBADM,EAENC,gBAFM,EAGNC,aAHM,EAINC,gBAJM,EAKNC,eALM,EAMNC,cARJ,qBAWoB,YAChB,WAAc,CAAEL,eAAhB,KAZJ,kBAeoB,YAChB,WAAc,CAAEC,eAAhB,KAhBJ,eAmBiB,YACb,WAAc,CAAEC,YAAhB,KApBJ,kBAuBoB,YAChB,WAAc,CAAEC,eAAhB,KAxBJ,iBA2BmB,YACf,WAAc,CAAEC,cAAhB,KA5BJ,gBA+BkB,YACd,WAAc,CAAEC,aAAhB,KAhCJ,wDAoCI,OACE,sBAAQ3wD,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,eAGE2W,KAHF,UAIE0C,OAJF,UAKE8Z,SAAUz4B,KANd,kBAQE,sBACEgC,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,eAGE2W,KAHF,UAIE0C,OAJF,UAKE8Z,SAAUz4B,KAbd,kBAeE,sBACEgC,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,YAGE2W,KAHF,OAIE0C,OAJF,OAKE8Z,SAAUz4B,KApBd,eAsBE,sBACEgC,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,eAGE2W,KAHF,UAIE0C,OAJF,UAKE8Z,SAAUz4B,KA3Bd,kBA6BE,sBACEgC,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,cAGE2W,KAHF,SAIE0C,OAJF,SAKE8Z,SAAUz4B,KAlCd,iBAoCE,sBACEgC,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,aAGE2W,KAHF,QAIE0C,OAJF,QAKE8Z,SAAUz4B,KA1ChB,qBApCJ,GAA0CsG,IAA1C,WAqFM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/Bq4B,OAAQ,CACN58B,eADM,EAENjC,iBATJ,KCrFagiD,GAAb,yLAEU,CACNC,aADM,EAENC,cAFM,EAGNC,eAHM,EAINC,cAJM,EAKNC,cAPJ,kBAUiB,YACb,WAAc,CAAEJ,YAAhB,KAXJ,gBAckB,YACd,WAAc,CAAEC,aAAhB,KAfJ,iBAkBmB,YACf,WAAc,CAAEC,cAAhB,KAnBJ,gBAsBkB,YACd,WAAc,CAAEC,aAAhB,KAvBJ,gBA0BkB,YACd,WAAc,CAAEC,aAAhB,KA3BJ,wDA+BI,OACE,sBAAQt6D,MAAO4B,GAAf,WACE,sBACE5B,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,YAGE2W,KAHF,OAIE9K,KAJF,OAKEsnB,SAAUz4B,KANd,eAQE,sBACEgC,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,aAGE2W,KAHF,QAIE9K,KAJF,QAKEsnB,SAAUz4B,KAbd,gBAeE,sBACEgC,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,cAGE2W,KAHF,SAIE9K,KAJF,SAKEsnB,SAAUz4B,KApBd,iBAsBE,sBACEgC,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,aAGE2W,KAHF,QAIE9K,KAJF,QAKEsnB,SAAUz4B,KA3Bd,gBA6BE,sBACEgC,MAAO4B,GADT,OAEE80B,QAAS14B,KAAKsF,MAFhB,aAGE2W,KAHF,QAIE9K,KAJF,QAKEsnB,SAAUz4B,KAnChB,qBA/BJ,GAAwCsG,IAAxC,WAyEM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTwH,cADS,MAETE,SAFS,OAGTiK,gBAHS,EAITC,kBAL6B,GAO/Bq4B,OAAQ,CACN58B,eADM,EAENjC,iBATJ,KC7EasiD,GAAb,yLAEU,CACN7jC,SAHJ,cAMa,YACT,WAAc,CAAEA,QAAhB,KAPJ,wDAWI,OACE,sBACEA,QAAS14B,KAAKsF,MADhB,QAEE2W,KAFF,kBAGEwc,SAAUz4B,KAJd,eAXJ,GAA4CsG,IAA5C,WCCak2D,GAAb,yLAEU,CACN9jC,SAHJ,yBAMwB,YACpB,WAAc,CAAEA,QAAhB,KAPJ,wDAWI,OACE,sBACEA,QAAS14B,KAAKsF,MADhB,QAEE2W,KAFF,kBAGE2B,UAAWha,GAHb,KAIE60B,SAAUz4B,KALd,0BAXJ,GAAiDsG,IAAjD,WAsBM1C,GAAS8L,YAAkB,CAC/BuM,KAAM,CACJM,MADI,UAEJH,SAHJ,MCnBaqgD,GAAb,yLAEU,CACNhW,gBAHJ,yBAMwB,WACpB,IAAMA,GAAkB,QAAxB,eACA,WAAc,CAAEA,eAAhB,KARJ,wDAYI,OACE,sBACEh3C,QAASzP,KAAKsF,MADhB,eAEE2W,KAFF,oBAGE2B,UAAWha,GAHb,YAIEsK,gBAAiBlO,KAJnB,qBAKE,sBAAQ8O,QAAS9O,KAAjB,qBANJ,uBAZJ,GAAkDsG,IAAlD,WA0BM1C,GAAS8L,YAAkB,CAC/BgtD,YAAa,CACXngD,MADW,QAEXH,SAHJ,MC3BaugD,GAAb,yLAEU,CACNlW,gBAHJ,yBAMwB,WACpB,IAAMA,GAAkB,QAAxB,eACA,WAAc,CAAEA,eAAhB,KARJ,wDAYI,OACE,sBACEh3C,QAASzP,KAAKsF,MADhB,eAEE2W,KAFF,oBAGE/N,gBAAiBlO,KAHnB,qBAIE,sBAAQ8O,QAAS9O,KAAjB,qBALJ,uBAZJ,GAAgDsG,IAAhD,WCCMs2D,YAAW,UACf,wBACE56D,MADF,EAEEW,OAAQ,CAAE05C,IAHG,8DAOJwgB,GAAb,yLAEU,CACNpW,gBAHJ,yBAMwB,WACpB,IAAMA,GAAkB,QAAxB,eACA,WAAc,CAAEA,eAAhB,KARJ,wDAYI,OACE,sBACEh3C,QAASzP,KAAKsF,MADhB,eAEE2W,KAFF,oBAGEO,KAHF,GAIEtO,gBAAiBlO,KAJnB,qBAKE,sBAAQ8O,QAAS9O,KAAjB,qBANJ,uBAZJ,GAA2DsG,IAA3D,WCFMs2D,YAAW,UACf,+BAAiBv8D,KADF,WAIJy8D,GAAb,yLAEU,CACNrW,gBAHJ,yBAMwB,WACpB,IAAMA,GAAkB,QAAxB,eACA,WAAc,CAAEA,eAAhB,KARJ,wDAYI,OACE,sBACEh3C,QAASzP,KAAKsF,MADhB,eAEE2W,KAFF,oBAGEO,KAHF,GAIEtO,gBAAiBlO,KAJnB,qBAKE,sBAAQ8O,QAAS9O,KAAjB,qBANJ,uBAZJ,GAA6CsG,IAA7C,WCLay2D,GAAb,yLAEU,CACNttD,SADM,EAEN6tB,UAAW,CAAErhB,KAJjB,qBAOe,CACX,CAAEA,KADS,OAEX,CAAEA,KAFS,aAGX,CAAEA,KAHS,WAIX,CAAEA,KAJS,QAKX,CAAEA,KALS,cAMX,CAAEA,KANS,YAOX,CAAEA,KAPS,SAQX,CAAEA,KARS,eASX,CAAEA,KATS,aAUX,CAAEA,KAVS,UAWX,CAAEA,KAXS,gBAYX,CAAEA,KAnBN,4BAsBe,WACX,IAAMxM,GAAW,QAAjB,QAEA,WAAc,CAAEA,QAAhB,KAzBJ,eA4BiB,YACb,WAAc,CAAE6tB,UAAhB,KA7BJ,wDAiCI,OACE,wBAAMt7B,MAAO4B,GAAb,WACE,sBACE6oC,MADF,2BAEE5rB,KAAM7gB,KAFR,WAGE2pC,eAAgB3pC,KAAKsF,MAHvB,UAIEgV,SAAUta,KALd,eAOE,wBAAMgC,MAAO4B,GAAb,cACE,sBACE6L,QAASzP,KAAKsF,MADhB,QAEEg4B,UAAWt9B,KAAKsF,MAAMg4B,UAFxB,KAGErhB,KAHF,uBAIE/N,gBAAiBlO,KAJnB,YAKE,sBACEmR,KADF,QAEErC,QAAS9O,KAFX,YAdR,uBAjCJ,GAA8CsG,IAA9C,WA2DM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QAF6B,IAI/BjsB,aAAc,CACZlQ,OADY,IAEZqG,eAFY,SAGZD,WAP6B,UAS/BmI,OAAQ,CACNxO,MAV6B,KAY/B+I,OAAQ,CACNhJ,SAbJ,cClEMmtD,YAAW,UACf,wBACEh7D,MADF,EAEEW,OAAQ,CAAC05C,IAHI,oEAOJ4gB,cAAgD,OAC3D,sBAAqBzgD,KADsC,MCJvD0gD,YAAW,UACf,+BAAiB78D,KADF,WAIJ88D,cAA2C,OACtD,sBACEn7D,MAAO4B,GADT,OAEE4Y,KAHoD,MAOlD5Y,GAAS8L,YAAkB,CAC/B0tD,OAAQ,CAAEnjD,iBADZ,KCNM+iD,YAAW,UACf,+BAAiB38D,KADF,iBAIX68D,YAAW,UACf,+BAAiB78D,KADF,WAIXg9D,YAAW,UACf,+BAAiBh9D,KADF,oBAIXi9D,YAAa,UACjB,+BAAgC9gD,KADf,OAIb+gD,YAAa,UACjB,+BAAgC/gD,KADf,OAIbghD,YAAa,UACjB,+BAAgChhD,KADf,OAINihD,cAEX,IAAMC,eAYN,OACE,sBACE9gD,MADF,oBAEE2+B,YAXF,sBAAYzsC,QADY,IAatB0sC,cAT8B,CAChC,qBADgC,MAEhC,qBAF0B,UClCxBwhB,YAAW,UACf,+BAAiB38D,KADF,iBAIJs9D,cAAyC,OACpD,sBAAqBnhD,KAD+B,MCFhDwgD,YAAW,UACf,+BAAiB38D,KADF,iBAIXi9D,cAAa,OACjB,sBAAqB9gD,KADJ,MAINohD,cAAkC,OAC7C,0BACE,sBACEhhD,MADF,QAEEyf,UAFF,QAGEkf,YAAa+hB,OAEf,sBACE1gD,MADF,SAEEyf,UAFF,SAGEkf,YAAa+hB,SClBbN,YAAW,UACf,+BAAiB38D,KADF,iBAQJw9D,cAAqC,OAChD,sBACE77D,MAAO4B,GADT,cAEEgZ,MAFF,QAGEy+B,SAHF,WAIEE,YARF,sBAAqB/+B,KADJ,KAUfK,WAAYjZ,GALd,MAME63C,cAAe73C,GAP+B,YAW5CA,GAAS8L,YAAkB,CAC/BouD,cAAe,CAAEzoD,gBADc,WAE/BuH,MAAO,CAAEL,MAFsB,WAG/B8+B,SAAU,CAAE9+B,MAHd,aCpBMygD,YAAW,UACf,+BAAiB38D,KADF,iBAQJ09D,cAAmC,OAC9C,sBACExiB,YALF,sBAAqB/+B,KADJ,KAOfI,MAH4C,uBCV1CogD,YAAW,UACf,+BAAiB38D,KADF,iBAIXg9D,YAAW,UACf,+BAAiBh9D,KADF,oBAIXu8D,YAAW,UACf,+BAAiBv8D,KADF,WAIXs0D,YAAa,UACjB,+BAAiBt0D,KADA,cAIN29D,GAAb,yLAEU,CACN7V,aAHJ,cAMa,CACT,CAAEvrC,MAAF,QAAkBJ,KADT,IAET,CAAEI,MAAF,SAAmBJ,KARvB,yBAWsB,WAClB,IAAM2rC,GAAe,QAArB,YACA,WAAc,CAAEA,YAAhB,KAbJ,mBAgBqB,YAGjB,WAAc,CAAEA,aAAhB,KAnBJ,mBAsBqB,kBACjB,sBACE14C,QAAS,QADX,YAEEoR,KAAM,EAFR,SAGEyc,UAHF,aAIEhjB,SAAU,EAJZ,iBAKEpM,gBAAiB,EALnB,mBAME,sBACEsO,KADF,GAEE1N,QAAS,EATI,sBAtBrB,mBAoCqB,kBACjB,sBAAqB0N,KADJ,MApCrB,wDAyCI,OACE,sBAAQxa,MAAO4B,GAAf,WACE,sBACEgZ,MADF,oBAEE2+B,YAAav7C,KAFf,mBAGEw7C,cAAex7C,KALrB,0BAzCJ,GAAmDsG,IAAnD,WAqDM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT8R,UAFJ,OCvEas9C,GAAb,yLAEU,CACN1jD,cAHJ,cAMa,YACT,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,sBACEvY,MAAO4B,GADT,UAEE2W,cAAeva,KAAKsF,MAFtB,cAGEgV,SAAUta,KAHZ,UAIE,sBACEqpD,MADF,IAEErnD,MAAO4B,GAFT,KAGE,sBAAM8gB,SAAN,MAPJ,UASE,sBACE2kC,MADF,IAEErnD,MAAO4B,GAFT,KAGE,sBAAM8gB,SAAN,MAbN,eAXJ,GAAoDpe,IAApD,WA+BM1C,GAAS8L,YAAkB,CAC/Bb,UAAW,CACT4R,kBAF6B,IAI/Bk3B,IAAK,CACH5nC,OADG,IAEHoG,WAFG,SAGHC,eAPJ,YC/Ba8nD,GAAb,yLAEU,CACN3jD,cAHJ,cAMa,YACT,WAAc,CAAEA,cAAhB,KAPJ,sBAUwB,YACpB,OAAOlJ,IAAU,QAAjB,eAXJ,wDAeI,OACE,sBACEkJ,cAAeva,KAAKsF,MADtB,cAEE8c,oBAAqBpiB,KAFvB,oBAGEsa,SAAUta,KAHZ,UAIE,sBACEqpD,MADF,IAEErnD,MAAO4B,GAFT,KAGE,sBAAM8gB,SAAN,MAPJ,UASE,sBACE2kC,MADF,IAEErnD,MAAO4B,GAFT,KAGE,sBAAM8gB,SAAN,MAbN,eAfJ,GAAkDpe,IAAlD,WAmCM1C,GAAS8L,YAAkB,CAC/BioC,IAAK,CACH5nC,OADG,IAEHoG,WAFG,SAGHC,eAJJ,YCnCa+nD,GAAb,yLAEU,CACN5jD,cAHJ,mBAMkB,YACd,WAAc,CAAEA,cAAhB,KAPJ,wDAWI,OACE,sBACEA,cAAeva,KAAKsF,MADtB,cAEEgV,SAAUta,KAFZ,eAGE,sBACEqpD,MADF,IAEErnD,MAAO4B,GAFT,KAGE,sBAAM8gB,SAAN,MANJ,UAQE,sBACE2kC,MADF,IAEErnD,MAAO4B,GAFT,KAGE,sBAAM8gB,SAAN,MAZN,eAXJ,GAAkDpe,IAAlD,WA8BM1C,GAAS8L,YAAkB,CAC/BioC,IAAK,CACH5nC,OADG,IAEHoG,WAFG,SAGHC,eAJJ,YCbagoD,GAAb,gMAEyB,YAAoB,IACxBC,EAAkB,QADK,SAExC,4BAA+BA,EAA/B,YAJJ,mBAO6B,YACzB,MAAO,CACLzhD,MAAOja,EADF,UAGLu0B,UAAW,wBAAkC,EAH/C,cARJ,oBAe8B,YAC1B,iBAAOv0B,aAhBX,cAmBwB,YACpB,OACE,wBAAMX,MAAO,CAACA,EAAO4B,GAArB,QACE,sBAAM8gB,SAAN,MAFJ,SApBJ,aA2BuB,YACnB,OACE,0BAAMrkB,KAAN,QADF,KA5BJ,eAiCyB,WACrB,OACE,kBAAC,IAAD,cACE,sBACEukB,UADF,EAEEhI,MAFF,YAGEiZ,YAHF,oBAIErZ,KAAM,EALV,aAOE,qBARJ,QAlCJ,eA+CyB,WACrB,OACE,kBAAC,IAAD,cACE,qBADF,MAEE,sBACEoI,UADF,EAEEiR,YALN,oBAhDJ,wDA4DI,IAAMyoC,EAA8Bt+D,KAAKF,MAAM4L,MAAM/G,IAAI3E,KAAzD,kBAEA,OACE,mCAAcgC,MAAO,CAAC4B,GAAtB,WACE,sBACEyxB,OAAQr1B,KADV,aAEEy1B,OAAQz1B,KAFV,aAGE6gB,KAHF,EAIEvG,SAAUta,KANhB,oBA9DJ,GAAsCsG,IAAtC,WA2EM1C,GAAS8L,YAAkB,CAC/B6uD,SAAU,CACRxsD,KAF6B,GAI/BojD,MAAO,CACL10C,kBADK,EAEL1Q,OAFK,GAGLD,MAHK,GAIL6E,aAJK,GAKLyB,eALK,SAMLD,WANK,SAOLd,gBAXJ,YCtEMmpD,YAAmB,UACvB,+BAAiBn+D,KADM,oBAIZo+D,YAAyB,KAC0E,IAAD,EAEvEn4D,cAFuE,eAEtG6hD,EAFsG,KAEzFuW,EAFyF,KAGvGC,EAAiCr4D,eAAvC,IAEMs4D,aACJF,OAgBIG,WAAwB,GAAG5lD,MAA2C,EAA3CA,YACzB6lD,EAAuD,CAC3D15C,GAD2D,EAE3DrV,OAAQkJ,SAFV,QAIA4lB,kCAGIme,WAAsB,GAC1B,MAAO,CACLpgC,MADF,IASF,OACE,sBACE5a,MAAO4B,GADT,UAEEkV,SA3BEA,SAAW,GACf,QAAI+1C,SACFgQ,OA0BA,wBAAM78D,MAAO4B,GAAb,kBACE,sBACErB,WADF,OAEEmiB,SAFF,MADF,+BAME,sBACEjV,QADF,EAEE6K,SA3CF2iC,SAAgB,GAA0B,IAC7B8hB,EAAkB39D,YADU,OAG7Cu9D,iBACAD,OAwCM79C,KAhBCzf,oBAAP,GAiBM8M,gBAJF,GAKE,sBACE3L,WADF,QAEEoc,OAFF,QAGExN,KAHF,QAIEqL,KAJF,GAKE1N,QALF,GAMG6vD,EApBT,QAwBE,oBAzBJ,QA8BI/6D,GAAS8L,YAAkB,CAC/Bb,UAAW,CACTq9B,QADS,GAETvrB,UAH6B,KAK/Bq+C,iBAAkB,CAChB3oD,cADgB,MAEhBD,eAPJ,mB,+NC7FA,IAsMO,GAtMDk4C,IAAgC,mpBA8BT,kBAAMmQ,GAAuB,GAA7B,0BA9BS,6BA+BT,kBAAMA,GAAuB,GAA7B,yBA/BS,sBAgChB,kBAAMA,GAAuB,GAA7B,kBAhCgB,4BAiCV,kBAAMA,GAAuB,GAA7B,wBAjCU,qBAkCjB,kBAAMA,GAAuB,GAA7B,iBAlCiB,wCAmCE,kBAAMA,GAAuB,GAA7B,oCAnCF,sCAoCA,kBAAMA,GAAuB,GAA7B,kCApCA,2CAqCK,kBAAMA,GAAuB,GAA7B,uCArCL,yCAsCG,kBAAMA,GAAuB,GAA7B,qCAtCH,oDAuCc,kBAAMA,GAAuB,GAA7B,gDAvCd,sCAwCA,kBAAMA,GAAuB,GAA7B,kCAxCA,oCAyCF,kBAAMA,GAAuB,GAA7B,gCAzCE,2CA0CK,kBAAMA,GAAuB,GAA7B,uCA1CL,4BA2CV,kBAAMA,GAAuB,GAA7B,wBA3CU,sBA4ChB,kBAAMA,GAAuB,GAA7B,kBA5CgB,wBA6Cd,kBAAMA,GAAuB,GAA7B,oBA7Cc,4BA8CV,kBAAMA,GAAuB,GAA7B,wBA9CU,qBA+CjB,kBAAMA,GAAuB,GAA7B,iBA/CiB,uBAgDf,kBAAMA,GAAuB,GAA7B,mBAhDe,yBAiDb,kBAAMA,GAAuB,GAA7B,qBAjDa,gCAkDN,kBAAMA,GAAuB,GAA7B,4BAlDM,mCAmDH,kBAAMA,GAAuB,GAA7B,+BAnDG,iCAoDL,kBAAMA,GAAuB,GAA7B,6BApDK,0BAqDZ,kBAAMA,GAAuB,GAA7B,sBArDY,4BAsDV,kBAAMA,GAAuB,GAA7B,wBAtDU,gCAuDN,kBAAMA,GAAuB,GAA7B,4BAvDM,yBAwDb,kBAAMA,GAAuB,GAA7B,qBAxDa,4BAyDV,kBAAMA,GAAuB,GAA7B,wBAzDU,+BA0DP,kBAAMA,GAAuB,GAA7B,2BA1DO,yBA2Db,kBAAMA,GAAuB,GAA7B,qBA3Da,yBA4Db,kBAAMA,GAAuB,GAA7B,qBA5Da,8BA6DR,kBAAMA,GAAuB,GAA7B,0BA7DQ,iCA8DL,kBAAMA,GAAuB,GAA7B,6BA9DK,mCA+DH,kBAAMA,GAAuB,GAA7B,+BA/DG,2BAgEX,kBAAMA,GAAuB,GAA7B,uBAhEW,wBAiEd,kBAAMA,GAAuB,GAA7B,oBAjEc,qBAkEjB,kBAAMA,GAAuB,GAA7B,iBAlEiB,2BAmEX,kBAAMA,GAAuB,GAA7B,uBAnEW,0BAoEZ,kBAAMA,GAAuB,GAA7B,sBApEY,uBAqEf,kBAAMA,GAAuB,GAA7B,mBArEe,gCAsEN,kBAAMA,GAAuB,GAA7B,4BAtEM,gCAuEN,kBAAMA,GAAuB,GAA7B,4BAvEM,8BAwER,kBAAMA,GAAuB,GAA7B,0BAxEQ,yBAyEb,kBAAMA,GAAuB,GAA7B,qBAzEa,uBA0Ef,kBAAMA,GAAuB,GAA7B,mBA1Ee,kCA2EJ,kBAAMA,GAAuB,GAA7B,8BA3EI,8BA4ER,kBAAMA,GAAuB,GAA7B,0BA5EQ,iCA6EL,kBAAMA,GAAuB,GAA7B,6BA7EK,2BA8EX,kBAAMA,GAAuB,GAA7B,uBA9EW,2BA+EX,kBAAMA,GAAuB,GAA7B,uBA/EW,gCAgFN,kBAAMA,GAAuB,GAA7B,4BAhFM,6BAiFT,kBAAMA,GAAuB,GAA7B,yBAjFS,qCAkFD,kBAAMA,GAAuB,GAA7B,iCAlFC,6BAmFT,kBAAMA,GAAuB,GAA7B,yBAnFS,uBAoFf,kBAAMA,GAAuB,GAA7B,mBApFe,uBAqFf,kBAAMA,GAAuB,GAA7B,mBArFe,0CAsFI,kBAAMA,GAAuB,GAA7B,sCAtFJ,wCAuFE,kBAAMA,GAAuB,GAA7B,oCAvFF,0CAwFI,kBAAMA,GAAuB,GAA7B,sCAxFJ,mDAyFa,kBAAMA,GAAuB,GAA7B,+CAzFb,sCA0FA,kBAAMA,GAAuB,GAA7B,kCA1FA,4BA2FV,kBAAMA,GAAuB,GAA7B,wBA3FU,0BA4FZ,kBAAMA,GAAuB,GAA7B,sBA5FY,wBA6Fd,kBAAMA,GAAuB,GAA7B,oBA7Fc,gCA8FN,kBAAMA,GAAuB,GAA7B,4BA9FM,6BA+FT,kBAAMA,GAAuB,GAA7B,yBA/FS,4BAgGV,kBAAMA,GAAuB,GAA7B,wBAhGU,0BAiGZ,kBAAMA,GAAuB,GAA7B,sBAjGY,2BAkGX,kBAAMA,GAAuB,GAA7B,uBAlGW,0BAmGZ,kBAAMA,GAAuB,GAA7B,sBAnGY,6BAoGT,kBAAMA,GAAuB,GAA7B,yBApGS,2BAqGX,kBAAMA,GAAuB,GAA7B,uBArGW,oBAsGlB,kBAAMA,GAAuB,GAA7B,gBAtGkB,sBAuGhB,kBAAMA,GAAuB,GAA7B,kBAvGgB,2BAwGX,kBAAMA,GAAuB,GAA7B,uBAxGW,sCAyGA,kBAAMA,GAAuB,GAA7B,kCAzGA,wBA0Gd,kBAAMA,GAAuB,GAA7B,oBA1Gc,yBA2Gb,kBAAMA,GAAuB,GAA7B,qBA3Ga,8BA4GR,kBAAMA,GAAuB,GAA7B,0BA5GQ,sBA6GhB,kBAAMA,GAAuB,GAA7B,kBA7GgB,4BA8GV,kBAAMA,GAAuB,GAA7B,wBA9GU,4BA+GV,kBAAMA,GAAuB,GAA7B,wBA/GU,4BAgHV,kBAAMA,GAAuB,GAA7B,wBAhHU,gCAiHN,kBAAMA,GAAuB,GAA7B,4BAjHM,8BAkHR,kBAAMA,GAAuB,GAA7B,0BAlHQ,gCAmHN,kBAAMA,GAAuB,GAA7B,4BAnHM,mCAoHH,kBAAMA,GAAuB,GAA7B,+BApHG,2BAqHX,kBAAMA,GAAuB,GAA7B,uBArHW,0BAsHZ,kBAAMA,GAAuB,GAA7B,sBAtHY,yBAuHb,kBAAMA,GAAuB,GAA7B,qBAvHa,4BAwHV,kBAAMA,GAAuB,GAA7B,wBAxHU,0BAyHZ,kBAAMA,GAAuB,GAA7B,sBAzHY,wBA0Hd,kBAAMA,GAAuB,GAA7B,oBA1Hc,0BA2HZ,kBAAMA,GAAuB,GAA7B,sBA3HY,qCA4HD,kBAAMA,GAAuB,GAA7B,iCA5HC,0CA6HI,kBAAMA,GAAuB,GAA7B,sCA7HJ,kCA8HJ,kBAAMA,GAAuB,GAA7B,8BA9HI,wCA+HE,kBAAMA,GAAuB,GAA7B,oCA/HF,gCAgIN,kBAAMA,GAAuB,GAA7B,4BAhIM,2BAiIX,kBAAMA,GAAuB,GAA7B,uBAjIW,6BAkIT,kBAAMA,GAAuB,GAA7B,yBAlIS,6BAmIT,kBAAMA,GAAuB,GAA7B,yBAnIS,2BAoIX,kBAAMA,GAAuB,GAA7B,uBApIW,sBAqIhB,kBAAMA,GAAuB,GAA7B,kBArIgB,wBAsId,kBAAMA,GAAuB,GAA7B,oBAtIc,gCAuIN,kBAAMA,GAAuB,GAA7B,4BAvIM,2BAwIX,kBAAMA,GAAuB,GAA7B,uBAxIW,8BAyIR,kBAAMA,GAAuB,GAA7B,0BAzIQ,uCA0IC,kBAAMA,GAAuB,GAA7B,mCA1ID,0CA2II,kBAAMA,GAAuB,GAA7B,sCA3IJ,4BA4IV,kBAAMA,GAAuB,GAA7B,wBA5IU,4BA6IV,kBAAMA,GAAuB,GAA7B,wBA7IU,uBA8If,kBAAMA,GAAuB,GAA7B,mBA9Ie,2BA+IX,kBAAMA,GAAuB,GAA7B,uBA/IW,6BAgJT,kBAAMA,GAAuB,GAA7B,yBAhJS,6BAiJT,kBAAMA,GAAuB,GAA7B,yBAjJS,uBAkJf,kBAAMA,GAAuB,GAA7B,mBAlJe,0BAmJZ,kBAAMA,GAAuB,GAA7B,sBAnJY,4BAoJV,kBAAMA,GAAuB,GAA7B,wBApJU,2BAqJX,kBAAMA,GAAuB,GAA7B,uBArJW,yBAsJb,kBAAMA,GAAuB,GAA7B,qBAtJa,+BAuJP,kBAAMA,GAAuB,GAA7B,2BAvJO,6BAwJT,kBAAMA,GAAuB,GAA7B,yBAxJS,6BAyJT,kBAAMA,GAAuB,GAA7B,yBAzJS,oCA0JF,kBAAMA,GAAuB,GAA7B,gCA1JE,sBA2JhB,kBAAMA,GAAuB,GAA7B,kBA3JgB,0BA4JZ,kBAAMA,GAAuB,GAA7B,sBA5JY,yBA6Jb,kBAAMA,GAAuB,GAA7B,qBA7Ja,4BA8JV,kBAAMA,GAAuB,GAA7B,wBA9JU,0BA+JZ,kBAAMA,GAAuB,GAA7B,sBA/JY,uBAgKf,kBAAMA,GAAuB,GAA7B,mBAhKe,8BAiKR,kBAAMA,GAAuB,GAA7B,0BAjKQ,4BAkKV,kBAAMA,GAAuB,GAA7B,wBAlKU,qBAmKjB,kBAAMA,GAAuB,GAA7B,iBAnKiB,uBAoKf,kBAAMA,GAAuB,GAA7B,mBApKe,yBAqKb,kBAAMA,GAAuB,GAA7B,qBArKa,+BAsKP,kBAAMA,GAAuB,GAA7B,2BAtKO,2BAuKX,kBAAMA,GAAuB,GAA7B,uBAvKW,6BAwKT,kBAAMA,GAAuB,GAA7B,yBAxKS,wCAyKE,kBAAMA,GAAuB,GAA7B,oCAzKF,0BA0KZ,kBAAMA,GAAuB,GAA7B,sBA1KY,gDA2KU,kBAAMA,GAAuB,GAA7B,4CA3KV,2CA4KK,kBAAMA,GAAuB,GAA7B,uCA5KL,+BA6KP,kBAAMA,GAAuB,GAA7B,2BA7KO,yCA8KG,kBAAMA,GAAuB,GAA7B,qCA9KH,kCA+KJ,kBAAMA,GAAuB,GAA7B,8BA/KI,qCAgLD,kBAAMA,GAAuB,GAA7B,iCAhLC,mCAiLH,kBAAMA,GAAuB,GAA7B,+BAjLG,gCAkLN,kBAAMA,GAAuB,GAA7B,4BAlLM,iCAmLL,kBAAMA,GAAuB,GAA7B,6BAnLK,+BAoLP,kBAAMA,GAAuB,GAA7B,2BApLO,+BAqLP,kBAAMA,GAAuB,GAA7B,2BArL/B,IAuLMQ,GAAgBC,gCAAqB,GAAQ,CAC7CC,iBAD6C,OAE7CC,WAAYvQ,YAAgB,CAC1BwQ,IAD0B,SAE1BC,QAF0B,SAG1Br6D,QALR,WAQMs6D,GAAkBC,iC,mVAAsB,CAAD,yBAGtC,CACDC,iBADC,GAEDN,iBALN,SAQA,OAAQtQ,KAAR,IACE,IAAI,MACF6Q,GAASC,4BAAiBV,GAAe,CAAEW,QAA3CF,SACA,MACF,QACEA,GAASG,8BALb,I,6OC/MO,IAAMC,GAAqB,CAChCz/D,KADgC,MAEhCC,MAIO,aAAc,CACnBE,IADmB,cAEjB,OAKN,YACE,MAAO,CACL6uC,eAAgB,mBAIpB,YAA+B,IACrBhvC,EAAgBP,EADI,KACdkC,EAAUlC,EADI,QAEgB4P,aAFhB,GAEpBK,EAFoB,SAEZ9P,EAFY,YAEE2f,EAFF,8BAG5B,OACE,wBACEvf,KADF,EAEE8Q,KAFF,EAGEoL,MAHF,EAIEva,MALJ,IAP6B+9D,C,mVAAc,CAAD,CAAG1/D,KAAH,GAAxB,MAPP2/D,CAAP,O,6OCRC,IAAMC,GAAmB,CAC9B5/D,KAD8B,UAE9BC,MAIO,aAAc,CACnBE,IADmB,cAEjB,OAKN,YACE,MAAO,CACL6uC,eAAgB,mBAIpB,YAA6B,IACnBhvC,EAAgBP,EADE,KACZkC,EAAUlC,EADE,QAEkB4P,aAFlB,GAElBK,EAFkB,SAEV9P,EAFU,YAEI2f,EAFJ,8BAG1B,OACE,wBACEvf,KADF,EAEE8Q,KAFF,EAGEoL,MAHF,EAIEva,MALJ,IAP6Bk+D,C,mVAAY,CAAD,CAAG7/D,KAAH,GAAtB,MAPP2/D,CAAP,O,6OCRC,IAAMG,GAAuB,CAClC9/D,KADkC,eAElCC,MAIO,aAAc,CACnBE,IADmB,cAEjB,OAKN,YACE,MAAO,CACL6uC,eAAgB,mBAIpB,YAAiC,IACvBhvC,EAAgBP,EADM,KAChBkC,EAAUlC,EADM,QAEc4P,aAFd,GAEtBK,EAFsB,SAEd9P,EAFc,YAEA2f,EAFA,8BAG9B,OACE,wBACEvf,KADF,EAEE8Q,KAFF,EAGEoL,MAHF,EAIEva,MALJ,IAP6Bo+D,C,mVAAgB,CAAD,CAAG//D,KAAH,GAA1B,MAPP2/D,CAAP,O,6OCRC,IAAMK,GAAoB,CAC/BhgE,KAD+B,WAE/BC,MAIO,aAAc,CACnBE,IADmB,cAEjB,OAKN,YACE,MAAO,CACL6uC,eAAgB,mBAIpB,YAA8B,IACpBhvC,EAAgBP,EADG,KACbkC,EAAUlC,EADG,QAEiB4P,aAFjB,GAEnBK,EAFmB,SAEX9P,EAFW,YAEG2f,EAFH,8BAG3B,OACE,wBACEvf,KADF,EAEE8Q,KAFF,EAGEoL,MAHF,EAIEva,MALJ,IAP6Bs+D,C,mVAAa,CAAD,CAAGjgE,KAAH,GAAvB,MAPP2/D,CAAP,O,6OCgBN,IAAM1/D,GAAyB,CAAC,EAAD,YCxBW,CACxCD,KADwC,qBAExCC,MAIO,aAAc,CACnBE,IADmB,cAEjB,OAKN,YACE,MAAO,CACL6uC,eAAgB,mBAIpB,YAAuC,IAC7BhvC,EAAgBP,EADY,KACtBkC,EAAUlC,EADY,QAEQ4P,aAFR,GAE5BK,EAF4B,SAEpB9P,EAFoB,YAEN2f,EAFM,8BAGpC,OACE,wBACEvf,KADF,EAEE8Q,KAFF,EAGEoL,MAHF,EAIEva,MALJ,IAP6Bu+D,C,mVAAsB,CAAD,CAAGlgE,KAAH,GAAhC,MAPP2/D,CAAP,QDyBeQ,G,mLAEZl7D,MAAe,CACpBzE,MADoB,a,EAoBd69C,YAAc,YACpB,WAAc,CAAE79C,MAAhB,K,wDAIA,OACE,kBAAC,IAAD,cACE,sBAAcP,MADhB,KAEE,qBAAyBN,KAAzB,UACE,kBAAC,GAAD,UAAuBc,MAAOd,KAA9B,cACE,qBALR,W,gCArBiD,IACrBygE,EAAiBhiB,GAApCz+C,KAAKsF,MADkC,OAGhD,MAAO,CACL9F,QADK,EAELqB,MAFF,K,mCAOA,MAAO,CACLR,KAAML,KAAKsF,MADN,MAELo5C,YAAa1+C,KAFf,iB,GAhB6BsG,IAAMI,WEnCvC,Q,ml+FCFA,IAAI/B,EAAM,CACT,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,QAAS,IACT,WAAY,IACZ,OAAQ,IACR,UAAW,IACX,QAAS,IACT,WAAY,IACZ,QAAS,IACT,aAAc,IACd,gBAAiB,IACjB,WAAY,IACZ,UAAW,IACX,aAAc,IACd,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,UAAW,IACX,OAAQ,IACR,YAAa,IACb,eAAgB,IAChB,UAAW,IACX,OAAQ,IACR,UAAW,IACX,aAAc,IACd,gBAAiB,IACjB,OAAQ,IACR,UAAW,IACX,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,IACd,UAAW,IACX,aAAc,KAIf,SAAS+7D,EAAeC,GACvB,IAAIv7C,EAAKw7C,EAAsBD,GAC/B,OAAOE,EAAoBz7C,GAE5B,SAASw7C,EAAsBD,GAC9B,IAAIE,EAAoBC,EAAEn8D,EAAKg8D,GAAM,CACpC,IAAI/nB,EAAI,IAAIjO,MAAM,uBAAyBg2B,EAAM,KAEjD,MADA/nB,EAAEmoB,KAAO,mBACHnoB,EAEP,OAAOj0C,EAAIg8D,GAEZD,EAAer/D,KAAO,WACrB,OAAOD,OAAOC,KAAKsD,IAEpB+7D,EAAeM,QAAUJ,EACzBK,EAAOC,QAAUR,EACjBA,EAAet7C,GAAK,K,oBCnRpB67C,EAAOC,QAAU,IAA0B,wC","file":"static/js/app.3ba808c0.chunk.js","sourcesContent":["export const mapping = require('./mapping.json');\nexport const light = require('./themes/light.json');\nexport const dark = require('./themes/dark.json');\n","import React from 'react';\nimport { SvgProps } from 'react-native-svg';\nimport { IconProvider } from 'react-native-ui-kitten';\n\ntype IconElement = React.ReactElement<SvgProps>;\ntype IconComponent = React.ComponentType<SvgProps>;\n\nexport class EvaIcon implements IconProvider<SvgProps> {\n\n  constructor(private content: IconComponent) {\n  }\n\n  public toReactElement(props: SvgProps): IconElement {\n    const Icon: IconComponent = this.content;\n\n    // @ts-ignore - Eva maps icon color to `tintColor`\n    const { tintColor, ...restProps } = props;\n\n    return (\n      <Icon\n        fill={tintColor}\n        {...restProps}\n      />\n    );\n  }\n}\n","import { IconPack } from 'react-native-ui-kitten';\nimport { SvgProps } from 'react-native-svg';\nimport { createIconsMap } from './createIconsMap';\n\nexport const EvaIconsPack: IconPack<SvgProps> = {\n  name: 'eva',\n  icons: createIconsMap(),\n};\n\n","import { IconProvider } from 'react-native-ui-kitten';\nimport { SvgProps } from 'react-native-svg';\nimport { findIconByName } from 'react-native-eva-icons/icons';\nimport { EvaIcon } from './evaIcon.component';\n\nexport const createIconsMap = (): { [key: string]: IconProvider<SvgProps> } => {\n  return new Proxy({}, {\n    get(target: {}, name: string): IconProvider<SvgProps> {\n      return new EvaIcon(findIconByName(name));\n    },\n  });\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ThemeType } from './type';\n\nconst SYMBOL_REFERENCE: string = '$';\n\n/**\n * @param name: string - theme property name, like `backgroundColor`\n * @param theme: ThemeType - theme\n * @param fallback: any - fallback value\n *\n * @return any. Theme property value if it presents in theme, fallback otherwise\n */\nexport function getThemeValue(name: string, theme: ThemeType, fallback?: any): any | undefined {\n  if (isReferenceKey(name)) {\n    const themeKey: string = toThemeKey(name);\n\n    return findThemeValue(themeKey, theme) || fallback;\n  }\n\n  return findThemeValue(name, theme) || fallback;\n}\n\nfunction findThemeValue(name: string, theme: ThemeType): any | undefined {\n  const value: any = theme[name];\n\n  if (isReferenceKey(value)) {\n    const themeKey: string = toThemeKey(value);\n\n    return findThemeValue(themeKey, theme);\n  }\n\n  return value;\n}\n\n/**\n * @returns true if theme value references to another\n */\nfunction isReferenceKey(value: any): boolean {\n  return `${value}`.startsWith(SYMBOL_REFERENCE);\n}\n\n/**\n * Transforms reference key to theme key\n */\nfunction toThemeKey(value: any): string {\n  return `${value}`.substring(1);\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { ThemedStyleType } from '@eva-design/dss';\nimport { StyleType } from './type';\nimport { getThemeValue } from '../theme/theme.service';\nimport { ThemeType } from '../theme/type';\n\nexport function createThemedStyle(mapping: ThemedStyleType, theme: ThemeType): StyleType {\n  return Object.keys(mapping).reduce((acc: StyleType, current: string): StyleType => {\n    const mappingValue: any = mapping[current];\n\n    return { ...acc, [current]: getThemeValue(mappingValue, theme, mappingValue) };\n  }, {});\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  ControlMetaType,\n  ControlThemedStyleType,\n  ThemedStyleType,\n  ThemeStyleType,\n} from '@eva-design/dss';\nimport {\n  ContextProps,\n  StyledComponentProps,\n} from './styleConsumer.component';\nimport { createThemedStyle } from './style.service';\nimport { Interaction } from './type';\n\nconst SEPARATOR_MAPPING_ENTRY: string = '.';\n\ninterface StyleInfo {\n  appearance: string;\n  variants: string[];\n  states: string[];\n}\n\nexport class StyleConsumerService {\n\n  private readonly name: string;\n  private readonly meta: ControlMetaType;\n\n  constructor(name: string, context: ContextProps) {\n    this.name = name;\n\n    this.meta = this.safe(context.style[name], (generatedConfig): ControlMetaType => {\n      return generatedConfig.meta;\n    });\n\n    if (!this.meta) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `\\n${this.name}: unsupported configuration.`,\n        'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n        `📖 Documentation: ${docRoot}/guides/install-into-existing-app#configure-application-root`,\n        '\\nIn case you have all in place, there might be an incorrect usage of a \"styled\" function.',\n        `📖 Documentation: ${docRoot}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.error(message);\n    }\n  }\n\n  public createDefaultProps<P extends object>(): StyledComponentProps {\n    const appearance: string = this.getDefaultAppearance();\n    const variants: { [key: string]: string } = this.getDefaultVariants();\n    const states: { [key: string]: boolean } = this.getDefaultStates();\n\n    return { appearance, ...variants, ...states };\n  }\n\n  public withStyledProps<P extends object>(source: P,\n                                           context: ContextProps,\n                                           interaction: Interaction[]): P & StyledComponentProps {\n\n    const styleInfo: StyleInfo = this.getStyleInfo(source, interaction);\n\n    const generatedMapping: ThemedStyleType = this.getGeneratedStyleMapping(context.style, styleInfo);\n\n    if (!generatedMapping) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Check one of the following prop values ${JSON.stringify(styleInfo, null, 2)}`,\n        `📖 Documentation: ${docRoot}/components/${this.name.toLowerCase()}/api`,\n      ].join('\\n');\n\n      console.warn(message);\n\n      return this.withStyledProps({ ...source, ...this.createDefaultProps() }, context, interaction);\n    }\n\n    const mapping = this.withValidParameters(generatedMapping);\n\n    return {\n      ...source,\n      theme: context.theme,\n      themedStyle: createThemedStyle(mapping, context.theme),\n    };\n  }\n\n  private getGeneratedStyleMapping<P extends StyledComponentProps>(style: ThemeStyleType,\n                                                                   info: StyleInfo): ThemedStyleType {\n\n    return this.safe(style[this.name], (componentStyles: ControlThemedStyleType): ThemedStyleType => {\n      const styleKeys: string[] = Object.keys(componentStyles.styles);\n      const query: string = this.findGeneratedQuery(info, styleKeys);\n\n      return componentStyles.styles[query];\n    });\n  }\n\n  private withValidParameters(mapping: ThemedStyleType): ThemedStyleType {\n    const invalidParameters: string[] = [];\n\n    Object.keys(mapping).forEach((key: string) => {\n      if (!Object.keys(this.meta.parameters).includes(key)) {\n        invalidParameters.push(key);\n        delete mapping[key];\n      }\n    });\n\n    if (invalidParameters.length !== 0) {\n      const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n      const message: string = [\n        `${this.name}: unsupported configuration.`,\n        `Unable to apply ${invalidParameters}`,\n        'There might be an incorrect usage of mapping',\n        `📖 Documentation: ${docRoot}/design-system/custom-component-mapping`,\n      ].join('\\n');\n\n      console.warn(message);\n    }\n\n    return mapping;\n  }\n\n  private getStyleInfo<P extends StyledComponentProps>(props: P, interaction: Interaction[]): StyleInfo {\n    const variantProps: Partial<P> = this.getDerivedVariants(this.meta, props);\n    const stateProps: Partial<P> = this.getDerivedStates(this.meta, props);\n\n    const variants: string[] = Object.keys(variantProps).map((variant: string): string => {\n      return variantProps[variant];\n    });\n\n    const states: string[] = Object.keys(stateProps);\n\n    return {\n      appearance: props.appearance,\n      variants: variants,\n      states: [...states, ...interaction],\n    };\n  }\n\n  private getDefaultAppearance(): string {\n    const matches: string[] = Object.keys(this.meta.appearances).filter((appearance: string): boolean => {\n      return this.meta.appearances[appearance].default === true;\n    });\n\n    return matches[matches.length - 1];\n  }\n\n  private getDefaultVariants(): { [key: string]: any } {\n    return this.transformObject(this.meta.variantGroups, (variants, group: string): string | undefined => {\n      return Object.keys(variants[group]).find((variant: string): boolean => {\n\n        return variants[group][variant].default === true;\n      });\n    });\n  }\n\n  private getDefaultStates(): { [key: string]: any } {\n    return this.transformObject(this.meta.states, (states, state: string): boolean | undefined => {\n      const isDefault: boolean = states[state].default === true;\n\n      return isDefault ? isDefault : undefined;\n    });\n  }\n\n  private getDerivedVariants<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): string | undefined => {\n      const isVariant: boolean = Object.keys(meta.variantGroups).includes(prop);\n\n      return isVariant ? p[prop] : undefined;\n    });\n  }\n\n  private getDerivedStates<P extends StyledComponentProps>(meta: ControlMetaType, props: P): Partial<P> {\n    return this.transformObject(props, (p: P, prop: string): boolean => {\n      const isState: boolean = Object.keys(meta.states).includes(prop);\n      const isAssigned: boolean = p[prop] === true;\n\n      return isState && isAssigned;\n    });\n  }\n\n  /**\n   * Iterates throw `value` object keys and fills it values with values provided by `transform` callback\n   * If `transform` returns `undefined`, then appends nothing\n   *\n   * @param value (V extends object) - object to transform\n   * @param transform - object key transformation callback\n   */\n  private transformObject<V extends object>(value: V, transform: (value: V, key: string) => any): Partial<V> {\n    return Object.keys(value).reduce((acc: Partial<V>, key: string): any => {\n      const nextValue: any = transform(value, key);\n\n      return nextValue ? {\n        ...acc,\n        [key]: nextValue,\n      } : acc;\n    }, {});\n  }\n\n  /**\n   * Finds identical keys across `source` keys array\n   *\n   * Example:\n   *\n   * source = ['default.error.small.checked', ...]\n   * info = { appearance: 'default', variants: ['small', 'error'], states: ['checked'] }\n   *\n   * will return ['default', 'error', 'small', 'checked']\n   *\n   * @param info (StyleInfo) - component style info\n   * @param source (string[]) - array of style keys\n   *\n   * @return (string | undefined) - key identical to some of `source` keys if presents\n   */\n  private findGeneratedQuery(info: StyleInfo, source: string[]): string | undefined {\n    const query: string[] = [\n      info.appearance,\n      ...info.variants,\n      ...info.states,\n    ];\n\n    const matches: string[] = source.filter((key: string): boolean => {\n      const keyQuery: string[] = key.split(SEPARATOR_MAPPING_ENTRY);\n\n      return this.compareArrays(query, keyQuery);\n    });\n\n    return matches[0];\n  }\n\n  /**\n   * @param lhs (string[]) - comparable array\n   * @param rhs (string[]) - comparing array\n   *\n   * @return true if all of lhs keys are included in rhs\n   */\n  private compareArrays(lhs: string[], rhs: string[]): boolean {\n    if (lhs.length !== rhs.length) {\n      return false;\n    }\n\n    return lhs.reduce((acc: boolean, current: string): boolean => acc && rhs.includes(current), true);\n  }\n\n  /**\n   * Safely retrieves R value of T object with reducer\n   *\n   * @param value (T | undefined) - unsafe object which should be processed\n   * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n   * @param fallback (R) - fallback value to return. Optional\n   *\n   * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `fallback` otherwise\n   **/\n  private safe<T, R>(value: T | undefined, reducer: (value: T) => R, fallback?: R): R | undefined {\n    if (value) {\n      return reducer(value);\n    }\n\n    return fallback;\n  }\n}\n","import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\n\nconst defaultValue: ThemeStyleType = {};\n\nexport const MappingContext: React.Context<ThemeStyleType> = React.createContext(defaultValue);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeType } from './type';\n\nconst defaultValue: ThemeType = {};\n\nexport const ThemeContext: React.Context<ThemeType> = React.createContext(defaultValue);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { StyleConsumerService } from './styleConsumer.service';\nimport {\n  Interaction,\n  StyleType,\n} from './type';\nimport { MappingContext } from '../mapping/mappingContext';\nimport { ThemeContext } from '../theme/themeContext';\nimport { ThemeType } from '../theme/type';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.Ref<T>;\n}\n\nexport interface StyledComponentProps {\n  appearance?: string;\n  theme?: ThemeType;\n  themedStyle?: StyleType;\n  dispatch?: (interaction: Interaction[]) => void;\n}\n\ninterface State {\n  interaction: Interaction[];\n}\n\nexport interface ContextProps {\n  style: ThemeStyleType;\n  theme: ThemeType;\n}\n\nexport type StyledComponentClass<P> = React.ComponentClass<StyledComponentProps & P>;\n\n/**\n * `styled` is a High Order Function which is used to apply style mapping on component.\n *\n * Requires component to have `styledComponentName` string property which defines\n * corresponding component name in mapping. (e.g 'Button' for Button component).\n * Returns component class which can be used as styled component.\n *\n * @property {string} appearance - Determines style appearance of component. Default is provided by mapping.\n *\n * @property {ThemeType} theme - Determines theme used to style component.\n *\n * @property {StyleType} themedStyle - Determines component style for it's current state.\n *\n * @property {(interaction: Interaction[]) => void} dispatch - Determines function\n * for dispatching current state of component. This is designed to be used as style request function.\n * Calls component re-render if style for requested state differ from current.\n *\n * @param Component - Type: {React.ComponentClass}. Determines class or functional component to be styled.\n *\n * @overview-example Declaring Styled Component\n *\n * ```\n * import React from 'react';\n * import { TouchableOpacity } from 'react-native';\n * import { styled, Interaction } from 'react-native-ui-kitten';\n *\n * class Button extends React.Component {\n *\n *   // Define component name used in `mapping`\n *   static styledComponentName = 'Button';\n *\n *   onPressIn = (e) => {\n *     // Request styles for `active` state and re-render\n *\n *     this.props.dispatch([Interaction.ACTIVE]);\n *\n *     if(this.props.onPressIn) {\n *       this.props.onPressIn(e);\n *     }\n *   };\n *\n *   onPressOut = (e) => {\n *     // Request styles for default state and re-render\n *\n *     this.props.dispatch([]);\n *\n *     if(this.props.onPressOut) {\n *       this.props.onPressOut(e);\n *     }\n *   };\n *\n *   render() {\n *     // Retrieve styles for current state from props (provided with themedStyle prop)\n *     // And apply it with saving priority of `style` prop\n *\n *     const { style, themedStyle, ...restProps } = this.props;\n *\n *     return (\n *       <TouchableOpacity\n *         {...restProps}\n *         style={[themedStyle, style]}\n *         onPressIn={this.onPressIn}\n *         onPressOut={this.onPressOut}\n *       />\n *     );\n *   }\n * }\n *\n * export const StyledButton = styled(Button);\n * ```\n *\n * @overview-example Styled Component Usage\n *\n * ```\n * import React from 'react';\n * import { StyledButton } from './path-to/styledButton.component';\n *\n * export const StyledButtonShowcase = (props) => (\n *   <StyledButton {...props}/>\n * );\n * ```\n */\nexport const styled = <P extends object>(Component: React.ComponentType<P>): StyledComponentClass<P> => {\n\n  // @ts-ignore\n  if (!Component.styledComponentName) {\n    console.warn('Styled components should specify corresponding style name.');\n    return null;\n  }\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = StyledComponentProps & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElement = React.ReactElement<WrappedProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.Component<WrappingProps, State> {\n\n    public state: State = {\n      interaction: [],\n    };\n\n    private init: boolean = false;\n\n    // Yes. This is not static because it is calculated once we got some meta from style context.\n    private defaultProps: StyledComponentProps;\n    private service: StyleConsumerService;\n\n    private onInit = (context: ContextProps) => {\n\n      // @ts-ignore\n      this.service = new StyleConsumerService(Component.styledComponentName, context);\n      this.defaultProps = this.service.createDefaultProps();\n\n      this.init = true;\n    };\n\n    private onDispatch = (interaction: Interaction[]) => {\n      this.setState({ interaction });\n    };\n\n    private withStyledProps = (source: P, context: ContextProps): WrappedProps => {\n      const { interaction } = this.state;\n\n      const props: WrappingProps = { ...this.defaultProps, ...source };\n\n      return this.service.withStyledProps(props, context, interaction);\n    };\n\n    private renderWrappedElement = (context: ContextProps): WrappedElement => {\n      if (!this.init) {\n        this.onInit(context);\n      }\n\n      const { forwardedRef, ...restProps } = this.props;\n      const props: P & StyledComponentProps = this.withStyledProps(restProps as P, context);\n\n      return (\n        <Component\n          {...props}\n          ref={forwardedRef}\n          dispatch={this.onDispatch}\n        />\n      );\n    };\n\n    public render(): React.ReactNode {\n      const StyledElement = this.renderWrappedElement;\n\n      return (\n        <MappingContext.Consumer>{(styles: ThemeStyleType): WrappedElement => (\n          <ThemeContext.Consumer>{(theme: ThemeType): WrappedElement => (\n            <StyledElement style={styles} theme={theme}/>\n          )}</ThemeContext.Consumer>\n        )}</MappingContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps, ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ResultComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ResultComponent.displayName = Component.displayName || Component.name;\n\n  // @ts-ignore\n  hoistNonReactStatics(ResultComponent, Component);\n\n  // @ts-ignore\n  return ResultComponent;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { ThemeContext } from './themeContext';\nimport {\n  StyleSheetType,\n  ThemedStyleType,\n  ThemeType,\n} from './type';\nimport { createThemedStyle } from '../style/style.service';\nimport { StyleType } from '@kitten/theme';\n\ninterface PrivateProps<T> {\n  forwardedRef?: React.RefObject<T>;\n}\n\nexport interface ThemedComponentProps {\n  theme?: ThemeType;\n  themedStyle?: ThemedStyleType | undefined;\n}\n\nexport type CreateStylesFunction = (theme: ThemeType) => StyleSheetType;\n\nexport interface Context {\n  theme: ThemeType;\n}\n\nexport type ThemedComponentClass<P> = React.ComponentClass<ThemedComponentProps & P>;\n\n/**\n * `withStyles` is a High Order Function which is used to create themed style for non-styled component.\n * Basically used when need to use theme variable somewhere.\n * Returns component class which can be used as themed component.\n *\n * @property {ThemeType} theme - Determines theme used to style component.\n *\n * @property {StyleType} themedStyle - Determines component style for it's current state.\n *\n * @param Component - Type: {React.ComponentClass}. Determines class of component to be themed.\n *\n * @param createStyles - Type: {(theme: ThemeType) => any}. Determines arrow function used to create styles.\n *\n * @overview-example Declaring Themed Component\n *\n * ```\n * import React from 'react';\n * import { TouchableOpacity } from 'react-native';\n * import { withStyles } from 'react-native-ui-kitten';\n *\n * class Button extends React.Component {\n *\n *   render() {\n *     // Retrieve styles from props (provided with themedStyle prop)\n *     // And apply it with saving priority of `style` prop\n *\n *     const { style, themedStyle, ...restProps } = this.props;\n *\n *     return (\n *       <TouchableOpacity\n *         {...restProps}\n *         style={[themedStyle, style]}\n *       />\n *     );\n *   }\n * }\n *\n * export const ThemedButton = withStyles(Button, (theme) => ({\n *   backgroundColor: theme['color-primary-default'],\n * }));\n * ```\n *\n * @overview-example Themed Component Usage\n *\n * ```\n * import React from 'react';\n * import { ThemedButton } from './path-to/themedButton.component';\n *\n * export const ThemedButtonShowcase = (props) => (\n *   <ThemedButton {...props}/>\n * );\n * ```\n */\nexport const withStyles = <P extends object>(Component: React.ComponentType<P>,\n                                             createStyles?: CreateStylesFunction): ThemedComponentClass<P> => {\n\n  type WrappingProps = PrivateProps<WrappedElementInstance> & WrappedProps;\n  type WrappedProps = ThemedComponentProps & P;\n  type WrappingElement = React.ReactElement<WrappingProps>;\n  type WrappedElement = React.ReactElement<WrappedProps>;\n  type WrappedElementInstance = React.ReactInstance;\n\n  class Wrapper extends React.Component<WrappingProps> {\n\n    private createThemedStyles = (style: ThemedStyleType, theme: ThemeType): ThemedStyleType => {\n      return Object.keys(style).reduce((acc: StyleType, current: string): ThemedStyleType => {\n        return { ...acc, [current]: createThemedStyle(style[current], theme) };\n      }, {});\n    };\n\n    private withThemedProps = (source: P, context: Context): WrappedProps => {\n      const style: ThemedStyleType = createStyles ? createStyles(context.theme) : {};\n\n      return {\n        ...source,\n        theme: context.theme,\n        themedStyle: this.createThemedStyles(style, context.theme),\n      };\n    };\n\n    private renderWrappedElement = (context: Context): WrappedElement => {\n      const { forwardedRef, ...restProps } = this.props;\n      const props: WrappedProps = this.withThemedProps(restProps as P, context);\n\n      return (\n        <Component\n          {...props}\n          ref={forwardedRef}\n        />\n      );\n    };\n\n    public render(): React.ReactNode {\n      const ThemedElement = this.renderWrappedElement;\n\n      return (\n        <ThemeContext.Consumer>{(theme: ThemeType): React.ReactElement<P> => (\n          <ThemedElement theme={theme}/>\n        )}</ThemeContext.Consumer>\n      );\n    }\n  }\n\n  const WrappingElement = (props: WrappingProps, ref: React.Ref<WrappedElementInstance>): WrappingElement => {\n    return (\n      // @ts-ignore\n\n      <Wrapper\n        {...props}\n        forwardedRef={ref}\n      />\n    );\n  };\n\n  const ThemedComponent = React.forwardRef<WrappedElementInstance, WrappingProps>(WrappingElement);\n\n  ThemedComponent.displayName = Component.displayName || Component.name;\n\n  // @ts-ignore\n  hoistNonReactStatics(ThemedComponent, Component);\n\n  // @ts-ignore\n  return ThemedComponent;\n};\n","/**\n * Safely retrieves R value of T object with reducer\n *\n * @param value (T | undefined) - unsafe object which should be processed\n * @param reducer ((T) => R) - `value` processing lambda. Called if `value` is not `undefined`\n *\n * @return (R | undefined) - object returned by `reducer` if `value` is not `undefined`, `undefined` otherwise\n **/\nexport function safe<T, R>(value: T | undefined, reducer: (value: T) => R): R | undefined {\n  if (value) {\n    return reducer(value);\n  }\n  return undefined;\n}\n\n/**\n * Maps 2-dim array to 1-dim\n *\n * @param params (T[][]) - 2-dim array\n *\n * @return 1-dim array\n */\nexport function flatten<T>(params: T[][]): T[] {\n  return [].concat(...params);\n}\n\n/**\n * Removes all duplicates from array\n *\n * @param params (T[]) - array with possible duplicate values\n *\n * @return (T[]) - processed array\n */\nexport function noDuplicates<T>(params: T[]): T[] {\n  return [...new Set(params)];\n}\n\n\n/**\n * Removes null and undefined values from array\n *\n * @param params (T[]) - array with possible null values\n *\n * @return (T[]) - processed array\n */\nexport function noNulls<T>(params: T[]): T[] {\n  return params.filter(Boolean);\n}\n\n/**\n * Returns Object with string keys from array type [string, IndexSignatureBase]\n *\n * @param array like [string, IndexSignatureBase]\n *\n * @return object with string keys and IndexSignatureBase values\n */\nexport function toObject(array: [string, any][]): any {\n  return array.reduce((p, c) => {\n    if (p && p.hasOwnProperty(c[0])) {\n      p[c[0]] = { ...p[c[0]], ...c[1] };\n    } else {\n      p[c[0]] = c[1];\n    }\n    return p;\n  }, {});\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n  AppearanceMappingType,\n  MappingType,\n  StatelessMappingType,\n} from '@eva-design/dss';\nimport { safe } from '../common';\n\nexport function getComponentDefaultAppearance(mapping: ThemeMappingType,\n                                              component: string): string | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string => {\n    const { appearances } = value.meta;\n\n    return Object.keys(appearances).find((appearance: string): boolean => {\n      return appearances[appearance].default === true;\n    });\n  });\n}\n\nexport function getComponentDefaultVariants(mapping: ThemeMappingType,\n                                            component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups).map((group: string): string => {\n      return Object.keys(variantGroups[group]).find((variant: string): boolean => {\n        return variantGroups[group][variant].default === true;\n      });\n    });\n  });\n}\n\nexport function getComponentDefaultState(mapping: ThemeMappingType,\n                                         component: string): string | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string => {\n    const { states } = value.meta;\n\n    return Object.keys(states).find((state: string): boolean => {\n      return states[state].default === true;\n    });\n  });\n}\n\nexport function getComponentVariantGroups(mapping: ThemeMappingType,\n                                          component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups);\n  });\n}\n\nexport function getComponentVariants(mapping: ThemeMappingType,\n                                     component: string): string[][] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[][] => {\n    const { variantGroups } = value.meta;\n\n    return Object.keys(variantGroups).map((group: string): string[] => {\n      return Object.keys(variantGroups[group]);\n    });\n  });\n}\n\nexport function getComponentStates(mapping: ThemeMappingType,\n                                   component: string): string[] | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): string[] => {\n    const { states } = value.meta;\n\n    return Object.keys(states);\n  });\n}\n\nexport function getStateAppearanceMapping(mapping: ThemeMappingType,\n                                          component: string,\n                                          appearance: string,\n                                          state: string): StatelessMappingType | undefined {\n\n  const appearanceMapping: MappingType = getAppearanceMapping(mapping, component, appearance);\n\n  return safe(appearanceMapping, (value: MappingType): StatelessMappingType => {\n    return getStateMapping(value, state);\n  });\n}\n\nexport function getStatelessAppearanceMapping(mapping: ThemeMappingType,\n                                              component: string,\n                                              appearance: string): StatelessMappingType | undefined {\n\n  const appearanceMapping: MappingType = getAppearanceMapping(mapping, component, appearance);\n\n  return safe(appearanceMapping, (value: MappingType): StatelessMappingType => {\n    const { state, ...params } = value;\n\n    return params as StatelessMappingType;\n  });\n}\n\nexport function getStateVariantMapping(mapping: ThemeMappingType,\n                                       component: string,\n                                       appearance: string,\n                                       variant: string,\n                                       state: string): MappingType | undefined {\n\n  const variantMapping: MappingType = getVariantMapping(mapping, component, appearance, variant);\n\n  return safe(variantMapping, (value: MappingType): MappingType => {\n    return getStateMapping(value, state);\n  });\n}\n\nexport function getStatelessVariantMapping(mapping: ThemeMappingType,\n                                           component: string,\n                                           appearance: string,\n                                           variant: string): StatelessMappingType | undefined {\n\n  const variantMapping: MappingType = getVariantMapping(mapping, component, appearance, variant);\n\n  return safe(variantMapping, (value: MappingType): StatelessMappingType => {\n    const { state, ...params } = value;\n\n    return params as StatelessMappingType;\n  });\n}\n\nexport function getComponentMapping(mapping: ThemeMappingType,\n                                    component: string): ControlMappingType | undefined {\n\n  return mapping[component];\n}\n\nfunction getAppearance(mapping: ThemeMappingType,\n                       component: string,\n                       appearance: string): AppearanceMappingType | undefined {\n\n  const componentMapping: ControlMappingType = getComponentMapping(mapping, component);\n\n  return safe(componentMapping, (value: ControlMappingType): AppearanceMappingType => {\n    return value.appearances[appearance];\n  });\n}\n\nfunction getAppearanceMapping(mapping: ThemeMappingType,\n                              component: string,\n                              appearance: string): MappingType | undefined {\n\n  const appearanceConfig: AppearanceMappingType = getAppearance(mapping, component, appearance);\n\n  return safe(appearanceConfig, (value: AppearanceMappingType): MappingType => {\n    return value.mapping;\n  });\n}\n\nfunction getVariantMapping(mapping: ThemeMappingType,\n                           component: string,\n                           appearance: string,\n                           variant: string): MappingType | undefined {\n\n  const appearanceConfig: AppearanceMappingType = getAppearance(mapping, component, appearance);\n\n  return safe(appearanceConfig, (value: AppearanceMappingType): MappingType => {\n    return safe(value.variantGroups, (groupValue): MappingType => {\n\n      const groupName = Object.keys(groupValue).find((group: string) => {\n        return groupValue[group][variant] !== undefined;\n      });\n\n      return safe(groupName, (groupNameValue): MappingType => {\n        return groupValue[groupNameValue][variant];\n      });\n    });\n  });\n}\n\nfunction getStateMapping(mapping: MappingType, state: string): StatelessMappingType | undefined {\n\n  return safe(mapping.state, (value): StatelessMappingType => {\n    return value[state];\n  });\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n  ThemedStyleType,\n  MappingType,\n  StrictTheme,\n  StatelessMappingType,\n  ParameterType,\n} from '@eva-design/dss';\nimport {\n  safe,\n  noNulls,\n  noDuplicates,\n} from '../common';\nimport {\n  getComponentDefaultAppearance,\n  getComponentDefaultVariants,\n  getComponentDefaultState,\n  getStatelessAppearanceMapping,\n  getStatelessVariantMapping,\n  getStateAppearanceMapping,\n  getStateVariantMapping,\n} from '../mapping';\n\nexport const SEPARATOR_MAPPING_ENTRY = '.';\n\n/**\n * Creates style object for variant/list of variants(optional) and its state/list of states(optional)\n *\n * Example\n *\n * appearance = 'outline';\n * variants = ['success', 'large'];\n * state = ['active', 'checked'];\n *\n * a = `default` + `outline`                    - acc appearance (apce) mapping\n *\n * v1 = `success` of `default`                  - `success` variant mapping of `default` apce\n * v2 = `success` of `outline`                  - `success` variant mapping of `outline` apce\n * v3 = `large` of `default`                    - `large` variant mapping of `default` apce\n * v4 = `large` of `outline`                    - `large` variant mapping of `outline` apce\n *\n * s1 = `active` of `default`                   - `active` state mapping of `default` apce\n * s2 = `active` of `outline`                   - `active` state mapping of `outline` apce\n * s3 = `active` of `default success`           - `active` state mapping of `success` variant of `default` apce\n * s4 = `active` of `outline success`           - `active` state mapping of `success` variant of `outline` apce\n * s5 = `active` of `default large`             - `active` state mapping of `large` variant of `default` apce\n * s6 = `active` of `outline large`             - `active` state mapping of `large` variant of `outline` apce\n *\n * s7 = `checked` of `default`                  - `checked` state mapping of `default` apce\n * s8 = `checked` of `outline`                  - `checked` state mapping of `outline` apce\n * s9 = `checked` of `default success`          - `checked` state mapping of `success` variant of `default` apce\n * s10 = `checked` of `outline success`         - `checked` state mapping of `success` variant of `outline` apce\n * s11 = `checked` of `default large`           - `checked` state mapping of `large` variant of `default` apce\n * s12 = `checked` of `outline large`           - `checked` state mapping of `large` variant of `outline` apce\n *\n * s13 = `active.checked` of `default`          - `active.checked` state mapping of `default` apce\n * s14 = `active.checked` of `outline`          - `active.checked` state mapping of `outline` apce\n * s15 = `active.checked` of `default success`  - `active.checked` state mapping of `success` variant of `default` apce\n * s16 = `active.checked` of `outline success`  - `active.checked` state mapping of `success` variant of `outline` apce\n * s17 = `active.checked` of `default large`    - `active.checked` state mapping of `large` variant of `default` apce\n * s18 = `active.checked` of `outline large`    - `active.checked` state mapping of `large` variant of `outline` apce\n *\n * res = a + (v1 + v2 + ... + vn) + (s1 + s2 + ... + sn)\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param appearance: string - appearance applied to component\n * @param variants: string[] - variants applied to component. Default is []\n * @param states: string[] - states in which component is. Default is []\n * @param theme: StrictTheme - theme configuration object. Default is {}\n *\n * @return ThemedStyleType - compiled component styles declared in mappings, mapped to theme values\n */\nexport function createStyle(mapping: ThemeMappingType,\n                            component: string,\n                            appearance: string,\n                            variants: string[] = [],\n                            states: string[] = [],\n                            theme: StrictTheme = {}): ThemedStyleType {\n\n  const normalizedAppearance: string[] = normalizeAppearance(mapping, component, appearance);\n  const normalizedVariants: string[] = normalizeVariants(mapping, component, variants);\n  const normalizedStates: string[] = normalizeStates(mapping, component, states, (state: string): number => {\n    return states.indexOf(state);\n  });\n\n  const appearanceMapping: StatelessMappingType = reduce(normalizedAppearance, apce => {\n    return getStatelessAppearanceMapping(mapping, component, apce);\n  });\n\n  const variantMapping: StatelessMappingType = reduce(normalizedVariants, variant => {\n    return reduce(normalizedAppearance, apce => {\n      return getStatelessVariantMapping(mapping, component, apce, variant);\n    });\n  });\n\n  const stateMapping: StatelessMappingType = reduce(normalizedStates, state => {\n    const appearanceStateMapping = reduce(normalizedAppearance, apce => {\n      return getStateAppearanceMapping(mapping, component, apce, state);\n    });\n\n    const variantStateMapping: StatelessMappingType = reduce(normalizedVariants, variant => {\n      return reduce(normalizedAppearance, apce => {\n        return getStateVariantMapping(mapping, component, apce, variant, state);\n      });\n    });\n\n    return { ...appearanceStateMapping, ...variantStateMapping };\n  });\n\n  const strictlessMapping: StatelessMappingType = {\n    ...appearanceMapping,\n    ...variantMapping,\n    ...stateMapping,\n  };\n\n  return withStrictTokens(strictlessMapping, theme);\n}\n\nexport function createAllStyles(mapping: ThemeMappingType,\n                                component: string,\n                                appearance: string,\n                                variants: string[],\n                                states: string[],\n                                theme: StrictTheme): [string, ThemedStyleType][] {\n\n  const stateless = createStyleEntry(mapping,\n    component,\n    appearance,\n    appearance,\n    '',\n    '',\n    theme,\n  );\n\n  const withStates = states.reduce((acc: [string, ThemedStyleType][], current: string) => {\n    const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, current);\n    const next = createStyleEntry(mapping, component, key, appearance, '', current, theme);\n    return [...acc, next];\n  }, []);\n\n  const withVariants = variants.map(variant => {\n    const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, variant);\n    return createStyleEntry(mapping, component, key, appearance, variant, '', theme);\n  });\n\n  const withVariantStates = variants.reduce((acc: [string, ThemedStyleType][], current: string) => {\n    const next = states.map(state => {\n      const key = appearance.concat(SEPARATOR_MAPPING_ENTRY, current, SEPARATOR_MAPPING_ENTRY, state);\n      return createStyleEntry(mapping, component, key, appearance, current, state, theme);\n    });\n    return [...acc, ...next];\n  }, []);\n\n  return [\n    stateless,\n    ...withStates,\n    ...withVariants,\n    ...withVariantStates,\n  ];\n}\n\nexport function getStyle(mapping: ThemeMappingType,\n                         component: string,\n                         appearance: string,\n                         variants: string[],\n                         states: string[]): ThemedStyleType | undefined {\n\n  return safe(mapping, (themeMapping: ThemeMappingType) => {\n    return safe(themeMapping[component], (componentMapping: ControlMappingType) => {\n\n      const query = findStyleKey(Object.keys(componentMapping), [\n        appearance,\n        ...variants,\n        ...states,\n      ]);\n\n      return componentMapping[query];\n    });\n  });\n}\n\n/**\n * Creates normalized to design system array of component appearances\n *\n * Example:\n *\n * '' => ['default']\n * 'bold' => ['default', 'bold']\n * 'default' => ['default']\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param appearance: string - appearance applied to component\n *\n * @return string[] - array of merged appearances\n */\nexport function normalizeAppearance(mapping: ThemeMappingType,\n                                    component: string,\n                                    appearance: string): string[] {\n\n  const defaultAppearance: string = getComponentDefaultAppearance(mapping, component);\n\n  return normalize([defaultAppearance, appearance]);\n}\n\n/**\n * Creates normalized to design system array of component variants\n *\n * Example:\n *\n * [''] => ['default0', 'default1']\n * ['success'] => ['default0', 'default1', 'success']\n * ['default0', 'tiny'] => ['default0', 'default1', 'tiny']\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param variants: string[] - variants applied to component\n *\n * @return string[] - array of merged variants\n */\nexport function normalizeVariants(mapping: ThemeMappingType,\n                                  component: string,\n                                  variants: string[]): string[] {\n\n  const defaultVariants: string[] = getComponentDefaultVariants(mapping, component);\n\n  return normalize([...defaultVariants, ...variants]);\n}\n\n/**\n * Creates normalized to design system array of component states\n *\n * Example:\n *\n * [''] => ['default']\n * ['active', 'checked'] => [\n *                           'default',\n *                           'active',\n *                           'default.active',\n *                           'checked',\n *                           'default.active.checked'\n *                          ]\n * ...\n *\n * @param mapping: ThemeMappingType - theme mapping configuration\n * @param component: string - component name\n * @param states: string[] - states in which component is\n * @param stateWeight: (state: string) => number - state weight calculation lambda\n * @param separator - state separator. `.` in example\n *\n * @return string[] - array of merged states\n */\nexport function normalizeStates(mapping: ThemeMappingType,\n                                component: string,\n                                states: string[],\n                                stateWeight: (state: string) => number,\n                                separator: string = SEPARATOR_MAPPING_ENTRY): string[] {\n\n  const defaultState: string = getComponentDefaultState(mapping, component);\n\n  const preprocess: string[] = normalize([defaultState, ...states]);\n  if (preprocess.length === 0) {\n    return preprocess;\n  }\n\n  const variations = createStateVariations([...preprocess], separator, []);\n\n  return variations.sort((lhs: string, rhs: string) => {\n    const lhsWeight = getStateVariationWeight(lhs, separator, stateWeight);\n    const rhsWeight = getStateVariationWeight(rhs, separator, stateWeight);\n    return lhsWeight - rhsWeight;\n  });\n}\n\nfunction createStateVariations(states: string[], separator: string, result: string[] = []): string[] {\n  if (states.length === 0) {\n    return result;\n  }\n\n  const next = states.reduce((acc: string[], current: string) => {\n    const nextItem = acc.map(value => value.concat(separator, current));\n    return [...acc, ...nextItem];\n  }, [states.shift()]);\n\n  return createStateVariations(states, separator, [...result, ...next]);\n}\n\nfunction withStrictTokens(mapping: StatelessMappingType, theme: StrictTheme): StatelessMappingType {\n  return Object.keys(mapping).reduce((acc: StatelessMappingType, next: string): StatelessMappingType => {\n    const currentToken: ParameterType = mapping[next];\n    const nextToken: ParameterType = theme[currentToken] || currentToken;\n\n    return { ...acc, [next]: nextToken };\n  }, {});\n}\n\nfunction getStateVariationWeight(state: string,\n                                 separator: string,\n                                 stateWeight: (state: string) => number): number {\n\n  const parts = state.split(separator);\n  return parts.reduce((acc: number, current: string): number => {\n    return acc + stateWeight(current) + parts.length;\n  }, 0);\n}\n\n/**\n * Finds identical keys across `source` keys array\n *\n * Example:\n *\n * source = ['default.error.small.checked', ...]\n * query = ['default', 'small', 'error', 'checked']\n *\n * will return 'default.error.small.checked'\n *\n * @param source (string[]) - array of style keys\n * @param query (string[]) - array of key parts to search\n *\n * @return (string | undefined) - key identical to some of `source` keys if presents\n */\nexport function findStyleKey(source: string[], query: string[]): string | undefined {\n\n  const partialKeys: string[][] = source.map((key: string) => {\n    return key.split(SEPARATOR_MAPPING_ENTRY);\n  });\n\n  const result: string[][] = partialKeys.filter((partial: string[]) => {\n    return compareArrays(query, partial);\n  });\n\n  return safe(result[0], (value: string[]) => {\n    return value.join(SEPARATOR_MAPPING_ENTRY);\n  });\n}\n\nfunction createStyleEntry(mapping: ThemeMappingType,\n                          component: string,\n                          key: string,\n                          appearance: string,\n                          variant: string = '',\n                          state: string = '',\n                          theme: StrictTheme = {}): [string, ThemedStyleType] {\n\n  const value = createStyle(\n    mapping,\n    component,\n    appearance,\n    variant.split(SEPARATOR_MAPPING_ENTRY),\n    state.split(SEPARATOR_MAPPING_ENTRY),\n    theme,\n  );\n\n  return [key, value];\n}\n\nfunction normalize(params: string[]): string[] {\n  return noNulls(noDuplicates(params));\n}\n\nfunction compareArrays(lhs: string[], rhs: string[]): boolean {\n  const isEqualLength = lhs && rhs && lhs.length === rhs.length;\n  if (!isEqualLength) {\n    return false;\n  }\n\n  return lhs.reduce((acc: boolean, next: string): boolean => acc && rhs.includes(next), true);\n}\n\nfunction reduce(items: string[], next: (item: string) => any): any {\n  return items.reduce((acc, current) => ({ ...acc, ...next(current) }), {});\n}\n","import {\n  ThemeMappingType,\n  ControlMappingType,\n} from '@eva-design/dss';\nimport { Processor } from '../processor';\nimport {\n  getComponentVariants,\n  getComponentStates,\n  SEPARATOR_MAPPING_ENTRY,\n} from '../../service';\n\nexport interface MappingMetaType {\n  name: string;\n  appearance: string;\n  variants: string[];\n  states: string[];\n}\n\nexport class MappingProcessor implements Processor<ThemeMappingType, MappingMetaType[]> {\n\n  public process(params: ThemeMappingType): MappingMetaType[] {\n    return Object.keys(params).reduce((acc: MappingMetaType[], component: string) => {\n      return [\n        ...acc,\n        ...this.getComponentMappingMeta(params, component),\n      ];\n    }, []);\n  }\n\n  private getComponentMappingMeta(mapping: ThemeMappingType, component: string): MappingMetaType[] {\n    const componentMapping: ControlMappingType = mapping[component];\n\n    return Object.keys(componentMapping.appearances).map((appearance: string): MappingMetaType => {\n      return {\n        name: component,\n        appearance: appearance,\n        variants: this.getComponentVariants(mapping, component),\n        states: this.getComponentStates(mapping, component),\n      };\n    });\n  }\n\n  private getComponentVariants(mapping: ThemeMappingType, component: string): string[] {\n    const variants: string[][] = getComponentVariants(mapping, component);\n\n    return this.concatComponentVariants([...variants]);\n  }\n\n  private getComponentStates(mapping: ThemeMappingType, component: string): string[] {\n    const states: string[] = getComponentStates(mapping, component);\n\n    return this.concatComponentStates([...states]);\n  }\n\n  private concatComponentVariants(variants: string[][], result: string[] = []): string[] {\n    if (variants.length === 0) {\n      return result;\n    }\n\n    const concat = variants.reduce((acc: string[], current: string[]) => {\n      return [...acc, ...this.concatVariantGroups(acc, current)];\n    }, variants.shift());\n\n    return this.concatComponentVariants(variants, [...result, ...concat]);\n  }\n\n  private concatVariantGroups(lhs: string[], rhs: string[]): string[] {\n    return lhs.reduce((acc: string[], lhsValue: string) => {\n      const concat = rhs.map(rhsValue => {\n        return lhsValue.concat(SEPARATOR_MAPPING_ENTRY, rhsValue);\n      });\n      return [...acc, ...concat];\n    }, []);\n  }\n\n  private concatComponentStates(states: string[], result: string[] = []): string[] {\n    if (states.length === 0) {\n      return result;\n    }\n\n    const concat = states.reduce((acc: string[], current: string) => {\n      const next = acc.map(value => value.concat(SEPARATOR_MAPPING_ENTRY, current));\n      return [...acc, ...next];\n    }, [states.shift()]);\n\n    return this.concatComponentStates(states, [...result, ...concat]);\n  }\n}\n","import {\n  ThemeStyleType,\n  ThemeMappingType,\n  StrictTheme,\n  ThemedStyleType,\n  ControlThemedStyleType,\n} from '@eva-design/dss';\nimport { MappingMetaType } from '../mapping/mappingProcessor';\nimport { Processor } from '../processor';\nimport {\n  createAllStyles,\n  toObject,\n} from '../../service';\n\nexport interface MappingProcessorParamsType {\n  mapping: ThemeMappingType;\n  meta: MappingMetaType[];\n  theme: StrictTheme;\n}\n\ninterface NoMetaThemeStyleType {\n  [key: string]: {\n    [key: string]: ThemedStyleType,\n  };\n}\n\nexport class MetaProcessor implements Processor<MappingProcessorParamsType, ThemeStyleType> {\n\n  public process(params: MappingProcessorParamsType): ThemeStyleType {\n    const { mapping, meta, theme } = params;\n\n    const entries = meta.reduce((acc: ThemeStyleType, controlMeta: MappingMetaType) => {\n      const { name, appearance, variants, states } = controlMeta;\n\n      const nextAppearanceEntries = createAllStyles(mapping, name, appearance, variants, states, theme);\n      const prevAppearanceStyles = acc[name];\n      const nextAppearanceStyles = toObject(nextAppearanceEntries);\n\n      return { ...acc, [name]: { ...prevAppearanceStyles, ...nextAppearanceStyles } };\n    }, {});\n\n    return this.withControlMeta(mapping, entries);\n  }\n\n  private withControlMeta(mapping: ThemeMappingType, style: NoMetaThemeStyleType): ThemeStyleType {\n    return Object.keys(style).reduce((acc: ThemeStyleType, control: string) => {\n      const controlEntry: ControlThemedStyleType = {\n        meta: mapping[control].meta,\n        styles: style[control],\n      };\n\n      return { ...acc, [control]: controlEntry };\n    }, {});\n  }\n}\n","import { Processor } from '../processor';\nimport {\n  MappingProcessor,\n  MappingMetaType,\n} from '../mapping/mappingProcessor';\nimport { MetaProcessor } from '../meta/metaProcessor';\nimport {\n  SchemaType,\n  ThemeStyleType,\n} from '@eva-design/dss';\n\nexport class SchemaProcessor implements Processor<SchemaType, ThemeStyleType> {\n\n  private mappingProcessor: MappingProcessor = new MappingProcessor();\n  private metaProcessor: MetaProcessor = new MetaProcessor();\n\n  public process(params: SchemaType): ThemeStyleType {\n    const { components: themeMapping, strict: strictTheme } = params;\n\n    const meta: MappingMetaType[] = this.mappingProcessor.process(themeMapping);\n\n    return this.metaProcessor.process({\n      mapping: themeMapping,\n      meta: meta,\n      theme: strictTheme,\n    });\n  }\n}\n","import React from 'react';\nimport { ThemeStyleType } from '@eva-design/dss';\nimport { MappingContext } from './mappingContext';\n\nexport interface MappingProviderProps {\n  styles: ThemeStyleType;\n  children?: React.ReactNode;\n}\n\nexport class MappingProvider extends React.PureComponent<MappingProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, children } = this.props;\n\n    return (\n      <MappingContext.Provider\n        value={styles}>\n        {children}\n      </MappingContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ThemeContext } from './themeContext';\nimport { ThemeType } from './type';\n\nexport interface ThemeProviderProps {\n  theme: ThemeType;\n  children?: React.ReactNode;\n}\n\nexport class ThemeProvider extends React.PureComponent<ThemeProviderProps> {\n\n  public render(): React.ReactNode {\n    const { theme, children } = this.props;\n\n    return (\n      <ThemeContext.Provider\n        value={theme}>\n        {children}\n      </ThemeContext.Provider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  MappingProvider,\n  MappingProviderProps,\n} from '../mapping/mappingProvider.component';\nimport {\n  ThemeProvider,\n  ThemeProviderProps,\n} from '../theme/themeProvider.component';\n\nexport type StyleProviderProps = MappingProviderProps & ThemeProviderProps;\n\nexport class StyleProvider extends React.PureComponent<StyleProviderProps> {\n\n  public render(): React.ReactNode {\n    const { styles, theme, children } = this.props;\n\n    return (\n      <MappingProvider styles={styles}>\n        <ThemeProvider theme={theme}>\n          {children}\n        </ThemeProvider>\n      </MappingProvider>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\n\ntype ChildElement = React.ReactElement<any>;\ntype ChildrenProp = ChildElement | ChildElement[];\n\ninterface ComponentProps {\n  visible: boolean;\n  children: ChildrenProp;\n  allowBackdrop: boolean;\n  onBackdropPress: () => void;\n}\n\nexport type ModalResolverProps = ViewProps & ComponentProps;\n\nexport class ModalResolver extends React.Component<ModalResolverProps> {\n\n  static defaultProps: Partial<ModalResolverProps> = {\n    visible: false,\n  };\n\n  private onBackdropPress = (): void => {\n    const { allowBackdrop, onBackdropPress } = this.props;\n\n    if (allowBackdrop) {\n      onBackdropPress();\n    }\n  };\n\n  private onStartShouldSetResponder = (): boolean => {\n    return true;\n  };\n\n  private onResponderRelease = (): void => {\n    return;\n  };\n\n  private onStartShouldSetResponderCapture = (): boolean => {\n    return false;\n  };\n\n  private renderComponentChild = (source: React.ReactElement<any>): React.ReactElement<any> => {\n    return React.cloneElement(source, {\n      style: [source.props.style, this.props.style],\n    });\n  };\n\n  private renderComponentChildren = (source: React.ReactNode): React.ReactElement<any>[] => {\n    return React.Children.map(source, this.renderComponentChild);\n  };\n\n  private renderWithBackDrop = (component: React.ReactElement<ViewProps>):\n    React.ReactElement<TouchableOpacityProps> => {\n\n    return (\n      <TouchableOpacity\n        style={styles.container}\n        onPress={this.onBackdropPress}\n        activeOpacity={1}>\n        {component}\n      </TouchableOpacity>\n    );\n  };\n\n  private renderWithoutBackDrop = (component: React.ReactElement<ViewProps>): React.ReactElement<ViewProps> => {\n    return (\n      <View style={styles.notVisibleWrapper}>\n        <View\n          style={styles.container}\n          pointerEvents='none'/>\n        {component}\n      </View>\n    );\n  };\n\n  private renderComponent = (): React.ReactElement<TouchableOpacityProps | ViewProps> => {\n    const { children, allowBackdrop, ...derivedProps } = this.props;\n    const componentChildren: React.ReactElement<any>[] = this.renderComponentChildren(children);\n\n    const dialog: React.ReactElement<ViewProps> =\n      <View\n        {...derivedProps}\n        style={styles.contentWrapper}\n        onStartShouldSetResponder={this.onStartShouldSetResponder}\n        onResponderRelease={this.onResponderRelease}\n        onStartShouldSetResponderCapture={this.onStartShouldSetResponderCapture}\n        pointerEvents='box-none'>\n        {componentChildren}\n      </View>;\n\n    return allowBackdrop ?\n      this.renderWithBackDrop(dialog) : this.renderWithoutBackDrop(dialog);\n  };\n\n  public render(): React.ReactElement<ViewProps | TouchableOpacityProps> | null {\n    return this.props.visible ? this.renderComponent() : null;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: StyleSheet.absoluteFillObject,\n  notVisibleWrapper: {\n    position: 'absolute',\n    width: 0,\n    height: 0,\n  },\n  contentWrapper: {\n    alignSelf: 'flex-start',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { ModalPresentingBased } from '../../ui/support/typings';\n\n/**\n * Singleton service designed to manage modal components.\n *\n * @type ModalServiceType\n *\n * @method {(element: React.ReactElement<ModalPresentingBased>, config: ModalPresentingConfig) => string} show -\n * Shows component in a modal window. Returns its id.\n *\n * @method {(identifier: string) => string} hide - Hides component from a modal window and returns empty string.\n *\n * @method {(identifier: string, children: React.ReactNode) => void} update - Updates component from a modal window.\n *\n * @example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { Layout, Button, Text, ModalService } from 'react-native-ui-kitten';\n *\n * export const ModalServiceShowcase = () => {\n *\n *   const modalID = '';\n *\n *   const showModal = () => {\n *     const contentElement = this.renderModalContentElement();\n *     this.modalID = ModalService.show(contentElement, { allowBackdrop: true, onBackdropPress: this.hideModal });\n *   };\n *\n *   const hideModal = () => {\n *     ModalService.hide(this.modalID);\n *   };\n *\n *   const renderModalContentElement = () => {\n *     return (\n *       <Layout>\n *         <Text>Hi, I'm modal!</Text>\n *       </Layout>\n *     );\n *   };\n *\n *   return (\n *     <Layout>\n *       <Button onPress={showModal}>SHOW MODAL</Button>\n *       <Button onPress={hideModal}>HIDE MODAL</Button>\n *     </Layout>\n *   );\n * }\n * ```\n */\nclass ModalServiceType {\n\n  panel: ModalPresenting | null = null;\n\n  public mount(panel: ModalPresenting | null): void {\n    this.panel = panel;\n  }\n\n  public unmount(): void {\n    this.panel = null;\n  }\n\n  public show(element: React.ReactElement<ModalPresentingBased>,\n              config: ModalPresentingConfig): string {\n\n    if (this.panel) {\n      return this.panel.show(element, config);\n    }\n  }\n\n  public update(identifier: string, children: React.ReactNode): void {\n    if (this.panel) {\n      this.panel.update(identifier, children);\n    }\n  }\n\n  public hide(identifier: string): string {\n    if (this.panel) {\n      return this.panel.hide(identifier);\n    }\n  }\n}\n\nexport interface ModalPresentingConfig {\n  allowBackdrop: boolean;\n  onBackdropPress: () => void;\n}\n\nexport interface ModalPresenting {\n  show(element: React.ReactElement<ModalPresentingBased>,\n       config: ModalPresentingConfig): string;\n\n  hide(identifier: string): string;\n\n  update(identifier: string, children: React.ReactNode): void;\n}\n\nexport const ModalService = new ModalServiceType();\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport {\n  ModalResolver,\n  ModalResolverProps,\n} from './modalResolver.component';\nimport {\n  ModalService,\n  ModalPresenting,\n  ModalPresentingConfig,\n} from './modal.service';\nimport { ModalPresentingBased } from '../../ui/support/typings';\n\ninterface ModalPanelChild extends ModalPresentingConfig {\n  element: React.ReactElement<ModalPresentingBased>;\n}\n\nexport interface ModalPanelProps {\n  children: React.ReactNode;\n}\n\ninterface ModalPanelState {\n  components: Map<string, ModalPanelChild>;\n}\n\nexport class ModalPanel extends React.Component<ModalPanelProps, ModalPanelState> implements ModalPresenting {\n\n  public state: ModalPanelState = {\n    components: new Map(),\n  };\n\n  public componentDidMount(): void {\n    ModalService.mount(this);\n  }\n\n  public componentWillUnmount(): void {\n    ModalService.unmount();\n  }\n\n  public hide = (identifier: string): string => {\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    this.setState({ components });\n    return '';\n  };\n\n  public show(element: React.ReactElement<ModalPresentingBased>,\n              config: ModalPresentingConfig): string {\n\n    const key: string = this.generateUniqueComponentKey();\n    const components: Map<string, ModalPanelChild> = this.state.components\n      .set(key, { ...config, element });\n\n    this.setState({ components });\n\n    return key;\n  }\n\n  public update(identifier: string, children: React.ReactNode): void {\n    const panelChild: ModalPanelChild = this.state.components.get(identifier);\n    const childElement: React.ReactElement<ModalPresentingBased> = panelChild.element;\n\n    panelChild.element = React.cloneElement(childElement, {\n      children: children,\n    });\n\n    const components: Map<string, ModalPanelChild> = this.state.components;\n    components.delete(identifier);\n    components.set(identifier, panelChild);\n    this.setState({ components });\n  }\n\n  private generateUniqueComponentKey = (): string => {\n    return Math.random().toString(36).substring(2);\n  };\n\n  private areThereAnyComponents = (): boolean => {\n    return this.state.components && this.state.components.size !== 0;\n  };\n\n  private renderModal = (config: ModalPanelChild, index: number): React.ReactElement<ModalResolverProps> => {\n    return (\n      <ModalResolver\n        {...config.element.props}\n        visible={true}\n        key={index}\n        allowBackdrop={config.allowBackdrop}\n        onBackdropPress={config.onBackdropPress}>\n        {config.element}\n      </ModalResolver>\n    );\n  };\n\n  private renderModals = (): React.ReactElement<ModalResolverProps>[] => {\n    return Array.from(this.state.components.values()).map(this.renderModal);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    return (\n      <View style={styles.container}>\n        {this.props.children}\n        {this.areThereAnyComponents() && this.renderModals()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","export interface StyleType {\n  [key: string]: any;\n}\n\nexport enum Interaction {\n  HOVER = 'hover',\n  ACTIVE = 'active',\n  FOCUSED = 'focused',\n  INDETERMINATE = 'indeterminate',\n  VISIBLE = 'visible',\n}\n\nexport enum State {\n  CHECKED = 'checked',\n  SELECTED = 'selected',\n  DISABLED = 'disabled',\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport merge from 'lodash.merge';\nimport { SchemaProcessor } from '@eva-design/processor';\nimport {\n  CustomSchemaType,\n  SchemaType,\n  ThemeStyleType,\n} from '@eva-design/dss';\nimport { StyleProvider } from '../style/styleProvider.component';\nimport { ThemeProviderProps } from '../theme/themeProvider.component';\nimport { ModalPanel } from '../modal/modalPanel.component';\nimport { ThemeType } from '../theme/type';\n\ninterface ComponentProps {\n  mapping: SchemaType;\n  customMapping?: CustomSchemaType;\n}\n\nexport type ApplicationProviderProps = ComponentProps & ThemeProviderProps;\nexport type ApplicationProviderElement = React.ReactElement<ApplicationProviderProps>;\n\ninterface State {\n  styles: ThemeStyleType;\n}\n\n/**\n * `ApplicationProvider` component is designed to be a root of the application.\n *\n * This does basically two things:\n * - Provides styles for basic components;\n * - Renders modal window which is used to be common for all elements presented as modal;\n *\n * @extends React.Component\n *\n * @property {SchemaType} mapping - Determines the mapping for basic components.\n * This is designed to be provided by developers team and can be imported from npm package (e.g. `@eva-design/eva`).\n *\n * @property {CustomSchemaType} customMapping - Determines the customization mapping.\n * This is merged with `mapping` property and designed to be used components customization.\n *\n * @property {ThemeType} theme - Determines the theme for basic components.\n * This is designed to be provided by developers team and can be imported from npm package (e.g. `@eva-design/eva`).\n *\n * @property {React.ReactNode} children - Determines application root component.\n *\n * @property ThemeProviderProps\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { mapping, light as lightTheme } from '@eva-design/eva';\n * import { ApplicationProvider, Layout, Text } from 'react-native-ui-kitten';\n *\n * export default class App extends React.Component {\n *\n *   render() {\n *     return (\n *       <ApplicationProvider\n *         mapping={mapping}\n *         theme={lightTheme}>\n *         <Layout style={{ flex: 1 }}>\n *           <Text>Welcome to UI Kitten</Text>\n *         </Layout>\n *       </ApplicationProvider>\n *     );\n *   }\n * }\n * ```\n */\nexport class ApplicationProvider extends React.Component<ApplicationProviderProps, State> {\n\n  private schemaProcessor: SchemaProcessor = new SchemaProcessor();\n\n  constructor(props: ApplicationProviderProps) {\n    super(props);\n    const { mapping, customMapping, theme } = this.props;\n\n    const styles: ThemeStyleType = this.createStyles(mapping, customMapping);\n\n    this.state = { styles };\n  }\n\n  private createStyles = (mapping: SchemaType, custom: CustomSchemaType): ThemeStyleType => {\n    const customizedMapping: SchemaType = merge({}, mapping, custom);\n\n    return this.schemaProcessor.process(customizedMapping);\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <StyleProvider\n        theme={this.props.theme}\n        styles={this.state.styles}>\n        <ModalPanel>\n          {this.props.children}\n        </ModalPanel>\n      </StyleProvider>\n    );\n  }\n}\n","import { Animated } from 'react-native';\n\nexport const DEFAULT_CONFIG: AnimationConfig = {\n  cycles: 1,\n  useNativeDriver: true,\n};\n\n/**\n * @property cycles - number of animation cycles. -1 for infinite\n */\nexport interface AnimationConfig extends Animated.AnimationConfig {\n  cycles?: number;\n}\n\nexport abstract class Animation<C extends AnimationConfig, R> {\n\n  protected abstract animation: Animated.CompositeAnimation;\n  protected counter: number = 0;\n  protected endCallback: Animated.EndCallback;\n  protected running: boolean = false;\n  protected config: C;\n\n  public abstract toProps(): R;\n\n  constructor(config?: C) {\n    this.config = {\n      ...DEFAULT_CONFIG,\n      ...config,\n    };\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    this.endCallback = callback;\n    this.running = true;\n\n    this.animation.start(this.onAnimationEnd);\n  }\n\n  public stop() {\n    this.running = false;\n\n    this.animation.stop();\n  }\n\n  public release() {\n    this.stop();\n  }\n\n  protected onAnimationEnd = (result: Animated.EndResult) => {\n    this.counter += 1;\n    if (this.counter === this.config.cycles) {\n      this.stop();\n    }\n    if (this.running) {\n      this.start(this.endCallback);\n    }\n    if (!this.running) {\n      this.counter = 0;\n      this.endCallback && this.endCallback(result);\n      this.endCallback = null;\n    }\n  };\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: PulseAnimationConfig = {\n  start: 1.0,\n  end: 1.25,\n  easing: Easing.linear,\n  duration: 500,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface PulseAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class PulseAnimation extends Animation<PulseAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: PulseAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ShakeAnimationConfig = {\n  start: 0.0,\n  offset: 2.5,\n  easing: Easing.linear,\n  duration: 25,\n  cycles: 8,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ShakeAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  offset?: number;\n}\n\nexport class ShakeAnimation extends Animation<ShakeAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, offset, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? -offset : offset,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: this.counter % 2 !== 0 ? offset : -offset,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: ShakeAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ translateX: this.value }],\n      },\n    };\n  }\n}\n","import {\n  Animated,\n  Easing,\n  ViewProps,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from './animation';\n\nconst DEFAULT_CONFIG: ZoomAnimationConfig = {\n  start: 1.0,\n  end: 0.5,\n  easing: Easing.linear,\n  duration: 500,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface ZoomAnimationConfig extends AnimationConfig, TimingAnimationConfig {\n  start?: number;\n  end?: number;\n}\n\nexport class ZoomAnimation extends Animation<ZoomAnimationConfig, ViewProps> {\n\n  private value: Animated.Value;\n\n  protected get animation(): Animated.CompositeAnimation {\n    const { start, end, ...restConfig } = this.config;\n\n    const startAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: end,\n      ...restConfig,\n    });\n\n    const endAnimation: Animated.CompositeAnimation = Animated.timing(this.value, {\n      toValue: start,\n      ...restConfig,\n    });\n\n    return Animated.sequence([\n      startAnimation,\n      endAnimation,\n    ]);\n  }\n\n  constructor(config?: ZoomAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.value = new Animated.Value(this.config.start);\n  }\n\n  public toProps(): ViewProps {\n    return {\n      // @ts-ignore: Animated.Value is not assignable to a number, but it is a number\n      style: {\n        transform: [{ scale: this.value }],\n      },\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Image,\n  ImageProps,\n  ImageStyle,\n  StyleSheet,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\n\ninterface ComponentProps {\n  shape?: string;\n  size?: string;\n}\n\nexport type AvatarProps = StyledComponentProps & ImageProps & ComponentProps;\nexport type AvatarElement = React.ReactElement<AvatarProps>;\n\n/**\n * `Avatar` is a styled `Image` component.\n *\n * @extends React.Component\n *\n * @property {string} shape - Determines the shape of the component.\n * Can be `round`, `rounded` or `square`.\n * Default is `round`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `giant`, `large`, `medium`, `small`, or `tiny`.\n * Default is `medium`.\n *\n * @property {ImageProps} - Any props applied to Image component.\n *\n * @property StyledComponentProps\n *\n * @overview-example AvatarSimpleUsage\n *\n * @overview-example AvatarSize\n *\n * @overview-example AvatarShape\n *\n * @example AvatarRemoteImages\n *\n * @example AvatarInlineStyling\n */\nexport class AvatarComponent extends React.Component<AvatarProps> {\n\n  static styledComponentName: string = 'Avatar';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { roundCoefficient, ...containerParameters } = source;\n\n    // @ts-ignore: avoid checking `containerParameters`\n    const baseStyle: ImageStyle = StyleSheet.flatten([\n      containerParameters,\n      this.props.style,\n    ]);\n\n    // @ts-ignore: rhs operator is restricted to be number\n    const borderRadius: number = roundCoefficient * baseStyle.height;\n\n    return {\n      borderRadius,\n      ...baseStyle,\n    };\n  };\n\n  public render(): React.ReactElement<ImageProps> {\n    const { themedStyle, ...restProps } = this.props;\n    const componentStyle: ImageStyle = this.getComponentStyle(themedStyle);\n\n    return (\n      <Image\n        {...restProps}\n        style={componentStyle}\n      />\n    );\n  }\n}\n\nexport const Avatar = styled<AvatarProps>(AvatarComponent);\n","import React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\n\nexport type ArrowProps = ViewProps;\nexport type ArrowElement = React.ReactElement<ArrowProps>;\n\nexport class Arrow extends React.Component<ArrowProps> {\n\n  private getComponentStyle = (source: StyleProp<ViewStyle>): StyleType => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(source);\n\n    return {\n      container: {\n        // @ts-ignore: `width` is restricted to be a number\n        borderLeftWidth: flatStyle.width,\n        // @ts-ignore: `width` is restricted to be a number\n        borderRightWidth: flatStyle.width,\n        // @ts-ignore: `height` is restricted to be a number\n        borderBottomWidth: flatStyle.height,\n        borderBottomColor: flatStyle.backgroundColor,\n        borderLeftColor: 'transparent',\n        borderRightColor: 'transparent',\n        backgroundColor: 'transparent',\n      },\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...props } = this.props;\n    const componentStyle = this.getComponentStyle(style);\n\n    return (\n      <View\n        {...props}\n        style={[style, styles.container, componentStyle.container]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n","import { StyleType } from '@kitten/theme';\n\nexport interface Props {\n  [key: string]: any;\n}\n\nexport interface RestProps {\n  rest?: Partial<Props>;\n}\n\nexport type AllOfProps = Partial<Props>;\n\nexport type AllWithRestProps = Partial<Props> & RestProps;\n\n/**\n * Retrieves all props included in `from` array\n *\n * @param source (Props) - source object\n * @param from (string[]) - array of keys needed to retrieve from `source`\n *\n * @return (Partial<Props>) - object with keys contained in `from` array\n */\nexport function all(source: Props | undefined, from: string[]): AllOfProps {\n  if (!source) {\n    return {};\n  }\n\n  return from.reduce((acc: Partial<AllOfProps>, prop: string): Partial<AllOfProps> => {\n    return { ...acc, [prop]: source[prop] };\n  }, {});\n}\n\n/**\n * Retrieves all props included in `from` array, rest props includes in under the `rest` key\n */\nexport function allWithRest(source: Props | undefined, from: string[]): AllWithRestProps {\n  if (!source) {\n    return { rest: {} };\n  }\n\n  return Object.keys(source).reduce((acc: Partial<AllWithRestProps>, prop: string): Partial<AllWithRestProps> => {\n    const { rest, ...allOf } = acc;\n\n    if (from.includes(prop)) {\n      return { ...allOf, [prop]: source[prop], rest };\n    }\n\n    return { ...allOf, rest: { ...rest, [prop]: source[prop] } };\n  }, {});\n}\n\n/**\n * Returns all styles with prefix\n *\n * @param {StyleType} source - Eva Styles\n * @param {string} key - prefix\n *\n * @return {StyleType} - all styles with prefix\n */\nexport function allWithPrefix(source: StyleType, key: string): StyleType {\n  return Object.keys(source)\n    .filter((styleName: string) => styleName.includes(key))\n    .reduce((obj: StyleType, styleKey: string) => {\n      return {\n        ...obj,\n        [styleKey]: source[styleKey],\n      };\n    }, {});\n}\n","const FLEX_PREFIX: string = 'flex';\nconst FLEX_ROW_PREFIX: string = 'row';\nconst FLEX_WRAP_PREFIX: string = 'wrap';\nconst FLEX_START_PREFIX: string = 'start';\nconst FLEX_END_PREFIX: string = 'end';\nconst FLEX_REVERSE_PREFIX: string = 'reverse';\n\n/**\n * Works with FlexBox style properties that starts with `flex` and ends with `-start` or `-end`\n *\n * E.g justifyContent: flex-start\n */\nconst FlexStartEndMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_END_PREFIX);\n\n    if (isReverse) {\n      return `${FLEX_PREFIX}-${FLEX_START_PREFIX}`;\n    }\n\n    return `${FLEX_PREFIX}-${FLEX_END_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `row` and optionally ends with `-reverse`\n *\n * E.g flexDirection: row-reverse\n */\nconst FlexRowMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_ROW_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(FLEX_REVERSE_PREFIX);\n\n    if (isReverse) {\n      return FLEX_ROW_PREFIX;\n    }\n\n    return `${FLEX_ROW_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Works with FlexBox style properties that starts with `wrap` and optionally ends with `-reverse`\n *\n * E.g flexWrap: wrap-reverse\n */\nconst FlexWrapMapper: I18nLayoutFlexMapper<string> = {\n  toI18n(value: string, rtl: boolean): string {\n    if (!rtl || !value.startsWith(FLEX_WRAP_PREFIX)) {\n      return value;\n    }\n\n    const isReverse: boolean = value.endsWith(`-${FLEX_REVERSE_PREFIX}`);\n\n    if (isReverse) {\n      return FLEX_WRAP_PREFIX;\n    }\n\n    return `${FLEX_WRAP_PREFIX}-${FLEX_REVERSE_PREFIX}`;\n  },\n};\n\n/**\n * Matches FlexBox style properties that can affect on Layout depending on LTR/RTL mode corresponding Mappers\n */\nexport const I18nLayoutFlexMap: { [key: string]: I18nLayoutFlexMapper<any> } = {\n  alignContent: FlexStartEndMapper,\n  alignItems: FlexStartEndMapper,\n  alignSelf: FlexStartEndMapper,\n  justifyContent: FlexStartEndMapper,\n  flexDirection: FlexRowMapper,\n  flexWrap: FlexWrapMapper,\n};\n\ninterface I18nLayoutFlexMapper<T> {\n  toI18n(value: T, rtl: boolean): T;\n}\n","import {\n  I18nManager,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutFlexMap } from './i18nLayoutFlexMap';\nimport { I18nLayoutServiceType } from './type';\n\nclass NativeI18nLayoutService implements I18nLayoutServiceType {\n\n  public isRTL(): boolean {\n    return I18nManager.isRTL;\n  }\n\n  public select<T>(ltr: T, rtl): T {\n    return this.isRTL() ? rtl : ltr;\n  }\n\n  /**\n   * Iterates through I18nLayoutFlexMap and reverses style values if needed.\n   *\n   * @param {ViewStyle} source - style to convert\n   * @param {boolean} rtl - is layout currently in RTL mode (Needed for tests, because unable to mock this)\n   *\n   * @returns {ViewStyle} - style reversed to fit i18n\n   */\n  public toI18nStyle(source: ViewStyle, rtl: boolean = this.isRTL()): ViewStyle {\n    const i18nStyle: ViewStyle = Object.keys(I18nLayoutFlexMap).reduce((style: ViewStyle, prop: string): ViewStyle => {\n      const currentStyleValue = source[prop];\n      if (currentStyleValue) {\n        const i18nStyleValue = I18nLayoutFlexMap[prop].toI18n(currentStyleValue, rtl);\n        return { ...style, [prop]: i18nStyleValue };\n      }\n\n      return style;\n    }, {});\n\n    return { ...source, ...i18nStyle };\n  }\n}\n\nexport const I18nLayoutService = new NativeI18nLayoutService();\n","export const isValidString = (source: string | null): boolean => {\n  if (source && source.length > 0) {\n    return true;\n  }\n  return false;\n};\n","export interface WebEventResponderCallbacks {\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n}\n\nexport class WebEventResponderInstance {\n  readonly eventHandlers: WebEventResponderCallbacks;\n\n  constructor(props: WebEventResponderCallbacks) {\n    this.eventHandlers = props;\n  }\n}\n\nclass WebEventResponderStatic {\n  static create(config: WebEventResponderCallbacks): WebEventResponderInstance {\n    return new WebEventResponderInstance({\n      onMouseEnter: () => {\n        config.onMouseEnter && config.onMouseEnter();\n      },\n      onMouseLeave: () => {\n        config.onMouseLeave && config.onMouseLeave();\n      },\n      onFocus: () => {\n        config.onFocus && config.onFocus();\n      },\n      onBlur: () => {\n        config.onBlur && config.onBlur();\n      },\n    });\n  }\n}\n\nexport const WebEventResponder = WebEventResponderStatic;\n","import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport { I18nLayoutService } from '../../services';\n\ninterface ComponentProps {\n  isAnimated?: boolean;\n}\n\nexport type CheckMarkProps = ViewProps & ComponentProps;\nexport type CheckMarkElement = React.ReactElement<CheckMarkProps>;\n\nexport class CheckMark extends React.Component<CheckMarkProps> {\n\n  static defaultProps = {\n    isAnimated: false,\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { width, height, backgroundColor } = source;\n\n    return {\n      container: {\n        width: width,\n        height: height,\n      },\n      // the dependence of the variables was determined experimentally. Changes may be needed later.\n      shape: {\n        borderWidth: width * 0.125,\n        borderTopLeftRadius: height * 0.5,\n        borderTopRightRadius: height * 0.5,\n        borderBottomLeftRadius: height * 0.5,\n        borderBottomRightRadius: height * 0.5,\n        borderColor: backgroundColor,\n        backgroundColor: backgroundColor,\n      },\n      left: {\n        left: width * 0.125,\n        top: width * 0.25,\n        height: height * 0.65,\n      },\n      right: {\n        right: width * 0.175,\n        height: height * 0.875,\n      },\n    };\n  };\n\n  public render(): React.ReactNode {\n    const { style, isAnimated } = this.props;\n    const { container, shape, left, right } = this.getComponentStyle(StyleSheet.flatten(style));\n\n    const Component = isAnimated ? Animated.View : View;\n\n    return (\n      <Component style={[container, styles.container]}>\n        <Component style={[shape, left, styles.shape, styles.left]} />\n        <Component style={[shape, right, styles.shape, styles.right]} />\n      </Component>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: I18nLayoutService.toI18nStyle({\n    flexDirection: 'row',\n    transform: [{ rotate: '-5deg' }],\n  }),\n  shape: {\n    position: 'absolute',\n  },\n  left: {\n    transform: [{ rotate: '-40deg' }],\n  },\n  right: {\n    transform: [{ rotate: '40deg' }],\n  },\n});\n","import React from 'react';\nimport {\n  Animated,\n  Easing,\n  LayoutChangeEvent,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutService } from '../../services';\n\ninterface ComponentProps {\n  positions: number;\n  selectedPosition?: number;\n  animationDuration?: number;\n}\n\nexport type TabIndicatorProps = ViewProps & ComponentProps;\nexport type TabIndicatorElement = React.ReactElement<TabIndicatorProps>;\n\nexport class TabIndicator extends React.Component<TabIndicatorProps> {\n\n  static defaultProps: Partial<TabIndicatorProps> = {\n    selectedPosition: 0,\n    animationDuration: 200,\n  };\n\n  private indicatorWidth: number;\n  private contentOffset: Animated.Value = new Animated.Value(0);\n\n  public componentDidMount() {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public shouldComponentUpdate(nextProps: TabIndicatorProps): boolean {\n    return this.props.selectedPosition !== nextProps.selectedPosition;\n  }\n\n  public componentDidUpdate() {\n    const { selectedPosition: index } = this.props;\n\n    this.scrollToIndex({ index, animated: true });\n  }\n\n  public componentWillUnmount() {\n    this.contentOffset.removeAllListeners();\n  }\n\n  /**\n   * scrolls indicator to passed index\n   *\n   * @param params (object) - {\n   *  index: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToIndex(params: { index: number, animated?: boolean }) {\n    const { index, ...rest } = params;\n    const offset: number = this.indicatorWidth * index;\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  /**\n   * scrolls indicator to passed offset\n   *\n   * @param params (object) - {\n   *  offset: number,\n   *  animated: boolean | undefined\n   * }\n   */\n  public scrollToOffset(params: { offset: number, animated?: boolean }) {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  }\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }) => {\n    // no-op\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }) => {\n    // no-op\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    const animationDuration: number = params.animated ? this.props.animationDuration : 0;\n\n    return Animated.timing(this.contentOffset, {\n      toValue: I18nLayoutService.select(params.offset, -params.offset),\n      duration: animationDuration,\n      easing: Easing.linear,\n    });\n  };\n\n  private onLayout = (event: LayoutChangeEvent) => {\n    this.indicatorWidth = event.nativeEvent.layout.width;\n\n    this.scrollToOffset({\n      offset: this.indicatorWidth * this.props.selectedPosition,\n      animated: false,\n    });\n  };\n\n  private getComponentStyle = (): ViewStyle => {\n    const widthPercent: number = 100 / this.props.positions;\n\n    return {\n      width: `${widthPercent}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, ...restProps } = this.props;\n    const componentStyle: ViewStyle = this.getComponentStyle();\n\n    return (\n      <Animated.View\n        {...restProps}\n        onLayout={this.onLayout}\n        style={[style, componentStyle]}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  View,\n  Animated,\n  StyleSheet,\n  ViewProps,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\n\nexport type ChevronDirection = 'top' | 'bottom' | 'left' | 'right';\n\ninterface ComponentProps {\n  isAnimated?: boolean;\n  direction?: ChevronDirection;\n}\n\nexport type ChevronProps = ViewProps & ComponentProps;\nexport type ChevronElement = React.ReactElement<ChevronProps>;\n\nexport class Chevron extends React.Component<ChevronProps> {\n\n  static defaultProps = {\n    isAnimated: false,\n    direction: 'bottom',\n  };\n\n  private getDirectionStyle = (): StyleType => {\n    const { direction } = this.props;\n\n    switch (direction) {\n      case 'top':\n        return styles.containerTopRotate;\n      case 'right':\n        return styles.containerRightRotate;\n      case 'left':\n        return styles.containerLeftRotate;\n      default:\n        return null;\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      width,\n      height,\n      tintColor: backgroundColor,\n      marginHorizontal,\n    } = source;\n\n    return {\n      container: {\n        width: width,\n        height: height,\n        marginHorizontal: marginHorizontal,\n      },\n      // the dependence of the variables was determined experimentally. Changes may be needed later.\n      shape: {\n        top: height * 0.25,\n        borderWidth: width * 0.06,\n        borderTopLeftRadius: height * 0.5,\n        borderTopRightRadius: height * 0.5,\n        borderBottomLeftRadius: height * 0.5,\n        borderBottomRightRadius: height * 0.5,\n        borderColor: backgroundColor,\n        backgroundColor: backgroundColor,\n      },\n      left: {\n        left: width * 0.28,\n        height: height * 0.45,\n      },\n      right: {\n        right: width * 0.28,\n        height: height * 0.45,\n      },\n    };\n  };\n\n  public render(): React.ReactNode {\n    const { style, isAnimated } = this.props;\n    const { container, shape, left, right } = this.getComponentStyle(StyleSheet.flatten(style));\n    const directionStyle: StyleType = this.getDirectionStyle();\n\n    const Component = isAnimated ? Animated.View : View;\n\n    return (\n      <Component style={[container, directionStyle, style]}>\n        <Component style={[shape, left, styles.shape, styles.left]}/>\n        <Component style={[shape, right, styles.shape, styles.right]}/>\n      </Component>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  containerTopRotate: {\n    transform: [{ rotate: '180deg' }],\n  },\n  containerLeftRotate: {\n    transform: [{ rotate: '90deg' }],\n  },\n  containerRightRotate: {\n    transform: [{ rotate: '-90deg' }],\n  },\n  shape: {\n    position: 'absolute',\n  },\n  left: {\n    transform: [{ rotate: '-45deg' }, { translateY: 1 }],\n  },\n  right: {\n    transform: [{ rotate: '45deg' }, { translateY: 1 }],\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { BottomNavigationTabElement } from './bottomNavigationTab.component';\nimport {\n  TabIndicator,\n  TabIndicatorProps,\n} from '../support/components';\n\ntype IndicatorElement = React.ReactElement<TabIndicatorProps>;\ntype ChildrenProp = BottomNavigationTabElement | BottomNavigationTabElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  onSelect?: (index: number) => void;\n}\n\nexport type BottomNavigationProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type BottomNavigationElement = React.ReactElement<BottomNavigationProps>;\n\n/**\n * `BottomNavigation` component is designed to be a Bottom Tab Bar.\n * Can be used for navigation.\n *\n * @extends React.Component\n *\n * @property {number} selectedIndex - Determines index of the selected tab.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` | `noIndicator`.\n *\n * @property {React.ReactElement<TabProps> | React.ReactElement<TabProps>[]} children -\n * Determines tabs of the Bottom Navigation.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines styles of the indicator.\n *\n * @property {(index: number) => void} onSelect - Triggered on select value.\n *\n * @property {ViewProps} - Any props applied to View component.\n *\n * @property StyledComponentProps\n *\n * @overview-example BottomNavigationSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { createAppContainer, SafeAreaView } from 'react-navigation';\n * import { createBottomTabNavigator } from 'react-navigation-tabs';\n * import { BottomNavigation, BottomNavigationTab, Layout, Text } from 'react-native-ui-kitten';\n *\n * // React Navigation also requires installing additional dependencies:\n * //\n * // npm i react-navigation react-navigation-tabs react-native-reanimated react-native-gesture-handler\n * //\n * // Then install it for ios:\n * //\n * // cd ios && pod install\n *\n * const HomeScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>HOME</Text>\n *   </Layout>\n * );\n *\n * const SettingsScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>SETTINGS</Text>\n *   </Layout>\n * );\n *\n * const TabBarComponent = ({ navigation }) => {\n *\n *   const onSelect = (index) => {\n *     const { [index]: selectedTabRoute } = navigation.state.routes;\n *     navigation.navigate(selectedTabRoute.routeName);\n *   };\n *\n *   return (\n *     <SafeAreaView>\n *       <BottomNavigation selectedIndex={navigation.state.index} onSelect={onSelect}>\n *         <BottomNavigationTab title='HOME'/>\n *         <BottomNavigationTab title='SETTINGS'/>\n *       </BottomNavigation>\n *     </SafeAreaView>\n *   );\n * };\n *\n * const TabNavigator = createBottomTabNavigator({\n *   Home: HomeScreen,\n *   Settings: SettingsScreen,\n * }, {\n *   tabBarComponent: TabBarComponent,\n * });\n *\n * export const AppNavigator = createAppContainer(TabNavigator);\n * ```\n *\n * @example BottomNavigationWithoutIndicator\n *\n * @overview-example BottomNavigationWithIcons\n *\n * @example BottomNavigationInlineStyling\n */\nexport class BottomNavigationComponent extends React.Component<BottomNavigationProps> {\n\n  static styledComponentName: string = 'BottomNavigation';\n\n  static defaultProps: Partial<BottomNavigationProps> = {\n    selectedIndex: 0,\n  };\n\n  private onTabSelect = (index: number): void => {\n    if (this.props.onSelect && this.props.selectedIndex !== index) {\n      this.props.onSelect(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { indicatorHeight, indicatorBackgroundColor, ...containerParameters } = source;\n\n    return {\n      container: containerParameters,\n      item: {},\n      indicator: {\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderIndicatorElement = (positions: number, style: ViewStyle): IndicatorElement => {\n    const { indicatorStyle, selectedIndex } = this.props;\n\n    return (\n      <TabIndicator\n        key={0}\n        style={[style, styles.indicator, indicatorStyle]}\n        selectedPosition={selectedIndex}\n        positions={positions}\n      />\n    );\n  };\n\n  private renderTabElement = (element: BottomNavigationTabElement, index: number): BottomNavigationTabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: index === this.props.selectedIndex,\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenProp): BottomNavigationTabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const tabElements: BottomNavigationTabElement[] = this.renderTabElements(this.props.children);\n\n    const hasIndicator: boolean = style.indicator.height > 0;\n\n    return [\n      hasIndicator && this.renderIndicatorElement(tabElements.length, style.indicator),\n      ...tabElements,\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const [indicatorElement, ...tabElements] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[container, styles.container, style]}>\n        {indicatorElement}\n        {tabElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n  indicator: {\n    position: 'absolute',\n  },\n});\n\nexport const BottomNavigation = styled<BottomNavigationProps>(BottomNavigationComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Text as RNText,\n  TextProps as RNTextProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\ntype ChildElement = string | TextElement;\n\ninterface ComponentProps {\n  category?: string;\n  status?: string;\n  children?: ChildElement | ChildElement[];\n}\n\nexport type TextProps = StyledComponentProps & RNTextProps & ComponentProps;\nexport type TextElement = React.ReactElement<TextProps>;\n\n/**\n * Styled `Text` component.\n *\n * @extends React.Component\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning` or `danger`.\n *\n * @property {string} children - Determines text of the component.\n *\n * @property {string} category - Determines the category of the component.\n * Can be `h1`, `h2`, `h3`, `h4`, `h5`, `h6`, `s1`, `s2`, `p1`, `p2`, `c1`, `c2`, `label`.\n * Default is `p1`.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default`, `alternative`, `hint`.\n * Default is `default`.\n *\n * @property TextProps - Any props applied to Text component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example TextSimpleUsage\n *\n * @overview-example TextAppearances\n *\n * @overview-example TextCategories\n *\n * @overview-example TextStatuses\n *\n * @example TextInlineStyling\n */\nexport class TextComponent extends React.Component<TextProps> {\n\n  static styledComponentName: string = 'Text';\n\n  public render(): React.ReactElement<RNTextProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n\n    return (\n      <RNText\n        {...derivedProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Text = styled<TextProps>(TextComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: ImageStyle) => IconElement;\n\ninterface ComponentProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n}\n\nexport type BottomNavigationTabProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type BottomNavigationTabElement = React.ReactElement<BottomNavigationTabProps>;\n\n/**\n * `BottomNavigationTab` component is a part of the `BottomNavigation` component.\n * `BottomNavigation` tabs should be wrapped in BottomNavigation to provide usable component.\n * See usage examples at `BottomNavigation` component documentation.\n *\n * @extends React.Component\n *\n * @property {boolean} selected - Determines whether component is selected.\n *\n * @property {string} title - Determines the title of the tab.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines the icon of the tab.\n *\n * @property {(selected: boolean) => void} onSelect - Triggered on select value.\n *\n * @property {TouchableOpacityProps} - Any props applied to TouchableOpacity component.\n *\n * @property StyledComponentProps\n *\n * @overview-example BottomNavigationTabSimpleUsage\n *\n * @overview-example BottomNavigationTabWithIcon\n *\n * @example BottomNavigationTabWithExternalSourceIcon\n *\n * @example BottomNavigationTabInlineStyling\n */\nexport class BottomNavigationTabComponent extends React.Component<BottomNavigationTabProps> {\n\n  static styledComponentName: string = 'BottomNavigationTab';\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.props.selected);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n    };\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 1,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderTitleElement = (style: TextStyle): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={2}\n        style={[style, styles.text, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, title } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(title) && this.renderTitleElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, ...restProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n    const [iconElement, titleElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}>\n        {iconElement}\n        {titleElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {},\n  icon: {},\n});\n\nexport const BottomNavigationTab = styled<BottomNavigationTabProps>(BottomNavigationTabComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  BottomNavigationTab as RNBottomNavigationTab,\n  BottomNavigationTabElement as RNBottomNavigationTabElement,\n  BottomNavigationTabProps as RNBottomNavigationTabProps,\n  // @ts-ignore\n} from './bottomNavigationTab.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type BottomNavigationTabProps = RNBottomNavigationTabProps & WebEventResponderCallbacks;\nexport type BottomNavigationTabElement = React.ReactElement<BottomNavigationTabProps>;\n\nexport class BottomNavigationTab extends React.Component<BottomNavigationTabProps>\n  implements WebEventResponderCallbacks {\n\n  private bottomNavigationTabRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.bottomNavigationTabRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.bottomNavigationTabRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNBottomNavigationTabElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNBottomNavigationTab\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.bottomNavigationTabRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: ImageStyle) => IconElement;\n\ninterface ComponentProps {\n  textStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  status?: string;\n  size?: string;\n  children?: string;\n}\n\nexport type ButtonProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type ButtonElement = React.ReactElement<ButtonProps>;\n\n/**\n * Styled `Button` component.\n *\n * @extends React.Component\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger` or `control`.\n * Default is `primary`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `giant`, `large`, `medium`, `small`, or `tiny`.\n * Default is `medium`.\n *\n * @property {string} children - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled` | `outline` | `ghost`.\n * Default is `filled`.\n *\n * @property {TouchableOpacityProps} - Any props applied to TouchableOpacity component.\n *\n * @property {StyledComponentProps} - Any props applied to `styled` component.\n *\n * @overview-example ButtonSimpleUsage\n *\n * @overview-example ButtonAppearances\n *\n * @overview-example ButtonStatus\n *\n * @overview-example ButtonSize\n *\n * @overview-example ButtonOutline\n *\n * @overview-example ButtonGhost\n *\n * @overview-example ButtonWithIcon\n */\nexport class ButtonComponent extends React.Component<ButtonProps> {\n\n  static styledComponentName: string = 'Button';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textColor,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textMarginHorizontal,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      iconMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      text: {\n        color: textColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n        marginHorizontal: iconMarginHorizontal,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={1}\n        style={[style, styles.text, this.props.textStyle]}>\n        {this.props.children}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 2,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, children } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(children) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...containerProps } = this.props;\n    const { container, ...childStyles } = this.getComponentStyle(themedStyle);\n    const [iconElement, textElement] = this.renderComponentChildren(childStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...containerProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {iconElement}\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  text: {},\n  icon: {},\n});\n\nexport const Button = styled<ButtonProps>(ButtonComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Button as RNButton,\n  ButtonElement as RNButtonElement,\n  ButtonProps as RNButtonProps,\n  // @ts-ignore\n} from './button.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type ButtonProps = RNButtonProps & WebEventResponderCallbacks;\nexport type ButtonElement = React.ReactElement<ButtonProps>;\n\nexport class Button extends React.Component<ButtonProps> implements WebEventResponderCallbacks {\n\n  private buttonRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.buttonRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.buttonRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.buttonRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.buttonRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNButtonElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNButton\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.buttonRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { ButtonElement } from '../button/button.component';\n\ntype ChildrenProp = ButtonElement | ButtonElement[];\n\ninterface ComponentProps {\n  size?: string;\n  status?: string;\n  children: ChildrenProp;\n}\n\nexport type ButtonGroupProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type ButtonGroupElement = React.ReactElement<ButtonGroupProps>;\n\n/**\n * Renders a group of `Buttons`.\n *\n * @extends React.Component\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning`, `danger` or `white`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `giant`, `large`, `medium`, `small`, or `tiny`.\n * Default is `medium`.\n *\n * @property {React.ReactElement<ButtonProps>[]} children - Determines buttons in group.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled` or `outline`.\n * Default is `filled`.\n *\n * @property ViewProps - Any props applied to View component.\n *\n * @property StyledComponentProps - - Any props applied to `styled` component.\n *\n * @overview-example ButtonGroupSimpleUsage\n *\n * @overview-example ButtonGroupStatus\n *\n * @overview-example ButtonGroupSize\n *\n * @example ButtonGroupInlineStyling\n */\nclass ButtonGroupComponent extends React.Component<ButtonGroupProps> {\n\n  static styledComponentName: string = 'ButtonGroup';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { dividerBackgroundColor, dividerWidth, ...containerParameters } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        borderWidth: containerParameters.borderWidth + 0.25,\n      },\n      button: {\n        borderWidth: dividerWidth,\n        borderColor: dividerBackgroundColor,\n      },\n    };\n  };\n\n  private isFirstElement = (index: number): boolean => {\n    return index === 0;\n  };\n\n  private isLastElement = (index: number): boolean => {\n    return index === React.Children.count(this.props.children) - 1;\n  };\n\n  private renderButtonElement = (element: ButtonElement, index: number, style: StyleType): ButtonElement => {\n    const { appearance, size, status } = this.props;\n    const { borderRadius }: ViewStyle = style.container;\n    const { borderWidth, borderColor }: ViewStyle = style.button;\n\n    const shapeStyle: ViewStyle = !this.isLastElement(index) && {\n      borderEndWidth: borderWidth,\n      borderEndColor: borderColor,\n    };\n\n    const startShapeStyle: ViewStyle = this.isFirstElement(index) && {\n      borderTopStartRadius: borderRadius,\n      borderBottomStartRadius: borderRadius,\n    };\n\n    const endShapeStyle: ViewStyle = this.isLastElement(index) && {\n      borderTopEndRadius: borderRadius,\n      borderBottomEndRadius: borderRadius,\n    };\n\n    return React.cloneElement(element, {\n      key: index,\n      appearance: appearance,\n      size: size,\n      status: status,\n      style: [element.props.style, styles.button, shapeStyle, startShapeStyle, endShapeStyle],\n    });\n  };\n\n  private renderButtonElements = (source: ChildrenProp, style: StyleType): ButtonElement[] => {\n    return React.Children.map(source, (element: ButtonElement, index: number): ButtonElement => {\n      return this.renderButtonElement(element, index, style);\n    });\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const buttonElements: ButtonElement[] = this.renderButtonElements(children, componentStyle);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[componentStyle.container, styles.container, style]}>\n        {buttonElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n  button: {\n    borderRadius: 0,\n    borderWidth: 0,\n  },\n});\n\nexport const ButtonGroup = styled<ButtonGroupProps>(ButtonGroupComponent);\n","import React from 'react';\nimport {\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Button } from '../../button/button.component';\nimport {\n  Chevron,\n  ChevronElement,\n  ChevronDirection,\n} from '../../support/components';\n\ninterface ComponentProps extends ViewProps {\n  title: string;\n  titleStyle?: StyleProp<TextStyle>;\n  iconStyle?: ImageStyle;\n  lateralNavigationAllowed: boolean;\n  onTitlePress?: () => void;\n  onNavigationLeftPress?: () => void;\n  onNavigationRightPress?: () => void;\n}\n\nexport type CalendarHeaderProps = ComponentProps;\nexport type CalendarHeaderElement = React.ReactElement<CalendarHeaderProps>;\n\nexport class CalendarHeader extends React.Component<CalendarHeaderProps> {\n\n  private renderSpecificTitleIcon = (style: StyleProp<ImageStyle>, direction: ChevronDirection): ChevronElement => {\n    return (\n      <Chevron\n        style={style}\n        direction={direction}\n      />\n    );\n  };\n\n  private renderTitleIcon = (style: ImageStyle): ChevronElement => {\n    const { iconStyle } = this.props;\n\n    return this.renderSpecificTitleIcon(iconStyle, 'bottom');\n  };\n\n  private renderLeftIcon = (style: ImageStyle): ChevronElement => {\n    const { iconStyle } = this.props;\n\n    return this.renderSpecificTitleIcon([iconStyle, styles.lateralIcon], 'left');\n  };\n\n  private renderRightIcon = (style: ImageStyle): ChevronElement => {\n    const { iconStyle } = this.props;\n\n    return this.renderSpecificTitleIcon([iconStyle, styles.lateralIcon], 'right');\n  };\n\n  private renderLateralNavigationControls = (): React.ReactElement<ViewProps> => {\n    return (\n      <View style={styles.subContainer}>\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          // @ts-ignore\n          icon={this.renderLeftIcon}\n          onPress={this.props.onNavigationLeftPress}\n        />\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          // @ts-ignore\n          icon={this.renderRightIcon}\n          onPress={this.props.onNavigationRightPress}\n        />\n      </View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, titleStyle, onTitlePress, title, lateralNavigationAllowed, ...restProps } = this.props;\n\n    return (\n      <View style={[styles.container, style]} {...restProps}>\n        <Button\n          style={styles.headerButton}\n          appearance='ghost'\n          textStyle={[titleStyle, styles.headerButtonText]}\n          // @ts-ignore\n          icon={this.renderTitleIcon}\n          onPress={onTitlePress}>\n          {title}\n        </Button>\n        {lateralNavigationAllowed && this.renderLateralNavigationControls()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  headerButton: {\n    paddingVertical: 0,\n    paddingHorizontal: 0,\n    minWidth: 24,\n    minHeight: 24,\n  },\n  headerButtonText: {\n    marginHorizontal: 0,\n  },\n  lateralIcon: {\n    marginHorizontal: 0,\n  },\n  subContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\n\ninterface ComponentProps extends ViewProps {\n  data: string[];\n  children: (data: string, index: number) => React.ReactElement<any>;\n}\n\nexport type CalendarMonthHeaderProps = ComponentProps;\nexport type CalendarMonthHeaderElement = React.ReactElement<CalendarMonthHeaderProps>;\n\nexport class CalendarMonthHeader extends React.Component<CalendarMonthHeaderProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, children, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        {data.map(children)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    flexDirection: 'row',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  LayoutChangeEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { I18nLayoutService } from '../support/services';\n\ntype ChildElement = React.ReactElement<any>;\ntype ChildrenProp = ChildElement | ChildElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  shouldLoadComponent?: (index: number) => boolean;\n  onOffsetChange?: (offset: number) => void;\n  onSelect?: (index: number) => void;\n}\n\nexport type ViewPagerProps = ViewProps & ComponentProps;\nexport type ViewPagerElement = React.ReactElement<ViewPagerProps>;\n\n/**\n * `ViewPager` allows flipping through the \"pages\".\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<any> | React.ReactElement<any>[]} children - Determines children of the component.\n *\n * @property {number} selectedIndex - Determines the index of selected \"page\".\n *\n * @property {(index: number) => boolean} shouldLoadComponent - Determines loading behavior particular page and can be\n * used for lazy loading.\n *\n * @property {(offset: number) => void} onOffsetChange - Fires on scroll event with current scroll offset.\n *\n * @property {(index: number) => void} onSelect - Fires on \"page\" select with corresponding index.\n *\n * @property {ViewProps} - Any props applied to View component.\n *\n * @overview-example ViewPagerSimpleUsage\n *\n * @overview-example ViewPagerLazyLoading\n *\n * @example ViewPagerInlineStyling\n */\nexport class ViewPager extends React.Component<ViewPagerProps> implements PanResponderCallbacks {\n\n  static defaultProps: Partial<ViewPagerProps> = {\n    selectedIndex: 0,\n    shouldLoadComponent: (): boolean => true,\n  };\n\n  private containerRef: React.RefObject<View> = React.createRef();\n  private contentWidth: number = 0;\n  private contentOffsetValue: number = 0;\n  private contentOffset: Animated.Value = new Animated.Value(this.contentOffsetValue);\n  private panResponder: PanResponderInstance = PanResponder.create(this);\n\n  public componentDidMount(): void {\n    this.contentOffset.addListener(this.onContentOffsetAnimationStateChanged);\n  }\n\n  public componentDidUpdate(prevProps: ViewPagerProps): void {\n    if (prevProps.selectedIndex !== this.props.selectedIndex) {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({ index, animated: true });\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.contentOffset.removeAllListeners();\n  }\n\n  public onMoveShouldSetPanResponder = (event: GestureResponderEvent, state: PanResponderGestureState): boolean => {\n    const isHorizontalMove: boolean = Math.abs(state.dx) > 0 && Math.abs(state.dx) > Math.abs(state.dy);\n\n    if (isHorizontalMove) {\n      const i18nOffset: number = I18nLayoutService.select(state.dx, -state.dx);\n      const nextSelectedIndex: number = this.props.selectedIndex - Math.sign(i18nOffset);\n\n      return nextSelectedIndex >= 0 && nextSelectedIndex < this.getChildCount();\n    }\n\n    return false;\n  };\n\n  public onPanResponderMove = (event: GestureResponderEvent, state: PanResponderGestureState): void => {\n    const i18nOffset: number = I18nLayoutService.select(this.contentWidth, -this.contentWidth);\n    const selectedPageOffset: number = this.props.selectedIndex * i18nOffset;\n\n    this.contentOffset.setValue(state.dx - selectedPageOffset);\n  };\n\n  public onPanResponderRelease = (event: GestureResponderEvent, state: PanResponderGestureState) => {\n    if (Math.abs(state.vx) >= 0.5 || Math.abs(state.dx) >= 0.5 * this.contentWidth) {\n      const i18nOffset: number = I18nLayoutService.select(state.dx, -state.dx);\n      const index: number = i18nOffset > 0 ? this.props.selectedIndex - 1 : this.props.selectedIndex + 1;\n      this.scrollToIndex({ index, animated: true });\n    } else {\n      const index: number = this.props.selectedIndex;\n      this.scrollToIndex({ index, animated: true });\n    }\n  };\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    const { index, ...rest } = params;\n    const childCount = this.getChildCount() - 1;\n    const offset: number = this.contentWidth * (index < 0 ? 0 : index > childCount ? childCount : index);\n\n    this.scrollToOffset({ offset, ...rest });\n  }\n\n  public scrollToOffset = (params: { offset: number, animated?: boolean }): void => {\n    this.createOffsetAnimation(params).start(this.onContentOffsetAnimationStateEnd);\n  };\n\n  private onLayout = (event: LayoutChangeEvent): void => {\n    this.contentWidth = event.nativeEvent.layout.width / this.getChildCount();\n\n    this.scrollToIndex({\n      index: this.props.selectedIndex,\n    });\n  };\n\n  private onContentOffsetAnimationStateChanged = (state: { value: number }): void => {\n    this.contentOffsetValue = I18nLayoutService.select(-state.value, state.value);\n\n    if (this.props.onOffsetChange) {\n      this.props.onOffsetChange(this.contentOffsetValue);\n    }\n  };\n\n  private onContentOffsetAnimationStateEnd = (result: { finished: boolean }): void => {\n    const selectedIndex: number = this.contentOffsetValue / this.contentWidth;\n\n    if (selectedIndex !== this.props.selectedIndex && this.props.onSelect) {\n      this.props.onSelect(Math.round(selectedIndex));\n    }\n  };\n\n  private createOffsetAnimation = (params: { offset: number, animated?: boolean }): Animated.CompositeAnimation => {\n    const animationDuration: number = params.animated ? 300 : 0;\n\n    return Animated.timing(this.contentOffset, {\n      toValue: I18nLayoutService.select(-params.offset, params.offset),\n      easing: Easing.linear,\n      duration: animationDuration,\n    });\n  };\n\n  private renderComponentChild = (source: ChildElement, index: number): ChildElement => {\n    const contentView: ChildElement | null = this.props.shouldLoadComponent(index) ? source : null;\n\n    return (\n      <View style={styles.contentContainer}>\n        {contentView}\n      </View>\n    );\n  };\n\n  private renderComponentChildren = (source: ChildrenProp): ChildElement[] => {\n    return React.Children.map(source, this.renderComponentChild);\n  };\n\n  private getChildCount = (): number => {\n    return React.Children.count(this.props.children);\n  };\n\n  private getContainerStyle = (): ViewStyle => {\n    return {\n      width: `${100 * this.getChildCount()}%`,\n\n      // @ts-ignore: RN has no types for `Animated` styles\n      transform: [{ translateX: this.contentOffset }],\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, children, ...restProps } = this.props;\n\n    return (\n      <Animated.View\n        {...restProps}\n        ref={this.containerRef}\n        style={[styles.container, style, this.getContainerStyle()]}\n        onLayout={this.onLayout}\n        {...this.panResponder.panHandlers}>\n        {this.renderComponentChildren(children)}\n      </Animated.View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  contentContainer: {\n    flex: 1,\n    width: '100%',\n  },\n});\n","import React from 'react';\nimport {\n  ViewPager,\n  ViewPagerElement,\n  ViewPagerProps,\n} from '../../viewPager/viewPager.component';\nimport { CalendarDateInfo } from '../type';\nimport { Override } from '../../support/typings';\n\nexport type CalendarPagerProps<D> = Override<ViewPagerProps, {\n  data: CalendarDateInfo<D>[];\n  children: (date: CalendarDateInfo<D>, index: number) => React.ReactElement<any>;\n}>;\n\nexport type CalendarPagerElement<D> = React.ReactElement<CalendarPagerProps<D>>;\n\nexport class CalendarPager<D> extends React.Component<CalendarPagerProps<D>> {\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    this.viewPagerRef.current.scrollToIndex(params);\n  }\n\n  private viewPagerRef: React.RefObject<ViewPager> = React.createRef();\n\n  private onSelect = (index: number): void => {\n    // For any reason, this fixes layout junks\n    setTimeout(() => {\n      this.props.onSelect(index);\n    });\n  };\n\n  private shouldLoadComponent = (index: number): boolean => {\n    if (this.props.shouldLoadComponent) {\n      return this.props.shouldLoadComponent(index);\n    }\n    return true;\n  };\n\n  private createChildElement = (date: CalendarDateInfo<D>, index: number): React.ReactElement<any> => {\n    if (this.shouldLoadComponent(index)) {\n      return this.props.children(date, index);\n    }\n    return null;\n  };\n\n  public render(): ViewPagerElement {\n    const { data, children, ...restProps } = this.props;\n\n    return (\n      <ViewPager\n        {...restProps}\n        ref={this.viewPagerRef}\n        shouldLoadComponent={this.shouldLoadComponent}\n        onSelect={this.onSelect}>\n        {data.map(this.createChildElement)}\n      </ViewPager>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { CalendarPickerCellElement } from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\ninterface ComponentProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[];\n  renderItem: (item: CalendarDateInfo<D>, index: number) => CalendarPickerCellElement<D>;\n}\n\nexport type CalendarPickerRowProps<D> = ComponentProps<D>;\nexport type CalendarPickerRowElement<D> = React.ReactElement<CalendarPickerRowProps<D>>;\n\nexport class CalendarPickerRow<D> extends React.Component<CalendarPickerRowProps<D>> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, data, renderItem, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        {data.map(renderItem)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { CalendarDateInfo } from '@kitten/ui/calendar/type';\n\ntype ChildrenProp<D> = (date: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n\ninterface ComponentProps<D> extends TouchableOpacityProps {\n  date: CalendarDateInfo<D>;\n  category?: string;\n  selected?: boolean;\n  bounding?: boolean;\n  today?: boolean;\n  range?: boolean;\n  firstRangeItem?: boolean;\n  lastRangeItem?: boolean;\n  onSelect?: (date: CalendarDateInfo<D>) => void;\n  children: ChildrenProp<D>;\n  shouldComponentUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n}\n\nexport type CalendarPickerCellProps<D> = StyledComponentProps & ComponentProps<D>;\nexport type CalendarPickerCellElement<D> = React.ReactElement<CalendarPickerCellProps<D>>;\n\nclass CalendarPickerCellComponent<D> extends React.Component<CalendarPickerCellProps<D>> {\n\n  static styledComponentName: string = 'CalendarCell';\n\n  static defaultProps = {\n    selected: false,\n    today: false,\n  };\n\n  public shouldComponentUpdate(nextProps: CalendarPickerCellProps<D>): boolean {\n    if (nextProps.shouldComponentUpdate) {\n      return nextProps.shouldComponentUpdate(this.props, nextProps);\n    }\n    return true;\n  }\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(this.props.date);\n    }\n  };\n\n  private getContainerBorderRadius = (borderRadius: number): StyleType => {\n    const { firstRangeItem, lastRangeItem } = this.props;\n\n    if (firstRangeItem) {\n      return {\n        borderBottomLeftRadius: borderRadius,\n        borderBottomRightRadius: 0,\n        borderTopLeftRadius: borderRadius,\n        borderTopRightRadius: 0,\n      };\n    }\n    if (lastRangeItem) {\n      return {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: borderRadius,\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: borderRadius,\n      };\n    }\n\n    return {};\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      contentBorderWidth,\n      contentBorderRadius,\n      contentBorderColor,\n      contentBackgroundColor,\n      contentTextFontSize,\n      contentTextLineHeight,\n      contentTextFontWeight,\n      contentTextColor,\n      contentTextFontFamily,\n      borderRadius,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {\n        ...containerParameters,\n        ...this.getContainerBorderRadius(borderRadius),\n      },\n      contentContainer: {\n        borderWidth: contentBorderWidth,\n        borderRadius: contentBorderRadius,\n        borderColor: contentBorderColor,\n        backgroundColor: contentBackgroundColor,\n      },\n      contentText: {\n        fontSize: contentTextFontSize,\n        fontWeight: contentTextFontWeight,\n        lineHeight: contentTextLineHeight,\n        color: contentTextColor,\n        fontFamily: contentTextFontFamily,\n      },\n    };\n  };\n\n  private renderContentElement = (source: ChildrenProp<D>, style: StyleType): React.ReactElement<any> => {\n    return source && source(this.props.date, {\n      container: style.contentContainer,\n      text: style.contentText,\n    });\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, date, bounding, children, ...restProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        onPress={this.onPress}\n        {...restProps}\n        style={[container, styles.container, style]}>\n        {this.renderContentElement(children, componentStyles)}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n\nexport const CalendarPickerCell = styled(CalendarPickerCellComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleProp,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  CalendarPickerRow,\n  CalendarPickerRowElement,\n} from './calendarPickerRow.component';\nimport {\n  CalendarPickerCell,\n  CalendarPickerCellElement,\n  CalendarPickerCellProps,\n} from './calendarPickerCell.component';\nimport { CalendarDateInfo } from '../../type';\n\ninterface ComponentProps<D> extends ViewProps {\n  data: CalendarDateInfo<D>[][];\n  category: string;\n  isItemSelected: (item: CalendarDateInfo<D>) => boolean;\n  isItemDisabled: (item: CalendarDateInfo<D>) => boolean;\n  isItemToday: (item: CalendarDateInfo<D>) => boolean;\n  onSelect?: (item: CalendarDateInfo<D>) => void;\n  renderItem: (item: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  shouldItemUpdate?: (props: CalendarPickerCellProps<D>, nextProps: CalendarPickerCellProps<D>) => boolean;\n  rowStyle?: StyleProp<ViewProps>;\n}\n\nexport type CalendarPickerProps<D> = ComponentProps<D>;\nexport type CalendarPickerElement<D> = React.ReactElement<CalendarPickerProps<D>>;\n\nexport class CalendarPicker<D> extends React.Component<CalendarPickerProps<D>> {\n\n  private get rangedArray (): CalendarDateInfo<D>[] {\n    const { data } = this.props;\n\n    return [].concat(...data).filter((item: CalendarDateInfo<D>) => {\n      return item.range;\n    });\n  }\n\n  private isFirstRangeItem = (item: CalendarDateInfo<D>, range: CalendarDateInfo<D>[]): boolean => {\n    return range.indexOf(item) === 0;\n  };\n\n  private isLastRangeItem = (item: CalendarDateInfo<D>, range: CalendarDateInfo<D>[]): boolean => {\n    return range.indexOf(item) === range.length - 1;\n  };\n\n  private renderCellElement = (item: CalendarDateInfo<D>, index: number): CalendarPickerCellElement<D> => {\n    const isFirstRangeItem: boolean = this.isFirstRangeItem(item, this.rangedArray);\n    const isLastRangeItem: boolean = this.isLastRangeItem(item, this.rangedArray);\n\n    return (\n      <CalendarPickerCell\n        key={index}\n        date={item}\n        category={this.props.category}\n        selected={this.props.isItemSelected(item)}\n        disabled={this.props.isItemDisabled(item)}\n        bounding={item.bounding}\n        today={this.props.isItemToday(item)}\n        range={item.range}\n        firstRangeItem={isFirstRangeItem}\n        lastRangeItem={isLastRangeItem}\n        onSelect={this.props.onSelect}\n        shouldComponentUpdate={this.props.shouldItemUpdate}>\n        {this.props.renderItem}\n      </CalendarPickerCell>\n    );\n  };\n\n  private renderRowElement = (item: CalendarDateInfo<D>[], index: number): CalendarPickerRowElement<D> => {\n    const { rowStyle } = this.props;\n\n    return (\n      <CalendarPickerRow\n        style={rowStyle}\n        key={index}\n        data={item}\n        renderItem={this.renderCellElement}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { data, renderItem, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}>\n        {data.map(this.renderRowElement)}\n      </View>\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Text } from '../../text/text.component';\n\ninterface ComponentProps extends ViewProps {\n  textStyle?: StyleProp<TextStyle>;\n  children: string;\n}\n\nexport type CalendarDateContentProps = ComponentProps;\nexport type CalendarDateContentElement = React.ReactElement<CalendarDateContentProps>;\n\nexport class CalendarDateContent extends React.Component<CalendarDateContentProps> {\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, textStyle, children, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, style]}>\n        <Text style={textStyle}>{children}</Text>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","export interface CalendarDateOptions {\n  bounding: boolean;\n  holiday: boolean;\n  range?: boolean;\n}\n\nexport interface CalendarRange<D> {\n  startDate?: D;\n  endDate?: D;\n}\n\nexport interface CalendarDateInfo<D> extends CalendarDateOptions {\n  date: D;\n}\n\nconst VIEW_MODE_DATE: CalendarViewMode = {\n  id: 'DATE',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_YEAR;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_MONTH: CalendarViewMode = {\n  id: 'MONTH',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n};\n\nconst VIEW_MODE_YEAR: CalendarViewMode = {\n  id: 'YEAR',\n  navigationNext: (): CalendarViewMode => {\n    return VIEW_MODE_DATE;\n  },\n  pickNext: (): CalendarViewMode => {\n    return VIEW_MODE_MONTH;\n  },\n};\n\nexport interface CalendarViewMode {\n  id: string;\n  navigationNext: () => CalendarViewMode;\n  pickNext: () => CalendarViewMode;\n}\n\ninterface CalendarViewModes {\n  DATE: CalendarViewMode;\n  MONTH: CalendarViewMode;\n  YEAR: CalendarViewMode;\n}\n\nexport const CalendarViewModes: CalendarViewModes = {\n  DATE: VIEW_MODE_DATE,\n  MONTH: VIEW_MODE_MONTH,\n  YEAR: VIEW_MODE_YEAR,\n};\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport { TranslationWidth } from '../i18n/type';\n\nexport abstract class DateService<D> {\n  static DAYS_IN_WEEK: number = 7;\n  static MONTHS_IN_YEAR: number = 12;\n\n  protected locale: string;\n\n  public setLocale(locale: any) {\n    this.locale = locale;\n  }\n\n  public compareDatesSafe(date1: D, date2: D): number {\n    if (date1 && date2) {\n      return this.compareDates(date1, date2);\n    } else if (!date1 && !date2) {\n      return 0;\n    }\n    return -1;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetween(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date.\n   * */\n  public isBetweenSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.compareDates(date, start) > 0 && this.compareDates(date, end) < 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncluding(date: D, start: D, end: D): boolean {\n    return this.compareDates(date, start) >= 0 && this.compareDates(date, end) <= 0;\n  }\n\n  /**\n   * Checks if the date is between the start date and the end date including bounds.\n   * */\n  public isBetweenIncludingSafe(date: D, start: D, end: D): boolean {\n    return date && start && end && this.isBetweenIncluding(date, start, end);\n  }\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public isSameDaySafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameDay(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public isSameMonthSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameMonth(date1, date2);\n  }\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public isSameYearSafe(date1: D, date2: D): boolean {\n    return date1 && date2 && this.isSameYear(date1, date2);\n  }\n\n  /**\n   * Returns true if date string is valid date string according to the provided format.\n   * */\n  public abstract isValidDateString(date: string, format: string): boolean;\n\n  /**\n   * Returns today date.\n   * */\n  public abstract today(): D;\n\n  /**\n   * Gets the date of the month component of the given date.\n   */\n  public abstract getDate(date: D): number;\n\n  /**\n   * Gets the month component of the given date.\n   * */\n  public abstract getMonth(date: D): number;\n\n  /**\n   * Gets the year component of the given date.\n   * */\n  public abstract getYear(date: D): number;\n\n  /**\n   * Returns day of the week of the given date.\n   */\n  public abstract getDayOfWeek(date: D): number;\n\n  /**\n   * Returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public abstract getFirstDayOfWeek(): number;\n\n  /**\n   * Returns localized month name by date and style.\n   * */\n  public abstract getMonthName(date: D, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized month name by month index and style.\n   * */\n  public abstract getMonthNameByIndex(month: number, style?: TranslationWidth): string;\n\n  /**\n   * Returns localized days names.\n   * */\n  public abstract getDayOfWeekNames(style?: TranslationWidth): string[];\n\n  /**\n   * Parses the date string according to the passed format.\n   * */\n  public abstract parse(date: string, format: string): D;\n\n  /**\n   * Transforms the date to the string according to the passed format.\n   * */\n  public abstract format(date: D, format: string): string;\n\n  /**\n   * Creates new date from year, month and date.\n   * */\n  public abstract createDate(year: number, month: number, date: number): D;\n\n  /**\n   * Checks is two dates have the same year.\n   * */\n  public abstract isSameYear(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same month.\n   * */\n  public abstract isSameMonth(date1: D, date2: D): boolean;\n\n  /**\n   * Checks is two dates have the same day.\n   * */\n  public abstract isSameDay(date1: D, date2: D): boolean;\n\n  /**\n   * Compares two dates.\n   * Returns 0 if dates are the same.\n   * Returns 1 if the first date is greater than the second.\n   * Returns -1 if the second date is greater than the first.\n   * */\n  public abstract compareDates(date1: D, date2: D): number;\n\n  /**\n   * Clones passed date.\n   * */\n  public abstract clone(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to 1.\n   * */\n  public abstract getMonthStart(date: D): D;\n\n  /**\n   * Creates the same date but with day equals to the last day in this month.\n   * */\n  public abstract getMonthEnd(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 0 and day equals to 1.\n   * */\n  public abstract getYearStart(date: D): D;\n\n  /**\n   * Creates the same date but with month equals to 11 and day equals to 31.\n   * */\n  public abstract getYearEnd(date: D): D;\n\n  /**\n   * Returns number of days in the date.\n   * */\n  public abstract getNumberOfDaysInMonth(date: D): number;\n\n  /**\n   * Returns date with added number of days.\n   * */\n  public abstract addDay(date: D, days: number): D;\n\n  /**\n   * Returns date with added number of months.\n   * */\n  public abstract addMonth(date: D, months: number): D;\n\n  /**\n   * Returns date with added number of years.\n   * */\n  public abstract addYear(date: D, years: number): D;\n\n  public abstract getId(): string;\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\ntype DaysArray = [string, string, string, string, string, string, string];\ntype MonthsArray = [string, string, string, string, string, string, string, string, string, string, string, string];\n\nexport enum TranslationWidth {\n  SHORT = 'short',\n  LONG = 'long',\n}\n\nexport interface I18nDayNames {\n  [TranslationWidth.SHORT]: DaysArray;\n  [TranslationWidth.LONG]: DaysArray;\n}\n\nexport interface I18nMonthNames {\n  [TranslationWidth.SHORT]?: MonthsArray;\n  [TranslationWidth.LONG]?: MonthsArray;\n}\n\nexport interface I18nConfig {\n  dayNames: I18nDayNames;\n  monthNames: I18nMonthNames;\n}\n","import { I18nConfig } from './type';\n\nexport const EN: I18nConfig = {\n  dayNames: {\n    short: [\n      'Su',\n      'Mo',\n      'Tu',\n      'We',\n      'Th',\n      'Fr',\n      'Sa',\n    ],\n    long: [\n      'Sunday',\n      'Monday',\n      'Tuesday',\n      'Wednesday',\n      'Thursday',\n      'Friday',\n      'Saturday',\n    ],\n  },\n  monthNames: {\n    short: [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'Jun',\n      'Jul',\n      'Aug',\n      'Sep',\n      'Oct',\n      'Nov',\n      'Dec',\n    ],\n    long: [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'November',\n      'December',\n    ],\n  },\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport fecha from 'fecha';\nimport { DateService } from './date.service';\nimport {\n  I18nConfig,\n  TranslationWidth,\n} from '../i18n/type';\nimport { EN } from '../i18n/en';\n\nexport const LOCALE_DEFAULT = 'en';\n\nexport interface NativeDateServiceOptions {\n  // 0 for Sunday, 1 for Monday, etc\n  startDayOfWeek?: 0 | 1 | 2 | 3 | 4 | 5 | 6;\n  i18n?: I18nConfig;\n}\n\nconst DEFAULT_OPTIONS: NativeDateServiceOptions = {\n  startDayOfWeek: 0,\n};\n\n/**\n * The `NativeDateService` is basic implementation of `DateService` using\n * native js date objects.\n */\nexport class NativeDateService extends DateService<Date> {\n\n  protected options: NativeDateServiceOptions;\n\n  constructor(locale: string = LOCALE_DEFAULT, options?: NativeDateServiceOptions) {\n    super();\n    this.options = { ...DEFAULT_OPTIONS, ...options };\n    super.setLocale(this.options.i18n ? locale : LOCALE_DEFAULT);\n    this.setFechaLocaleData(this.options.i18n || EN);\n  }\n\n  public setLocale(locale: string) {\n    console.warn('Runtime locale is not supported');\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return !isNaN(this.parse(date, format).getTime());\n  }\n\n  public today(): Date {\n    return new Date();\n  }\n\n  public getDate(date: Date): number {\n    return date.getDate();\n  }\n\n  public getMonth(date: Date): number {\n    return date.getMonth();\n  }\n\n  public getYear(date: Date): number {\n    return date.getFullYear();\n  }\n\n  public getDayOfWeek(date: Date): number {\n    return date.getDay();\n  }\n\n  /**\n   * returns first day of the week, it can be 1 if week starts from monday\n   * and 0 if from sunday and so on.\n   * */\n  public getFirstDayOfWeek(): number {\n    return this.options.startDayOfWeek;\n  }\n\n  public getMonthName(date: Date, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const index: number = date.getMonth();\n\n    return this.getMonthNameByIndex(index, style);\n  }\n\n  public getMonthNameByIndex(index: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.getFechaMonthNames(style)[index];\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    const dayNames: string[] = this.getFechaDayNames(style);\n\n    // avoid mutation of source array\n    return this.shiftDayOfWeekNames([...dayNames], this.options.startDayOfWeek);\n  }\n\n  public format(date: Date, format: string): string {\n    return fecha.format(date, format);\n  }\n\n  /**\n   * We haven't got capability to parse date using formatting without third party libraries.\n   * */\n  public parse(date: string, format: string): Date {\n    return new Date(Date.parse(date));\n  }\n\n  public addDay(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), date.getDate() + num);\n  }\n\n  public addMonth(date: Date, num: number): Date {\n    const month: Date = this.createDate(date.getFullYear(), date.getMonth() + num, 1);\n\n    // In case of date has more days than calculated month js Date will change that month to the next one\n    // because of the date overflow.\n    month.setDate(Math.min(date.getDate(), this.getMonthEnd(month).getDate()));\n\n    return month;\n  }\n\n  public addYear(date: Date, num: number): Date {\n    return this.createDate(date.getFullYear() + num, date.getMonth(), date.getDate());\n  }\n\n  public clone(date: Date): Date {\n    return new Date(date.getTime());\n  }\n\n  public compareDates(date1: Date, date2: Date): number {\n    return date1.getTime() - date2.getTime();\n  }\n\n  public compareDatesSafe(date1: Date, date2: Date): number {\n    if (this.compareDates(date1, date2) < 0) {\n      return -1;\n    } else if (this.compareDates(date1, date2) > 0) {\n      return 1;\n    } else if (this.compareDates(date1, date2) === 0) {\n      return 0;\n    }\n  }\n\n  public createDate(year: number, month: number, date: number): Date {\n    const result = new Date(year, month, date);\n\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\n    // abbreviations for 19xx.\n    if (year >= 0 && year < 100) {\n      result.setFullYear(result.getFullYear() - 1900);\n    }\n\n    return result;\n  }\n\n  public getMonthEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth() + 1, 0);\n  }\n\n  public getMonthStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), date.getMonth(), 1);\n  }\n\n  public getNumberOfDaysInMonth(date: Date): number {\n    return this.getMonthEnd(date).getDate();\n  }\n\n  public getYearEnd(date: Date): Date {\n    return this.createDate(date.getFullYear(), 11, 31);\n  }\n\n  public getYearStart(date: Date): Date {\n    return this.createDate(date.getFullYear(), 0, 1);\n  }\n\n  public isSameDay(date1: Date, date2: Date): boolean {\n    return this.isSameMonth(date1, date2) && date1.getDate() === date2.getDate();\n  }\n\n  public isSameMonth(date1: Date, date2: Date): boolean {\n    return this.isSameYear(date1, date2) && date1.getMonth() === date2.getMonth();\n  }\n\n  public isSameYear(date1: Date, date2: Date): boolean {\n    return date1.getFullYear() === date2.getFullYear();\n  }\n\n  public getId(): string {\n    return 'native';\n  }\n\n  protected shiftDayOfWeekNames<T>(value: T[], offset: number): T[] {\n    return value.splice(offset).concat(value);\n  }\n\n  private getFechaDayNames(style: TranslationWidth): string[] {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return fecha.i18n.dayNamesShort;\n      case TranslationWidth.LONG:\n        return fecha.i18n.dayNames;\n    }\n  }\n\n  private getFechaMonthNames(style: TranslationWidth): string[] {\n    switch (style) {\n      case TranslationWidth.SHORT:\n        return fecha.i18n.monthNamesShort;\n      case TranslationWidth.LONG:\n        return fecha.i18n.monthNames;\n    }\n  }\n\n  private setFechaLocaleData(config: I18nConfig) {\n    fecha.i18n.dayNames = config.dayNames[TranslationWidth.LONG];\n    fecha.i18n.dayNamesShort = config.dayNames[TranslationWidth.SHORT];\n    fecha.i18n.monthNames = config.monthNames[TranslationWidth.LONG];\n    fecha.i18n.monthNamesShort = config.monthNames[TranslationWidth.SHORT];\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nexport const batch = <T>(target: T[], batchSize: number, offset: number = 0): T[][] => {\n  return target.reduce((res, item, index): T[] => {\n    const chunkIndex = Math.floor((index + offset) / batchSize);\n    if (!res[chunkIndex]) {\n      res[chunkIndex] = [];\n    }\n    res[chunkIndex].push(item);\n\n    return res;\n  }, []);\n};\n\n/**\n * returns array with numbers from zero to bound.\n * */\nexport const range = <T>(bound: number, producer: (number) => T = i => i) => {\n  const arr: T[] = [];\n\n  for (let i = 0; i < bound; i++) {\n    arr.push(producer(i));\n  }\n\n  return arr;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { DateService } from './date.service';\nimport {\n  batch,\n  range,\n} from './helpers';\nimport {\n  CalendarDateInfo,\n  CalendarDateOptions,\n  CalendarRange,\n} from '../type';\n\nconst DEFAULT_DATE_OPTIONS: CalendarDateOptions = {\n  bounding: false,\n  holiday: false,\n  range: false,\n};\n\nexport type DateRange<D> = CalendarDateInfo<D>[];\nexport type DateBatch<D> = DateRange<D>[];\n\nexport class CalendarDataService<D> {\n\n  constructor(protected dateService: DateService<D>) {\n  }\n\n  public createDayPickerData = (date: D, dateRange?: CalendarRange<D>): DateBatch<D> => {\n    const weeks: DateBatch<D> = this.createDates(date, DEFAULT_DATE_OPTIONS, dateRange);\n\n    return this.withBoundingMonths(weeks, date);\n  };\n\n  public createMonthPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const monthRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(yearStart, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(monthRange, rows);\n  };\n\n  public createYearPickerData = (date: D, rows: number, columns: number): DateBatch<D> => {\n    const yearStart: D = this.dateService.getYearStart(date);\n    const yearRange: DateRange<D> = range(rows * columns, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(yearStart, index);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n\n    return batch(yearRange, rows);\n  };\n\n  public createDayPickerPagerData = (startDate: D, endDate: D): DateRange<D> => {\n    const numberOfDayPickers: number = this.getNumberOfMonths(startDate, endDate) + 1;\n\n    return range(numberOfDayPickers, (index: number): CalendarDateInfo<D> => {\n      const monthDate: D = this.dateService.addMonth(startDate, index);\n      return { date: monthDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public createYearPickerPagerData = (startDate: D, endDate: D, rows: number, columns: number): DateRange<D> => {\n    const numberOfYears: number = this.getNumberOfYears(startDate, endDate) + 1;\n    const numberOfYearPickers: number = Math.max(Math.ceil(numberOfYears / (rows * columns)), 1);\n\n    return range(numberOfYearPickers, (index: number): CalendarDateInfo<D> => {\n      const yearDate: D = this.dateService.addYear(startDate, index * rows * columns);\n      return { date: yearDate, ...DEFAULT_DATE_OPTIONS };\n    });\n  };\n\n  public getNumberOfMonths = (lhs: D, rhs: D): number => {\n    const numberOfYears: number = this.getNumberOfYears(lhs, rhs);\n    const numberOfMonths: number = this.dateService.getMonth(rhs) - this.dateService.getMonth(lhs);\n\n    return numberOfMonths + numberOfYears * DateService.MONTHS_IN_YEAR;\n  };\n\n  public getNumberOfYears = (lhs: D, rhs: D): number => {\n    return this.dateService.getYear(rhs) - this.dateService.getYear(lhs);\n  };\n\n  private createDates(activeMonth: D, options: CalendarDateOptions, dateRange?: CalendarRange<D>): DateBatch<D> {\n    let days: DateRange<D> = this.createDateRangeForMonth(activeMonth, options);\n\n    if (dateRange) {\n      days = this.withRangedDates(days, dateRange);\n    }\n\n    const startOfWeekDayDiff: number = this.getStartOfWeekDayDiff(activeMonth);\n\n    return batch(days, DateService.DAYS_IN_WEEK, startOfWeekDayDiff);\n  }\n\n  private withRangedDates(days: DateRange<D>, calendarRange: CalendarRange<D>): DateRange<D> {\n    if (calendarRange.startDate && !calendarRange.endDate) {\n      return this.withRangedStartDates(days, calendarRange.startDate);\n    }\n\n    if (calendarRange.startDate && calendarRange.endDate) {\n      return this.withRangedStartEndDates(days, calendarRange.startDate, calendarRange.endDate);\n    }\n\n    return days;\n  }\n\n  private withRangedStartDates(days: DateRange<D>, startDate): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      return isSameStartDate ? { ...day, range: true } : day;\n    });\n  }\n\n  private withRangedStartEndDates(days: DateRange<D>, startDate: D, endDate: D): DateRange<D> {\n    return days.map((day: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n      const isSameStartDate: boolean = this.dateService.compareDatesSafe(day.date, startDate) === 0;\n      const isSameEndDate: boolean = this.dateService.compareDatesSafe(day.date, endDate) === 0;\n\n      if (isSameStartDate || isSameEndDate) {\n        return { ...day, range: true };\n      } else {\n        const isInRange: boolean = this.dateService.isBetween(day.date, startDate, endDate);\n        return { ...day, range: isInRange };\n      }\n    });\n  }\n\n  private withBoundingMonths(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    let withBoundingMonths: DateBatch<D> = weeks;\n\n    if (this.isShouldAddPrevBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addPrevBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    if (this.isShouldAddNextBoundingMonth(withBoundingMonths)) {\n      withBoundingMonths = this.addNextBoundingMonth(withBoundingMonths, activeMonth);\n    }\n\n    return withBoundingMonths;\n  }\n\n  private addPrevBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const firstWeek: DateRange<D> = weeks.shift();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - firstWeek.length;\n    firstWeek.unshift(...this.createPrevBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [firstWeek, ...weeks];\n  }\n\n  private addNextBoundingMonth(weeks: DateBatch<D>, activeMonth: D): DateBatch<D> {\n    const lastWeek: DateRange<D> = weeks.pop();\n    const numberOfBoundingDates: number = DateService.DAYS_IN_WEEK - lastWeek.length;\n    lastWeek.push(...this.createNextBoundingDays(activeMonth, numberOfBoundingDates));\n\n    return [...weeks, lastWeek];\n  }\n\n  private createPrevBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, -1);\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(month);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n      .slice(daysInMonth - numberOfBoundingDates)\n      .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n        return { ...date, bounding: true };\n      });\n  }\n\n  private createNextBoundingDays(activeMonth: D, numberOfBoundingDates: number): DateRange<D> {\n    const month: D = this.dateService.addMonth(activeMonth, 1);\n\n    return this.createDateRangeForMonth(month, DEFAULT_DATE_OPTIONS)\n      .slice(0, numberOfBoundingDates)\n      .map((date: CalendarDateInfo<D>): CalendarDateInfo<D> => {\n        return { ...date, bounding: true };\n      });\n  }\n\n  private getStartOfWeekDayDiff(date: D): number {\n    const startOfMonth: D = this.dateService.getMonthStart(date);\n\n    return this.getWeekStartDiff(startOfMonth);\n  }\n\n  private getWeekStartDiff(date: D): number {\n    return (\n      DateService.DAYS_IN_WEEK\n      - this.dateService.getFirstDayOfWeek()\n      + this.dateService.getDayOfWeek(date)\n    ) % DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddPrevBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[0].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private isShouldAddNextBoundingMonth(weeks: DateBatch<D>): boolean {\n    return weeks[weeks.length - 1].length < DateService.DAYS_IN_WEEK;\n  }\n\n  private createDateRangeForMonth(monthDate: D, options: CalendarDateOptions): DateRange<D> {\n    const daysInMonth: number = this.dateService.getNumberOfDaysInMonth(monthDate);\n\n    return range(daysInMonth, (i: number): CalendarDateInfo<D> => {\n      const year: number = this.dateService.getYear(monthDate);\n      const month: number = this.dateService.getMonth(monthDate);\n      const date: D = this.dateService.createDate(year, month, i + 1);\n\n      return { date, ...options };\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\nexport type DividerProps = StyledComponentProps & ViewProps;\nexport type DividerElement = React.ReactElement<DividerProps>;\n\n/**\n * Styled `Divider` component. Behaves like React Native `View`.\n * The key feature of using `Divider` instead of `View` is that\n * it automatically picks color fitting to current theme.\n *\n * @property ViewProps - Any props applied to View component.\n */\nclass DividerComponent extends React.Component<DividerProps> {\n\n  static styledComponentName: string = 'Divider';\n\n  public render(): DividerElement {\n    const { style, themedStyle, ...restProps } = this.props;\n\n    return (\n      <View\n        {...restProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Divider = styled<DividerProps>(DividerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { StyleType } from '@kitten/theme';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  CalendarHeader,\n  CalendarHeaderElement,\n} from './components/calendarHeader.component';\nimport { CalendarMonthHeader } from './components/calendarMonthHeader.component';\nimport {\n  CalendarPager,\n  CalendarPagerElement,\n} from './components/calendarPager.component';\nimport {\n  CalendarPicker,\n  CalendarPickerElement,\n} from './components/picker/calendarPicker.component';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport {\n  CalendarDateContent,\n  CalendarDateContentElement,\n} from './components/calendarDateContent.component';\nimport {\n  CalendarDateInfo,\n  CalendarViewMode,\n  CalendarViewModes,\n} from './type';\nimport { DateService } from './service/date.service';\nimport { NativeDateService } from './service/nativeDate.service';\nimport {\n  CalendarDataService,\n  DateBatch,\n} from './service/calendarData.service';\nimport { Divider } from '../divider/divider.component';\n\nexport interface BaseCalendarProps<D = Date> extends ViewProps {\n  min?: D;\n  max?: D;\n  dateService?: DateService<D>;\n  boundingMonth?: boolean;\n  startView?: CalendarViewMode;\n  title?: (date: D, viewMode: CalendarViewMode) => string;\n  todayTitle?: (date: D) => string;\n  filter?: (date: D) => boolean;\n  renderFooter?: () => React.ReactElement<any>;\n  renderDay?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  renderMonth?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  renderYear?: (info: CalendarDateInfo<D>, style: StyleType) => React.ReactElement<any>;\n  themedStyle?: StyleType;\n}\n\ninterface State<D> {\n  viewMode: CalendarViewMode;\n  visibleDate: D;\n}\n\nexport type BaseCalendarElement<D> = React.ReactElement<BaseCalendarProps<D>>;\n\nconst PICKER_ROWS: number = 4;\nconst PICKER_COLUMNS: number = 3;\nconst VIEWS_IN_PICKER: number = PICKER_ROWS * PICKER_COLUMNS;\n\nconst FORMAT_DAY: string = 'D';\nconst FORMAT_MONTH: string = 'MMM';\nconst FORMAT_YEAR: string = 'YYYY';\nconst FORMAT_HEADER_DATE: string = 'MMM YYYY';\nconst FORMAT_HEADER_MONTH: string = 'YYYY';\nconst FORMAT_HEADER_YEAR: string = 'YYYY';\n\nexport abstract class BaseCalendarComponent<P, D = Date> extends React.Component<BaseCalendarProps<D> & P, State<D>> {\n\n  static defaultProps: Partial<BaseCalendarProps> = {\n    dateService: new NativeDateService(),\n    boundingMonth: true,\n    startView: CalendarViewModes.DATE,\n  };\n\n  public state: State<D> = {\n    viewMode: this.props.startView,\n    visibleDate: this.dateService.getMonthStart(this.getSelectedDate()),\n  };\n\n  protected abstract onDaySelect(item: any): void;\n\n  protected abstract isDaySelected(date: CalendarDateInfo<D>): boolean;\n\n  protected abstract getSelectedDate(): D;\n\n  protected abstract getDayPickerData(date: CalendarDateInfo<D>): DateBatch<D>;\n\n  protected abstract shouldUpdateDayElement(props: CalendarPickerCellProps<D>,\n                                            nextProps: CalendarPickerCellProps<D>): boolean;\n\n  protected dataService: CalendarDataService<D> = new CalendarDataService(this.dateService);\n\n  protected get dateService(): DateService<D> {\n    return this.props.dateService;\n  }\n\n  private get min(): D {\n    return this.props.min || this.dateService.getYearStart(this.dateService.today());\n  }\n\n  private get max(): D {\n    return this.props.max || this.dateService.getYearEnd(this.dateService.today());\n  }\n\n  private calendarDayPagerRef: React.RefObject<CalendarPager<D>> = React.createRef();\n  private calendarYearPagerRef: React.RefObject<CalendarPager<D>> = React.createRef();\n\n  public scrollToToday = (): void => {\n    this.setState({\n      viewMode: CalendarViewModes.DATE,\n      visibleDate: this.dateService.today(),\n    });\n  };\n\n  private onSelect = (item: CalendarDateInfo<D>): void => {\n    this.onDaySelect(item);\n  };\n\n  private onMonthSelect = (date: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(this.state.visibleDate),\n      this.dateService.getMonth(date.date),\n      this.dateService.getDate(this.state.visibleDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n    });\n  };\n\n  private onYearSelect = (date: CalendarDateInfo<D>): void => {\n    const nextVisibleDate: D = this.dateService.createDate(\n      this.dateService.getYear(date.date),\n      this.dateService.getMonth(this.state.visibleDate),\n      this.dateService.getDate(this.state.visibleDate),\n    );\n\n    this.setState({\n      viewMode: this.state.viewMode.pickNext(),\n      visibleDate: nextVisibleDate,\n    });\n  };\n\n  private onDayPickerPagerSelect = (index: number): void => {\n    this.setState({\n      visibleDate: this.dateService.addMonth(this.min, index),\n    });\n  };\n\n  private onYearPickerPagerSelect = (index: number): void => {\n    const yearStart: D = this.dateService.getYearStart(this.min);\n    this.setState({\n      visibleDate: this.dateService.addYear(yearStart, index * VIEWS_IN_PICKER),\n    });\n  };\n\n  private onPickerNavigationPress = (): void => {\n    this.setState({\n      viewMode: this.state.viewMode.navigationNext(),\n    });\n  };\n\n  private onHeaderNavigationLeftPress = (): void => {\n    const pagerRef: React.RefObject<CalendarPager<D>> = this.getCurrentPagerRef();\n\n    pagerRef.current.scrollToIndex({\n      index: pagerRef.current.props.selectedIndex - 1,\n      animated: true,\n    });\n  };\n\n  private onHeaderNavigationRightPress = (): void => {\n    const pagerRef: React.RefObject<CalendarPager<D>> = this.getCurrentPagerRef();\n\n    pagerRef.current.scrollToIndex({\n      index: pagerRef.current.props.selectedIndex + 1,\n      animated: true,\n    });\n  };\n\n  private shouldUpdateDayItem = (props: CalendarPickerCellProps<D>,\n                                 nextProps: CalendarPickerCellProps<D>): boolean => {\n\n    return this.shouldUpdateDayElement(props, nextProps);\n  };\n\n  public getCalendarStyle = (source: StyleType): StyleType => {\n    return {\n      container: {\n        paddingVertical: source.paddingVertical,\n        borderColor: source.borderColor,\n        borderWidth: source.borderWidth,\n        borderRadius: source.borderRadius,\n        maxWidth: source.maxWidth,\n        maxHeight: source.maxHeight,\n      },\n      headerContainer: {\n        paddingHorizontal: source.headerPaddingHorizontal,\n        paddingVertical: source.headerPaddingVertical,\n      },\n      title: {\n        fontSize: source.titleFontSize,\n        fontWeight: source.titleFontWeight,\n        lineHeight: source.titleLineHeight,\n        color: source.titleColor,\n        fontFamily: source.titleFontFamily,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        tintColor: source.iconTintColor,\n      },\n      divider: {\n        marginVertical: source.dividerMarginVertical,\n      },\n      daysHeaderContainer: {\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n      row: {\n        minHeight: source.rowMinHeight,\n        marginHorizontal: source.rowMarginHorizontal,\n      },\n    };\n  };\n\n  private getWeekdayStyle = (source: StyleType): StyleType => {\n    return {\n      fontSize: source.weekdayTextFontSize,\n      fontWeight: source.weekdayTextFontWeight,\n      lineHeight: source.weekdayTextLineHeight,\n      color: source.weekdayTextColor,\n      fontFamily: source.weekdayTextFontFamily,\n    };\n  };\n\n  private getIsDaySelected = (date: CalendarDateInfo<D>): boolean => {\n    return this.isDaySelected(date);\n  };\n\n  private isMonthSelected = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date.date, this.getSelectedDate());\n  };\n\n  private isYearSelected = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date.date, this.getSelectedDate());\n  };\n\n  public isDayDisabled = (date: CalendarDateInfo<D>): boolean => {\n    const minDayStart: D = this.dateService.createDate(\n      this.dateService.getYear(this.min),\n      this.dateService.getMonth(this.min),\n      this.dateService.getDate(this.min),\n    );\n\n    const maxDayStart: D = this.dateService.createDate(\n      this.dateService.getYear(this.max),\n      this.dateService.getMonth(this.max),\n      this.dateService.getDate(this.max),\n    );\n\n    return !this.dateService.isBetweenIncludingSafe(date.date, minDayStart, maxDayStart) || this.isDateFitsFilter(date);\n  };\n\n  private isMonthDisabled = (date: CalendarDateInfo<D>): boolean => {\n    const minMonthStart: D = this.dateService.getMonthStart(this.min);\n    const maxMonthStart: D = this.dateService.getMonthStart(this.max);\n\n    return !this.dateService.isBetweenIncludingSafe(date.date, minMonthStart, maxMonthStart);\n  };\n\n  private isYearDisabled = (date: CalendarDateInfo<D>): boolean => {\n    const minYearStart: D = this.dateService.getYearStart(this.min);\n    const maxYearStart: D = this.dateService.getYearEnd(this.max);\n\n    return !this.dateService.isBetweenIncludingSafe(date.date, minYearStart, maxYearStart);\n  };\n\n  public isDayToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameDaySafe(date.date, this.dateService.today());\n  };\n\n  private isMonthToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameMonthSafe(date.date, this.dateService.today());\n  };\n\n  private isYearToday = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isSameYearSafe(date.date, this.dateService.today());\n  };\n\n  private isDateFitsFilter = (date: CalendarDateInfo<D>): boolean => {\n    return this.props.filter && !this.props.filter(date.date) || false;\n  };\n\n  private isDateFitsBounds = (date: CalendarDateInfo<D>): boolean => {\n    return this.dateService.isBetweenIncludingSafe(date.date, this.min, this.max);\n  };\n\n  private isDayPickerInViewPort = (index: number): boolean => {\n    const visibleDayPickerIndex: number = this.dataService.getNumberOfMonths(this.min, this.state.visibleDate);\n\n    return index === visibleDayPickerIndex || Math.abs(index - visibleDayPickerIndex) === 1;\n  };\n\n  private isYearPickerInViewPort = (index: number): boolean => {\n    const numberOfYears: number = this.dataService.getNumberOfYears(this.min, this.state.visibleDate);\n    const visibleYearPickerIndex: number = Math.floor(numberOfYears / VIEWS_IN_PICKER);\n\n    return index === visibleYearPickerIndex || Math.abs(index - visibleYearPickerIndex) === 1;\n  };\n\n  private createHeaderTitle = (date: D, viewMode: CalendarViewMode): string => {\n    switch (viewMode) {\n      case CalendarViewModes.DATE:\n        return this.dateService.format(date, FORMAT_HEADER_DATE);\n      case CalendarViewModes.MONTH: {\n        return this.dateService.format(date, FORMAT_HEADER_MONTH);\n      }\n      case CalendarViewModes.YEAR: {\n        const minDateFormat: string = this.dateService.format(this.min, FORMAT_HEADER_YEAR);\n        const maxDateFormat: string = this.dateService.format(this.max, FORMAT_HEADER_YEAR);\n\n        return `${minDateFormat} - ${maxDateFormat}`;\n      }\n    }\n  };\n\n  private getCalendarPagerIndex = (): number => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.dataService.getNumberOfMonths(this.min, this.state.visibleDate);\n      case CalendarViewModes.YEAR.id:\n        return Math.floor(this.dataService.getNumberOfYears(this.min, this.state.visibleDate) / VIEWS_IN_PICKER);\n    }\n  };\n\n  private getCurrentPagerRef = (): React.RefObject<CalendarPager<D>> => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.calendarDayPagerRef;\n      case CalendarViewModes.YEAR.id:\n        return this.calendarYearPagerRef;\n    }\n  };\n\n  private isLateralNavigationAllowed = (): boolean => {\n    return this.state.viewMode.id === CalendarViewModes.DATE.id || this.state.viewMode.id === CalendarViewModes.YEAR.id;\n  };\n\n  private renderWeekdayElement = (weekday: string, index: number): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        key={index}\n        textStyle={this.getWeekdayStyle(this.props.themedStyle)}>\n        {weekday}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayElement = (date: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={style.container}\n        textStyle={style.text}>\n        {this.dateService.format(date.date, FORMAT_DAY)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayIfNeeded = (item: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    const shouldRender: boolean = !item.bounding || this.props.boundingMonth;\n\n    if (shouldRender) {\n      const renderSelector = this.props.renderDay || this.renderDayElement;\n      return renderSelector(item, style);\n    }\n\n    return null;\n  };\n\n  private renderMonthElement = (date: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={[style.container, styles.monthCell]}\n        textStyle={style.text}>\n        {this.dateService.format(date.date, FORMAT_MONTH)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderYearElement = (date: CalendarDateInfo<D>, style: StyleType): CalendarDateContentElement => {\n    return (\n      <CalendarDateContent\n        style={[style.container, styles.yearCell]}\n        textStyle={style.text}>\n        {this.dateService.format(date.date, FORMAT_YEAR)}\n      </CalendarDateContent>\n    );\n  };\n\n  private renderDayPickerElement = (date: CalendarDateInfo<D>, index: number): CalendarPickerElement<D> => {\n    const { row } = this.getCalendarStyle(this.props.themedStyle);\n\n    return (\n      <CalendarPicker\n        key={index}\n        category='day'\n        data={this.getDayPickerData(date)}\n        rowStyle={row}\n        onSelect={this.onSelect}\n        isItemSelected={this.getIsDaySelected}\n        isItemDisabled={this.isDayDisabled}\n        isItemToday={this.isDayToday}\n        shouldItemUpdate={this.shouldUpdateDayItem}\n        renderItem={this.renderDayIfNeeded}\n      />\n    );\n  };\n\n  private renderDayPickerPagerElement = (date: D): React.ReactFragment => {\n    const { divider, daysHeaderContainer } = this.getCalendarStyle(this.props.themedStyle);\n    const visibleDayPickerIndex: number = this.dataService.getNumberOfMonths(this.min, this.state.visibleDate);\n\n    return (\n      <React.Fragment>\n        <CalendarMonthHeader\n          style={daysHeaderContainer}\n          data={this.dateService.getDayOfWeekNames()}>\n          {this.renderWeekdayElement}\n        </CalendarMonthHeader>\n        <Divider style={divider}/>\n        <CalendarPager\n          ref={this.calendarDayPagerRef}\n          selectedIndex={visibleDayPickerIndex}\n          data={this.dataService.createDayPickerPagerData(this.min, this.max)}\n          onSelect={this.onDayPickerPagerSelect}\n          shouldLoadComponent={this.isDayPickerInViewPort}>\n          {this.renderDayPickerElement}\n        </CalendarPager>\n      </React.Fragment>\n    );\n  };\n\n  private renderMonthPickerElement = (date: D): CalendarPagerElement<D> => {\n    const { row } = this.getCalendarStyle(this.props.themedStyle);\n\n    return (\n      <CalendarPicker\n        category='month'\n        data={this.dataService.createMonthPickerData(date, PICKER_ROWS, PICKER_COLUMNS)}\n        rowStyle={row}\n        onSelect={this.onMonthSelect}\n        isItemSelected={this.isMonthSelected}\n        isItemDisabled={this.isMonthDisabled}\n        isItemToday={this.isMonthToday}\n        renderItem={this.props.renderMonth || this.renderMonthElement}\n      />\n    );\n  };\n\n  private renderYearPickerElement = (date: CalendarDateInfo<D>, index: number): React.ReactElement<ViewProps> => {\n    const { row } = this.getCalendarStyle(this.props.themedStyle);\n\n    return (\n      <CalendarPicker\n        key={index}\n        category='year'\n        data={this.dataService.createYearPickerData(date.date, PICKER_ROWS, PICKER_COLUMNS)}\n        rowStyle={row}\n        onSelect={this.onYearSelect}\n        isItemSelected={this.isYearSelected}\n        isItemDisabled={this.isYearDisabled}\n        isItemToday={this.isYearToday}\n        renderItem={this.props.renderYear || this.renderYearElement}\n      />\n    );\n  };\n\n  private renderYearPickerPagerElement = (date: D): CalendarPagerElement<D> => {\n    const numberOfYears: number = this.dataService.getNumberOfYears(this.min, this.state.visibleDate);\n    const visibleYearPickerIndex: number = Math.floor(numberOfYears / VIEWS_IN_PICKER);\n\n    return (\n      <CalendarPager\n        ref={this.calendarYearPagerRef}\n        selectedIndex={visibleYearPickerIndex}\n        data={this.dataService.createYearPickerPagerData(this.min, this.max, PICKER_ROWS, PICKER_COLUMNS)}\n        onSelect={this.onYearPickerPagerSelect}\n        shouldLoadComponent={this.isYearPickerInViewPort}>\n        {this.renderYearPickerElement}\n      </CalendarPager>\n    );\n  };\n\n  private renderPickerElement = (date: D): React.ReactNode => {\n    switch (this.state.viewMode.id) {\n      case CalendarViewModes.DATE.id:\n        return this.renderDayPickerPagerElement(date);\n      case CalendarViewModes.MONTH.id:\n        return this.renderMonthPickerElement(date);\n      case CalendarViewModes.YEAR.id:\n        return this.renderYearPickerPagerElement(date);\n    }\n  };\n\n  private renderCalendarFooter = (): React.ReactElement<any> => {\n    if (this.props.renderFooter) {\n      return this.props.renderFooter();\n    }\n    return null;\n  };\n\n  private renderCalendarHeader = (): CalendarHeaderElement => {\n    const { headerContainer, title: titleStyle, icon } = this.getCalendarStyle(this.props.themedStyle);\n    const titleSelector = this.props.title || this.createHeaderTitle;\n\n    return (\n      <CalendarHeader\n        style={headerContainer}\n        title={titleSelector(this.state.visibleDate, this.state.viewMode)}\n        titleStyle={titleStyle}\n        iconStyle={icon}\n        lateralNavigationAllowed={this.isLateralNavigationAllowed()}\n        onTitlePress={this.onPickerNavigationPress}\n        onNavigationLeftPress={this.onHeaderNavigationLeftPress}\n        onNavigationRightPress={this.onHeaderNavigationRightPress}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, themedStyle, ...restProps } = this.props;\n    const { container } = this.getCalendarStyle(themedStyle);\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, container, style]}>\n        {this.renderCalendarHeader()}\n        {this.renderPickerElement(this.state.visibleDate)}\n        {this.renderCalendarFooter()}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  monthCell: {\n    aspectRatio: 0.25 * DateService.DAYS_IN_WEEK,\n  },\n  yearCell: {\n    aspectRatio: 0.25 * DateService.DAYS_IN_WEEK,\n  },\n});\n","import React from 'react';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport { CalendarDateInfo } from './type';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\n\ninterface ComponentProps<D = Date> {\n  date?: D;\n  onSelect: (date: D) => void;\n}\n\nexport type CalendarProps<D = Date> = ComponentProps<D> & BaseCalendarProps<D> & StyledComponentProps;\nexport type CalendarElement<D = Date> = React.ReactElement<CalendarProps<D>>;\n\n/**\n * Styled `Calendar` component.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => boolean} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @property ViewProps - - Any props applied to View component.\n *\n * @overview-example CalendarSimpleUsage\n *\n * @overview-example CalendarBoundingMonth\n *\n * @overview-example CalendarFilter\n *\n * @overview-example CalendarBounds\n *\n * @overview-example CalendarStartDayOfWeek\n *\n * @overview-example CalendarCustomLocale\n *\n * @example CalendarMoment\n *\n * @example CalendarCustomDay\n */\nexport class CalendarComponent<D = Date> extends BaseCalendarComponent<CalendarProps<D>, D> {\n\n  static styledComponentName: string = 'Calendar';\n\n  // BaseCalendarComponent\n\n  public onDaySelect(date: CalendarDateInfo<D>): void {\n    if (this.props.onSelect) {\n      this.props.onSelect(date.date);\n    }\n  }\n\n  public getDayPickerData(date: CalendarDateInfo<D>): DateBatch<D> {\n    return this.dataService.createDayPickerData(date.date);\n  }\n\n  public getSelectedDate(): D {\n    return this.props.date || this.dateService.today();\n  }\n\n  public isDaySelected(date: CalendarDateInfo<D>): boolean {\n    return this.dateService.isSameDaySafe(date.date, this.getSelectedDate());\n  }\n\n  public shouldUpdateDayElement(props: CalendarPickerCellProps<D>,\n                                nextProps: CalendarPickerCellProps<D>): boolean {\n\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n\n    const value: boolean = selectionChanged || disablingChanged;\n\n    if (value) {\n      return true;\n    }\n\n    return props.theme !== nextProps.theme;\n  }\n}\n\nexport const Calendar = styled<CalendarProps>(CalendarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  StyleProp,\n  TextStyle,\n  ViewStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Divider,\n  DividerElement,\n} from '../divider/divider.component';\nimport { CardHeaderElement } from './cardHeader.component';\nimport { allWithPrefix } from '../support/services';\n\ninterface HeaderStyles {\n  style: StyleProp<ViewStyle>;\n  accent: StyleProp<ViewStyle>;\n  title: StyleProp<TextStyle>;\n  description: StyleProp<TextStyle>;\n}\n\ntype HeaderProp = React.ReactElement<any> | CardHeaderElement;\ntype FooterProp = React.ReactElement<any>;\nexport type CardFooterElement = FooterProp;\n\ninterface ComponentProps {\n  appearance?: string;\n  status?: string;\n  children: React.ReactNode;\n  header?: () => HeaderProp;\n  footer?: () => FooterProp;\n}\n\nexport type CardProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type CardElement = React.ReactElement<CardProps>;\n\n/**\n * Styled `Card` component is a basic content container component.\n *\n * @extends React.Component\n *\n * @property {string} status - Determines the status of the component.\n * Can be `basic`, `primary`, `success`, `info`, `warning`, `danger`.\n * Default is `basic`.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `filled` or `outline`.\n * Default is `outline`.\n *\n * @property {React.ReactNode} children - Determines text of the component.\n *\n * @property {() => HeaderProp} header - Determines header of the component.\n *\n * @property {() => FooterProp} footer - Determines footer of the component.\n *\n * @property {TouchableOpacityProps} - Any props applied to TouchableOpacity component.\n *\n * @property {StyledComponentProps} - Any props applied to `styled` component.\n *\n * @overview-example CardSimpleUsage\n *\n * @overview-example CardStatuses\n *\n * @overview-example CardEvaHeader\n *\n * @overview-example CardCustomHeader\n *\n * @overview-example CardFooter\n *\n * @overview-example CardHeaderFooter\n */\n\nclass CardComponent extends React.Component<CardProps> {\n\n  static styledComponentName: string = 'Card';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      backgroundColor,\n      borderRadius,\n      borderWidth,\n      borderColor,\n    } = source;\n\n    const headerStyles: StyleType = allWithPrefix(source, 'header');\n    const bodyStyles: StyleType = allWithPrefix(source, 'body');\n    const footerStyles: StyleType = allWithPrefix(source, 'footer');\n    const accentStyles: StyleType = allWithPrefix(source, 'accent');\n    const titleStyles: StyleType = allWithPrefix(source, 'title');\n    const descriptionStyles: StyleType = allWithPrefix(source, 'description');\n\n    return {\n      container: {\n        backgroundColor: backgroundColor,\n        borderRadius: borderRadius,\n        borderWidth: borderWidth,\n        borderColor: borderColor,\n      },\n      header: {\n        paddingVertical: headerStyles.headerPaddingVertical,\n        paddingHorizontal: headerStyles.headerPaddingHorizontal,\n      },\n      body: {\n        paddingVertical: bodyStyles.bodyPaddingVertical,\n        paddingHorizontal: bodyStyles.bodyPaddingHorizontal,\n      },\n      footer: {\n        paddingVertical: footerStyles.footerPaddingVertical,\n        paddingHorizontal: footerStyles.footerPaddingHorizontal,\n      },\n      title: {\n        fontFamily: titleStyles.titleFontFamily,\n        fontSize: titleStyles.titleFontSize,\n        fontWeight: titleStyles.titleFontWeight,\n        lineHeight: titleStyles.titleLineHeight,\n        color: titleStyles.titleColor,\n        marginHorizontal: titleStyles.titleMarginHorizontal,\n      },\n      description: {\n        fontFamily: descriptionStyles.titleFontFamily,\n        fontSize: descriptionStyles.titleFontSize,\n        fontWeight: descriptionStyles.titleFontWeight,\n        lineHeight: descriptionStyles.titleLineHeight,\n        color: descriptionStyles.descriptionColor,\n        marginHorizontal: descriptionStyles.descriptionMarginHorizontal,\n      },\n      accent: {\n        backgroundColor: accentStyles.accentBackgroundColor,\n        height: accentStyles.accentHeight,\n      },\n    };\n  };\n\n  private renderDivider = (): DividerElement => {\n    return (\n      <Divider/>\n    );\n  };\n\n  private renderHeader = (headerStyles: HeaderStyles): HeaderProp => {\n    const header: HeaderProp = this.props.header();\n\n    return React.cloneElement(header, {\n      headerStyle: [styles.header, headerStyles.style, header.props.style],\n      accentStyle: headerStyles.accent,\n      titleStyle: headerStyles.title,\n      descriptionStyle: headerStyles.description,\n    });\n  };\n\n  private renderFooter = (style: StyleType): FooterProp => {\n    const footer: FooterProp = this.props.footer();\n\n    return React.cloneElement(footer, {\n      style: [style, styles.footer, footer.props.style],\n    });\n  };\n\n  private renderBody = (style: StyleType): React.ReactNode => {\n    return (\n      <View style={[styles.body, style]}>\n        {this.props.children}\n      </View>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { header, footer } = this.props;\n\n    const headerStyles: HeaderStyles = {\n      style: style.header,\n      accent: style.accent,\n      title: style.title,\n      description: style.description,\n    };\n\n    return [\n      header && this.renderHeader(headerStyles),\n      this.renderBody(style.body),\n      footer && this.renderFooter(style.footer),\n    ];\n  };\n\n  public render(): CardElement {\n    const { themedStyle, style, children, ...restProps } = this.props;\n    const { container, ...childrenStyles } = this.getComponentStyle(themedStyle);\n    const [header, body, footer] = this.renderComponentChildren(childrenStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        style={[container, styles.container, style]}>\n        {header}\n        {header && this.renderDivider()}\n        {body}\n        {footer && this.renderDivider()}\n        {footer}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n    justifyContent: 'space-between',\n  },\n  header: {\n    backgroundColor: 'transparent',\n  },\n  body: {\n    backgroundColor: 'transparent',\n  },\n  footer: {\n    backgroundColor: 'transparent',\n  },\n});\n\nexport const Card = styled<CardProps>(CardComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { TouchableIndexedProps } from '../support/typings';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype AccessoryElement = React.ReactElement<any>;\ntype IconProp = (style: StyleType, index: number) => IconElement;\ntype AccessoryProp = (style: StyleType, index: number) => AccessoryElement;\n\ninterface ListDerivedProps {\n  index?: number;\n}\n\ninterface TemplateBaseProps {\n  icon?: IconProp;\n  accessory?: AccessoryProp;\n}\n\ninterface TemplateTitleProps extends TemplateBaseProps {\n  title: string;\n  description?: string;\n  titleStyle?: StyleProp<TextStyle>;\n}\n\ninterface TemplateDescriptionProps extends TemplateBaseProps {\n  title?: string;\n  description: string;\n  descriptionStyle?: StyleProp<TextStyle>;\n}\n\ninterface CustomContentProps {\n  children?: React.ReactNode;\n}\n\ntype ComponentProps = (TemplateTitleProps | TemplateDescriptionProps | CustomContentProps) & ListDerivedProps;\n\nexport type ListItemProps = StyledComponentProps & TouchableIndexedProps & ComponentProps;\nexport type ListItemElement = React.ReactElement<ListItemProps>;\n\n/**\n * `ListItem` is a support component for `List`.\n * The key feature of wrapping custom list items into `ListItem` component is that it automatically\n * picks background color fitting to current theme and responds to touches with feedback.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {string} description - Determines the description of the ListItem's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {React.ReactNode} children - Determines React Children of the component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<any>} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<ImageProps>} icon - Determines the icon of the\n * component.\n *\n * @property {(index: number, event: GestureResponderEvent) => React.ReactElement<ImageProps>} onPress - Emits when\n * component is pressed.\n *\n * @property TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @overview-example ListItemSimpleUsage\n *\n * @overview-example ListItemWithIcon\n *\n * @overview-example ListItemWithAccessory\n *\n * @example ListItemWithExternalIcon\n *\n * @example ListItemInlineStyling\n */\nexport class ListItemComponent extends React.Component<ListItemProps> {\n\n  static styledComponentName: string = 'ListItem';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.index, event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.index, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.index, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent): void => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.index, event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      titleMarginHorizontal,\n      titleFontFamily,\n      titleFontSize,\n      titleLineHeight,\n      titleFontWeight,\n      titleColor,\n      descriptionFontFamily,\n      descriptionFontSize,\n      descriptionFontWeight,\n      descriptionLineHeight,\n      descriptionColor,\n      descriptionMarginHorizontal,\n      accessoryMarginHorizontal,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      contentContainer: {},\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginHorizontal: titleMarginHorizontal,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      description: {\n        color: descriptionColor,\n        fontFamily: descriptionFontFamily,\n        fontSize: descriptionFontSize,\n        fontWeight: descriptionFontWeight,\n        lineHeight: descriptionLineHeight,\n        marginHorizontal: descriptionMarginHorizontal,\n      },\n      accessory: {\n        marginHorizontal: accessoryMarginHorizontal,\n      },\n    };\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    // @ts-ignore: will be not executed if `icon` prop is provided\n    const { index, icon } = this.props;\n\n    const iconElement: IconElement = icon(style, index);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderContentElement = (style: StyleType): React.ReactElement<ViewProps> => {\n    const { contentContainer, ...contentStyles } = style;\n    const [titleElement, descriptionElement] = this.renderContentElementChildren(contentStyles);\n\n    return (\n      <View\n        key={1}\n        style={[contentContainer, styles.contentContainer]}>\n        {titleElement}\n        {descriptionElement}\n      </View>\n    );\n  };\n\n  private renderTitleElement = (style: StyleType): TextElement => {\n    // @ts-ignore: will be not executed if `title` property is provided\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={2}\n        style={[style, styles.title, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderDescriptionElement = (style: StyleType): TextElement => {\n    // @ts-ignore: will be not executed if `description` property is provided\n    const { description, descriptionStyle } = this.props;\n\n    return (\n      <Text\n        key={3}\n        style={[style, styles.description, descriptionStyle]}>\n        {description}\n      </Text>\n    );\n  };\n\n  private renderAccessoryElement = (style: StyleType): AccessoryElement => {\n    // @ts-ignore: will be not executed if `accessory` property is provided\n    const { index, accessory } = this.props;\n\n    const accessoryElement: AccessoryElement = accessory(style, index);\n\n    return React.cloneElement(accessoryElement, {\n      key: 4,\n      style: [style, styles.accessory, accessoryElement.props.style],\n    });\n  };\n\n  private renderContentElementChildren = (style: StyleType): React.ReactNodeArray => {\n    // @ts-ignore: will be not executed if any of properties below is provided\n    const { title, description } = this.props;\n\n    return [\n      isValidString(title) && this.renderTitleElement(style.title),\n      isValidString(description) && this.renderDescriptionElement(style.description),\n    ];\n  };\n\n  private renderTemplateChildren = (style: StyleType): React.ReactNodeArray => {\n    // @ts-ignore: following props could not be provided\n    const { icon, title, description, accessory } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      (title || description) && this.renderContentElement(style),\n      accessory && this.renderAccessoryElement(style.accessory),\n    ];\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNode => {\n    const { children } = this.props;\n\n    return children ? children : this.renderTemplateChildren(style);\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const componentChildren: React.ReactNode = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        {componentChildren}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  contentContainer: {\n    flex: 1,\n  },\n  icon: {},\n  title: {\n    textAlign: 'left',\n  },\n  description: {\n    textAlign: 'left',\n  },\n  accessory: {},\n});\n\nexport const ListItem = styled<ListItemProps>(ListItemComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ListItem as RNListItem,\n  ListItemElement as RNListItemElement,\n  ListItemProps as RNListItemProps,\n  // @ts-ignore\n} from './listItem.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type ListItemProps = RNListItemProps & WebEventResponderCallbacks;\nexport type ListItemElement = React.ReactElement<ListItemProps>;\n\nexport class ListItem extends React.Component<ListItemProps> implements WebEventResponderCallbacks {\n\n  private listItemRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNListItemElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNListItem\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.listItemRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  TextStyle,\n} from 'react-native';\nimport { ListItem } from '../list/listItem.component';\n\ninterface ComponentProps {\n  title: string;\n  description?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  descriptionStyle?: StyleProp<TextStyle>;\n  headerStyle?: StyleProp<ViewStyle>;\n  accentStyle?: StyleProp<ViewStyle>;\n}\n\nexport type CardHeaderProps = ViewProps & ComponentProps;\nexport type CardHeaderElement = React.ReactElement<CardHeaderProps>;\n\n/**\n * Styled `CardHeader` component can be used like `header` in the `Card` component.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {string} description - Determines the description of the ListItem's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {StyleProp<ViewStyle>} accentStyle - Determines style of the stripe element.\n *\n * @property {StyleProp<ViewStyle>} headerStyle - Determines style of the header container element.\n *\n * @property {ViewProps} - Any props applied to View component.\n */\n\nexport class CardHeader extends React.Component<CardHeaderProps> {\n\n  public render(): React.ReactFragment {\n    const { accentStyle, style, headerStyle, ...restProps } = this.props;\n\n    return (\n      <React.Fragment>\n        <View style={accentStyle}/>\n        <ListItem\n          style={[style, headerStyle]}\n          {...restProps}\n        />\n      </React.Fragment>\n    );\n  }\n}\n","import { DateService } from './date.service';\nimport {\n  CalendarDateInfo,\n  CalendarRange,\n} from '../type';\n\nexport class RangeDateService<D> {\n\n  private dateService: DateService<D>;\n\n  constructor(dateService: DateService<D>) {\n    this.dateService = dateService;\n  }\n\n  public createRange(range: CalendarRange<D>, date: CalendarDateInfo<D>): CalendarRange<D> {\n    switch (true) {\n      case (!range.startDate && !range.endDate):\n        return { startDate: date.date, endDate: null };\n      case (range.startDate && !range.endDate):\n        return this.createRangeForStart(range, date);\n      case (range.startDate !== null && range.endDate !== null):\n        return this.createRangeForStartEnd(date);\n      default:\n        return range;\n    }\n  }\n\n  private createRangeForStart(range: CalendarRange<D>, date: CalendarDateInfo<D>): CalendarRange<D> {\n    if (this.dateService.compareDatesSafe(date.date, range.startDate) === 1) {\n      return { startDate: range.startDate, endDate: date.date };\n    } else if (this.dateService.compareDatesSafe(date.date, range.startDate) === -1) {\n      return { startDate: date.date, endDate: range.startDate };\n    } else {\n      return range;\n    }\n  }\n\n  private createRangeForStartEnd(date: CalendarDateInfo<D>): CalendarRange<D> {\n    return { startDate: date.date, endDate: null};\n  }\n}\n","import React from 'react';\nimport {\n  BaseCalendarComponent,\n  BaseCalendarProps,\n} from './baseCalendar.component';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  CalendarDateInfo,\n  CalendarRange,\n} from './type';\nimport { CalendarPickerCellProps } from './components/picker/calendarPickerCell.component';\nimport { DateBatch } from './service/calendarData.service';\nimport { RangeDateService } from './service/rangeDate.service';\n\ninterface ComponentProps<D = Date> {\n  range: CalendarRange<D>;\n  onSelect: (range: CalendarRange<D>) => void;\n}\n\nexport type RangeCalendarProps<D = Date> = ComponentProps<D> & BaseCalendarProps<D> & StyledComponentProps;\nexport type RangeCalendarElement<D = Date> = React.ReactElement<RangeCalendarProps<D>>;\n\n/**\n * Styled `RangeCalendar` component.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {CalendarRange<D>} range - Range which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => ReactElement<any>} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @property ViewProps - Any props applied to View component.\n *\n * @overview-example RangeCalendarSimpleUsage\n */\nexport class RangeCalendarComponent<D = Date> extends BaseCalendarComponent<RangeCalendarProps<D>, D> {\n\n  static styledComponentName: string = 'Calendar';\n\n  private rangeDateService: RangeDateService<D> = new RangeDateService(this.dateService);\n\n  // BaseCalendarComponent\n\n  protected onDaySelect(date: CalendarDateInfo<D>): void {\n    const { range, onSelect } = this.props;\n\n    const calendarRange: CalendarRange<D> = this.rangeDateService.createRange(range, date);\n    onSelect && onSelect(calendarRange);\n  }\n\n  protected getSelectedDate(): D {\n    return this.dateService.today();\n  }\n\n  protected isDaySelected(date: CalendarDateInfo<D>): boolean {\n    return false;\n  }\n\n  protected shouldUpdateDayElement(props: CalendarPickerCellProps<D>,\n                                nextProps: CalendarPickerCellProps<D>): boolean {\n\n    const dateChanged: boolean = this.dateService.compareDatesSafe(props.date.date, nextProps.date.date) !== 0;\n\n    if (dateChanged) {\n      return true;\n    }\n\n    const selectionChanged: boolean = props.selected !== nextProps.selected;\n    const disablingChanged: boolean = props.disabled !== nextProps.disabled;\n    const rangeChanged: boolean = props.range !== nextProps.range;\n    const rangeStartPlaceChanged: boolean = props.firstRangeItem !== nextProps.firstRangeItem;\n    const rangeEndPlaceChanged: boolean = props.lastRangeItem !== nextProps.lastRangeItem;\n\n    const shouldUpdate: boolean =\n      selectionChanged\n      || disablingChanged\n      || rangeChanged\n      || rangeStartPlaceChanged\n      || rangeEndPlaceChanged;\n\n    if (shouldUpdate) {\n      return true;\n    }\n\n    return props.theme !== nextProps.theme;\n  }\n\n  protected getDayPickerData(date: CalendarDateInfo<D>): DateBatch<D> {\n    return this.dataService.createDayPickerData(date.date, this.props.range);\n  }\n}\n\nexport const RangeCalendar = styled<RangeCalendarProps>(RangeCalendarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Insets,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { CheckMark } from '../support/components';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ViewProps>;\n\ninterface ComponentProps {\n  textStyle?: StyleProp<TextStyle>;\n  text?: string;\n  checked?: boolean;\n  indeterminate?: boolean;\n  status?: string;\n  onChange?: (checked: boolean, indeterminate: boolean) => void;\n}\n\nexport type CheckBoxProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type CheckBoxElement = React.ReactElement<CheckBoxProps>;\n\n/**\n * Styled `CheckBox` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.`\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning`, `danger`, `basic` or `control`.\n * Default is `basic`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(checked: boolean) => void} onChange - Fires on checkbox value change.\n *\n * @property TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example CheckboxSimpleUsage\n *\n * @overview-example CheckboxStatus\n *\n * @overview-example CheckboxText\n *\n * @example CheckboxIndeterminate\n *\n * @example CheckboxInlineStyling\n */\nclass CheckBoxComponent extends React.Component<CheckBoxProps> {\n\n  static styledComponentName: string = 'CheckBox';\n\n  private onPress = (): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked, false);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {},\n      highlightContainer: {},\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        borderRadius: iconBorderRadius,\n        backgroundColor: iconTintColor,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (style: StyleProp<ViewStyle>): Insets => {\n    const { width } = StyleSheet.flatten(style);\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text style={[style, styles.text, textStyle]}>{text}</Text>\n    );\n  };\n\n  private renderSelectIconElement = (style: ViewStyle): IconElement => {\n    return (\n      <CheckMark style={[style, styles.icon]}/>\n    );\n  };\n\n  private renderIndeterminateIconElement = (style: ViewStyle): IconElement => {\n    return (\n      <View style={[style, styles.icon]}/>\n    );\n  };\n\n  private renderIconElement = (style: ViewStyle): IconElement => {\n    if (this.props.indeterminate) {\n      return this.renderIndeterminateIconElement(style);\n    } else {\n      return this.renderSelectIconElement(style);\n    }\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { text } = this.props;\n\n    return [\n      this.renderIconElement(style.icon),\n      isValidString(text) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, disabled, text, ...derivedProps } = this.props;\n\n    const {\n      container,\n      highlightContainer,\n      highlight,\n      selectContainer,\n      ...componentStyle\n    } = this.getComponentStyle(themedStyle);\n\n    const selectContainerStyle: StyleProp<ViewStyle> = [selectContainer, styles.selectContainer];\n    const hitSlopInsets: Insets = this.createHitSlopInsets(selectContainerStyle);\n\n    const [iconElement, textElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        disabled={disabled}\n        hitSlop={hitSlopInsets}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={[highlightContainer, styles.highlightContainer]}>\n          <View style={[highlight, styles.highlight]}/>\n          <View style={selectContainerStyle}>\n            {iconElement}\n          </View>\n        </View>\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  highlight: {\n    position: 'absolute',\n  },\n  icon: {},\n  text: {},\n});\n\nexport const CheckBox = styled<CheckBoxProps>(CheckBoxComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  CheckBox as RNCheckBox,\n  CheckBoxElement as RNCheckBoxElement,\n  CheckBoxProps as RNCheckBoxProps,\n  // @ts-ignore\n} from './checkbox.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type CheckBoxProps = RNCheckBoxProps & WebEventResponderCallbacks;\nexport type CheckBoxElement = React.ReactElement<CheckBoxProps>;\n\nexport class CheckBox extends React.Component<CheckBoxProps> implements WebEventResponderCallbacks {\n\n  private checkboxRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.checkboxRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.checkboxRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.checkboxRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.checkboxRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNCheckBoxElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNCheckBox\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.checkboxRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  FlexStyle,\n  StyleProp,\n  StyleSheet,\n} from 'react-native';\nimport { I18nLayoutService } from '../support/services';\n\nexport class Point {\n\n  readonly x: number;\n  readonly y: number;\n\n  constructor(x: number, y: number) {\n    this.x = x;\n    this.y = y;\n  }\n\n  static zero(): Point {\n    return new Point(0, 0);\n  }\n}\n\nexport class Size {\n\n  readonly width: number;\n  readonly height: number;\n\n  constructor(width: number, height: number) {\n    this.width = width;\n    this.height = height;\n  }\n\n  static zero(): Size {\n    return new Size(0, 0);\n  }\n}\n\nexport class Frame {\n\n  readonly origin: Point;\n  readonly size: Size;\n\n  constructor(x: number, y: number, width: number, height: number) {\n    this.origin = new Point(x, y);\n    this.size = new Size(width, height);\n  }\n\n  /**\n   * Creates new frame aligned to left of other\n   */\n  public leftOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x - this.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to top of other\n   */\n  public topOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y - this.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to right of other\n   */\n  public rightOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + other.size.width,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame aligned to bottom of other\n   */\n  public bottomOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + other.size.height,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered horizontally to other\n   */\n  public centerHorizontalOf(other: Frame): Frame {\n    return new Frame(\n      other.origin.x + (other.size.width - this.size.width) / 2,\n      this.origin.y,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  /**\n   * Creates new frame centered vertically to other\n   */\n  public centerVerticalOf(other: Frame): Frame {\n    return new Frame(\n      this.origin.x,\n      other.origin.y + (other.size.height - this.size.height) / 2,\n      this.size.width,\n      this.size.height,\n    );\n  }\n\n  static zero(): Frame {\n    return Frame.from(Point.zero(), Size.zero());\n  }\n\n  static from(point: Point, size: Size): Frame {\n    return new Frame(point.x, point.y, size.width, size.height);\n  }\n}\n\nexport interface OffsetValue {\n  rawValue: string;\n\n  applyToRect(rect: OffsetRect, value: number): OffsetRect;\n}\n\nexport class OffsetRect {\n  left: number;\n  top: number;\n  right: number;\n  bottom: number;\n\n  static zero(): OffsetRect {\n    return { left: 0, top: 0, right: 0, bottom: 0 };\n  }\n}\n\nexport class Offsets {\n\n  static MARGIN: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'margin';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return {\n        left: value,\n        top: value,\n        right: value,\n        bottom: value,\n      };\n    }\n  };\n\n  static MARGIN_HORIZONTAL: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginHorizontal';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, left: value, right: value };\n    }\n  };\n\n  static MARGIN_VERTICAL: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginVertical';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, top: value, bottom: value };\n    }\n  };\n\n  static MARGIN_LEFT: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginLeft';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, left: value };\n    }\n  };\n\n  static MARGIN_TOP: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginTop';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, top: value };\n    }\n  };\n\n  static MARGIN_RIGHT: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginRight';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, right: value };\n    }\n  };\n\n  static MARGIN_BOTTOM: OffsetValue = new class implements OffsetValue {\n    rawValue: string = 'marginBottom';\n\n    applyToRect(rect: OffsetRect, value: number): OffsetRect {\n      return { ...rect, bottom: value };\n    }\n  };\n\n  static find(source: StyleProp<FlexStyle>): OffsetRect {\n    const keys: string[] = [\n      Offsets.MARGIN.rawValue,\n      Offsets.MARGIN_HORIZONTAL.rawValue,\n      Offsets.MARGIN_VERTICAL.rawValue,\n      Offsets.MARGIN_LEFT.rawValue,\n      Offsets.MARGIN_TOP.rawValue,\n      Offsets.MARGIN_RIGHT.rawValue,\n      Offsets.MARGIN_BOTTOM.rawValue,\n    ];\n\n    const flatStyle: FlexStyle = StyleSheet.flatten(source) || {};\n\n    return Object.keys(flatStyle).filter((key: string) => {\n      return keys.includes(key);\n    }).reduce((acc: OffsetRect, key: string) => {\n      const value: number = flatStyle[key];\n      const offsetValue: OffsetValue | undefined = Offsets.parseString(key);\n      return offsetValue ? offsetValue.applyToRect(acc, value) : acc;\n    }, OffsetRect.zero());\n  }\n\n  private static parseString(rawValue: string, fallback?: OffsetValue): OffsetValue | undefined {\n    switch (rawValue) {\n      case Offsets.MARGIN.rawValue:\n        return Offsets.MARGIN;\n      case Offsets.MARGIN_HORIZONTAL.rawValue:\n        return Offsets.MARGIN_HORIZONTAL;\n      case Offsets.MARGIN_VERTICAL.rawValue:\n        return Offsets.MARGIN_VERTICAL;\n      case Offsets.MARGIN_LEFT.rawValue:\n        return Offsets.MARGIN_LEFT;\n      case Offsets.MARGIN_TOP.rawValue:\n        return Offsets.MARGIN_TOP;\n      case Offsets.MARGIN_RIGHT.rawValue:\n        return Offsets.MARGIN_RIGHT;\n      case Offsets.MARGIN_BOTTOM.rawValue:\n        return Offsets.MARGIN_BOTTOM;\n      default:\n        return fallback;\n    }\n  }\n}\n\nexport class PlacementOptions {\n  source: Frame = Frame.zero();\n  other: Frame = Frame.zero();\n  bounds: Frame = Frame.zero();\n  offsets: OffsetRect = OffsetRect.zero();\n}\n\nexport interface PopoverPlacement {\n  rawValue: string;\n\n  frame(options: PlacementOptions): Frame;\n\n  flex(): FlexPlacement;\n\n  parent(): PopoverPlacement;\n\n  reverse(): PopoverPlacement;\n\n  family(): PopoverPlacement[];\n\n  fits(frame: Frame, other: Frame): boolean;\n}\n\nexport interface FlexPlacement {\n  direction: 'column' | 'row' | 'column-reverse' | 'row-reverse';\n  alignment: 'flex-start' | 'flex-end' | 'center';\n}\n\nexport class PopoverPlacements {\n\n  static LEFT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.leftOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x + options.offsets.left,\n        options.bounds.size.width - size.width - (origin.x + options.offsets.right),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.LEFT,\n        PopoverPlacements.LEFT_START,\n        PopoverPlacements.LEFT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsStart(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n\n  static LEFT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue: string = 'left start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.top,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static LEFT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'left end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.bottom,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.RIGHT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static TOP: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.topOf(options.other).centerHorizontalOf(options.other);\n\n\n      const x: number = I18nLayoutService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y + options.offsets.top,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.TOP,\n        PopoverPlacements.TOP_START,\n        PopoverPlacements.TOP_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsTop(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static TOP_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.left,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static TOP_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'top end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.right,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static RIGHT: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.rightOf(options.other).centerVerticalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x - options.offsets.right,\n        options.bounds.size.width - size.width - (origin.x - options.offsets.right),\n      );\n\n      return new Frame(\n        x,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.RIGHT,\n        PopoverPlacements.RIGHT_START,\n        PopoverPlacements.RIGHT_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsEnd(frame, other) && fitsTop(frame, other) && fitsBottom(frame, other);\n    }\n  };\n\n  static RIGHT_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y - (options.other.size.height - size.height) / 2 + options.offsets.top,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static RIGHT_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'right end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x,\n        origin.y + (options.other.size.height - size.height) / 2 - options.offsets.bottom,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'row-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.RIGHT;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.LEFT_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static BOTTOM: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = options.source.bottomOf(options.other).centerHorizontalOf(options.other);\n\n      const x: number = I18nLayoutService.select(\n        origin.x,\n        options.bounds.size.width - (origin.x + size.width),\n      );\n\n      return new Frame(\n        x,\n        origin.y - options.offsets.bottom,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'center',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return this;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP;\n    }\n\n    family(): PopoverPlacement[] {\n      return [\n        PopoverPlacements.BOTTOM,\n        PopoverPlacements.BOTTOM_START,\n        PopoverPlacements.BOTTOM_END,\n      ];\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return fitsBottom(frame, other) && fitsLeft(frame, other) && fitsRight(frame, other);\n    }\n  };\n\n  static BOTTOM_START: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom start';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x - (options.other.size.width - size.width) / 2 + options.offsets.left,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-start',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_START;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static BOTTOM_END: PopoverPlacement = new class implements PopoverPlacement {\n    rawValue = 'bottom end';\n\n    frame(options: PlacementOptions): Frame {\n      const { origin, size } = this.parent().frame(options);\n\n      return new Frame(\n        origin.x + (options.other.size.width - size.width) / 2 - options.offsets.right,\n        origin.y,\n        size.width,\n        size.height,\n      );\n    }\n\n    flex(): FlexPlacement {\n      return {\n        direction: 'column-reverse',\n        alignment: 'flex-end',\n      };\n    }\n\n    parent(): PopoverPlacement {\n      return PopoverPlacements.BOTTOM;\n    }\n\n    reverse(): PopoverPlacement {\n      return PopoverPlacements.TOP_END;\n    }\n\n    family(): PopoverPlacement[] {\n      return this.parent().family();\n    }\n\n    fits(frame: Frame, other: Frame): boolean {\n      return this.parent().fits(frame, other);\n    }\n  };\n\n  static parse(value: string | PopoverPlacement, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    return PopoverPlacements.typeOf(value) ? value : PopoverPlacements.parseString(value, fallback);\n  }\n\n  private static parseString(rawValue: string, fallback?: PopoverPlacement): PopoverPlacement | undefined {\n    switch (rawValue) {\n      case PopoverPlacements.LEFT.rawValue:\n        return PopoverPlacements.LEFT;\n      case PopoverPlacements.TOP.rawValue:\n        return PopoverPlacements.TOP;\n      case PopoverPlacements.RIGHT.rawValue:\n        return PopoverPlacements.RIGHT;\n      case PopoverPlacements.BOTTOM.rawValue:\n        return PopoverPlacements.BOTTOM;\n      case PopoverPlacements.LEFT_START.rawValue:\n        return PopoverPlacements.LEFT_START;\n      case PopoverPlacements.LEFT_END.rawValue:\n        return PopoverPlacements.LEFT_END;\n      case PopoverPlacements.TOP_START.rawValue:\n        return PopoverPlacements.TOP_START;\n      case PopoverPlacements.TOP_END.rawValue:\n        return PopoverPlacements.TOP_END;\n      case PopoverPlacements.RIGHT_START.rawValue:\n        return PopoverPlacements.RIGHT_START;\n      case PopoverPlacements.RIGHT_END.rawValue:\n        return PopoverPlacements.RIGHT_END;\n      case PopoverPlacements.BOTTOM_START.rawValue:\n        return PopoverPlacements.BOTTOM_START;\n      case PopoverPlacements.BOTTOM_END.rawValue:\n        return PopoverPlacements.BOTTOM_END;\n      default:\n        return fallback;\n    }\n  }\n\n  private static typeOf(value: any): value is PopoverPlacement {\n    const { rawValue } = (<PopoverPlacement>value);\n\n    return rawValue !== undefined;\n  }\n}\n\nconst fitsStart = (frame: Frame, other: Frame): boolean => {\n  return I18nLayoutService.select(fitsLeft, fitsRight)(frame, other);\n};\n\nconst fitsEnd = (frame: Frame, other: Frame): boolean => {\n  return I18nLayoutService.select(fitsRight, fitsLeft)(frame, other);\n};\n\nconst fitsLeft = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x >= other.origin.x;\n};\n\nconst fitsRight = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.x + frame.size.width <= other.size.width;\n};\n\nconst fitsTop = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y >= other.origin.y;\n};\n\nconst fitsBottom = (frame: Frame, other: Frame): boolean => {\n  return frame.origin.y + frame.size.height <= other.size.height;\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  ViewStyle,\n  StyleSheet,\n  StyleProp,\n} from 'react-native';\nimport { StyleType } from '@kitten/theme';\nimport {\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport { Arrow } from '../support/components';\nimport { I18nLayoutService } from '../support/services';\n\ninterface ComponentProps {\n  placement?: string | PopoverPlacement;\n  indicatorOffset?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n}\n\nconst PLACEMENT_DEFAULT: PopoverPlacement = PopoverPlacements.TOP;\n\nexport type PopoverViewProps = ViewProps & ComponentProps;\nexport type PopoverViewElement = React.ReactElement<PopoverViewProps>;\n\nexport class PopoverView extends React.Component<PopoverViewProps> {\n\n  static defaultProps: Partial<PopoverViewProps> = {\n    placement: PLACEMENT_DEFAULT.rawValue,\n    indicatorOffset: 8,\n  };\n\n  private getComponentStyle = (source: StyleProp<ViewStyle>, placement: PopoverPlacement): StyleType => {\n    const derivedIndicatorStyle = StyleSheet.flatten(this.props.indicatorStyle);\n\n    const { direction, alignment } = placement.flex();\n\n    const isVertical: boolean = direction.startsWith('column');\n    const isStart: boolean = alignment.endsWith('start');\n    const isEnd: boolean = alignment.endsWith('end');\n    const isReverse: boolean = direction.endsWith('reverse');\n\n    // Rotate indicator by 90 deg if we have `row` direction (left/right placement)\n    // Rotate it again by 180 if we have `row-reverse` (bottom/right placement)\n    const indicatorPrimaryRotate: number = isVertical ? 180 : 90;\n    const indicatorSecondaryRotate: number = isReverse ? 0 : 180;\n\n    // Translate container by half of `indicatorWidth`. Exactly half (because it has a square shape)\n    // Reverse if needed\n\n    // @ts-ignore: indicatorWidth type is always number\n    let containerTranslate: number = isVertical ? 0 : derivedIndicatorStyle.width / 2;\n    containerTranslate = isReverse ? containerTranslate : -containerTranslate;\n\n    // Translate indicator by passed `indicatorOffset`\n    // Reverse if needed\n\n    let indicatorTranslate: number = isVertical ? -this.props.indicatorOffset : this.props.indicatorOffset;\n    indicatorTranslate = isReverse ? -indicatorTranslate : indicatorTranslate;\n    const i18nVerticalIndicatorTranslate = I18nLayoutService.select(indicatorTranslate, -indicatorTranslate);\n    indicatorTranslate = isVertical ? i18nVerticalIndicatorTranslate : indicatorTranslate;\n\n    const containerStyle: ViewStyle = I18nLayoutService.toI18nStyle({\n      flexDirection: direction,\n      transform: [\n        { translateX: containerTranslate },\n      ],\n    });\n\n    const contentStyle: ViewStyle = {\n      backgroundColor: 'black',\n      transform: [\n        { translateX: containerTranslate },\n      ],\n    };\n\n    const indicatorStyle: ViewStyle = {\n      transform: [\n        { rotate: `${indicatorPrimaryRotate}deg` },\n        { rotate: `${indicatorSecondaryRotate}deg` },\n\n        // Translate indicator \"to start\" if we have `-start` alignment\n        // Or translate it \"to end\" if we have `-end` alignment\n        { translateX: isStart ? -indicatorTranslate : 0 },\n        { translateX: isEnd ? indicatorTranslate : 0 },\n      ],\n      ...derivedIndicatorStyle,\n      ...styles.indicator,\n    };\n\n    return {\n      container: {\n        ...containerStyle,\n        alignItems: alignment,\n      },\n      content: contentStyle,\n      indicator: indicatorStyle,\n    };\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, indicatorStyle, placement: rawPlacement, children, ...derivedProps } = this.props;\n    const placement: PopoverPlacement = PopoverPlacements.parse(rawPlacement, PLACEMENT_DEFAULT);\n\n    const { container, indicator, content } = this.getComponentStyle(style, placement);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[container, styles.container]}>\n        <Arrow style={[indicator, styles.indicator, indicatorStyle]}/>\n        <View\n          style={[content, styles.content, style]}>\n          {children}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    alignSelf: 'flex-start',\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  indicator: {},\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  findNodeHandle,\n  UIManager,\n  View,\n  ViewProps,\n  Dimensions,\n  ScaledSize,\n} from 'react-native';\nimport { Frame } from './type';\n\nexport type MeasuringElement = React.ReactElement<MeasuringElementProps>;\nexport type MeasuringElementProps = { tag: React.ReactText } & any;\nexport type MeasuringNode = React.ReactElement<MeasureNodeProps>;\nexport type MeasuringNodeProps = MeasureNodeProps;\n\nexport type MeasuredElementProps = MeasuringElementProps & { frame: Frame };\nexport type MeasuredElement = React.ReactElement<MeasuredElementProps>;\n\nexport interface MeasureResult {\n  [tag: string]: Frame;\n}\n\nexport interface MeasureElementProps {\n  onResult: (result: MeasuredElement) => void;\n  children: MeasuringElement;\n}\n\nexport interface MeasureNodeProps {\n  onResult: (result: MeasureResult) => void;\n  children: MeasuringElement | MeasuringElement[];\n}\n\n/**\n * Measures child element size and it's screen position asynchronously.\n * Returns measure result in `onResult` callback.\n *\n * Usage:\n *\n * const onMeasure = (element: ElementToMeasure): void => {\n *   const { x, y, width, height } = element.props.frame;\n *   ...\n * };\n *\n * <MeasureElement onResult={this.onMeasure}>\n *   <ElementToMeasure tag='@measure/measure-me!'/>\n * </MeasureElement>\n */\nexport const MeasureElement = (props: MeasureElementProps): MeasuringElement => {\n\n  const ref: React.RefObject<any> = React.createRef();\n\n  const { children, onResult } = props;\n\n  const bindToWindow = (frame: Frame, window: ScaledSize): Frame => {\n    if (frame.origin.x < window.width) {\n      return frame;\n    }\n\n    const boundFrame: Frame = new Frame(\n      frame.origin.x - window.width,\n      frame.origin.y,\n      frame.size.width,\n      frame.size.height,\n    );\n\n    return bindToWindow(boundFrame, window);\n  };\n\n  const measureSelf = () => {\n    const node: number = findNodeHandle(ref.current);\n\n    UIManager.measureInWindow(node, (x: number, y: number, w: number, h: number) => {\n      const window: ScaledSize = Dimensions.get('window');\n      const frame: Frame = bindToWindow(new Frame(x, y, w, h), window);\n\n      const measuredElement: MeasuredElement = React.cloneElement(children, { frame });\n\n      onResult(measuredElement);\n    });\n  };\n\n  return React.cloneElement(children, {\n    ref,\n    onLayout: measureSelf,\n  });\n};\n\n/**\n * Measures passed child elements size and it's screen position asynchronously.\n * Returns measure result in `onResult` callback.\n *\n * Does the same as `MeasureElement` but calls `onResult` after all children are measured.\n *\n * Usage:\n *\n * const onMeasure = (result: MeasureResult): void => {\n *   const { [0]: firstElementFrame, [1]: secondElementFrame } = result;\n *   const { x, y, width, height } = firstElementFrame;\n *   ...\n * };\n *\n * <MeasureNode onResult={this.onMeasure}>\n *   <ElementToMeasure tag={0}/>\n *   <ElementToMeasure tag={1}/>\n * </MeasureNode>\n */\nexport const MeasureNode = (props: MeasuringNodeProps): MeasuringNode => {\n\n  const result: MeasureResult = {};\n\n  const { children, onResult } = props;\n\n  const onChildMeasure = (element: MeasuredElement) => {\n    const { tag, frame } = element.props;\n\n    result[tag] = frame;\n\n    if (Object.keys(result).length === React.Children.count(children)) {\n      onResult(result);\n    }\n  };\n\n  const renderMeasuringElement = (element: MeasuringElement, index: number): MeasuringElement => {\n    return (\n      <MeasureElement\n        key={index}\n        onResult={onChildMeasure}>\n        {element}\n      </MeasureElement>\n    );\n  };\n\n  const renderChildren = (): MeasuringElement[] => {\n    return React.Children.map(children, renderMeasuringElement);\n  };\n\n  return (\n    <React.Fragment>\n      {renderChildren()}\n    </React.Fragment>\n  );\n};\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  Frame,\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\n\nconst PLACEMENT_FAMILIES: string[] = [\n  PopoverPlacements.BOTTOM.rawValue,\n  PopoverPlacements.TOP.rawValue,\n  PopoverPlacements.LEFT.rawValue,\n  PopoverPlacements.RIGHT.rawValue,\n];\n\nexport class PopoverPlacementService {\n\n  public find(preferredValue: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const placement: PopoverPlacement = this.findRecursive(preferredValue, PLACEMENT_FAMILIES, options);\n\n    return placement || preferredValue;\n  }\n\n  private findRecursive(placement: PopoverPlacement, families: string[], options: PlacementOptions): PopoverPlacement {\n    const oneOfCurrentFamily: PopoverPlacement = this.findFromFamily(placement, options);\n\n    if (oneOfCurrentFamily) {\n      return oneOfCurrentFamily;\n    }\n\n    const oneOfReversedFamily: PopoverPlacement = this.findFromFamily(placement.reverse(), options);\n\n    if (oneOfReversedFamily) {\n      return oneOfReversedFamily;\n    }\n\n    delete families[families.indexOf(placement.parent().rawValue)];\n    delete families[families.indexOf(placement.reverse().parent().rawValue)];\n\n    const firstTruthy: string = families.filter(Boolean)[0];\n\n    if (firstTruthy) {\n      const nextPlacement: PopoverPlacement = PopoverPlacements.parse(firstTruthy);\n\n      return this.findRecursive(nextPlacement, families, options);\n    }\n\n    return null;\n  }\n\n  private findFromFamily(placement: PopoverPlacement, options: PlacementOptions): PopoverPlacement {\n    const preferredFrame: Frame = placement.frame(options);\n\n    if (placement.fits(preferredFrame, options.bounds)) {\n      return placement;\n    }\n\n    return placement.family().find((familyValue: PopoverPlacement): boolean => {\n      const familyFrame = familyValue.frame(options);\n\n      return familyValue.fits(familyFrame, options.bounds);\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Dimensions,\n  ScaledSize,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ModalService,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  PopoverView,\n  PopoverViewProps,\n} from './popoverView.component';\nimport {\n  MeasuredElement,\n  MeasureNode,\n  MeasureResult,\n  MeasuringElement,\n  MeasuringElementProps,\n  MeasuringNode,\n} from './measure.component';\nimport {\n  Frame,\n  Offsets,\n  PlacementOptions,\n  PopoverPlacement,\n  PopoverPlacements,\n} from './type';\nimport { PopoverPlacementService } from './placement.service';\nimport { ModalPresentingBased } from '../support/typings';\n\ntype ContentElement = React.ReactElement<any>;\ntype ChildElement = React.ReactElement<any>;\n\ninterface ComponentProps extends PopoverViewProps, ModalPresentingBased {\n  content: ContentElement;\n  children: ChildElement;\n  visible?: boolean;\n}\n\nexport type PopoverProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type PopoverElement = React.ReactElement<PopoverProps>;\n\nconst WINDOW: ScaledSize = Dimensions.get('window');\nconst WINDOW_BOUNDS: Frame = new Frame(0, 0, WINDOW.width, WINDOW.height);\n\nconst TAG_CHILD: number = 0;\nconst TAG_CONTENT: number = 1;\nconst PLACEMENT_DEFAULT: PopoverPlacement = PopoverPlacements.BOTTOM;\n\n/**\n * Displays content in a `Modal` when users focus on or tap an element. Also supports automatic placement.\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<any>} content - Determines the content of the popover.\n *\n * @property {React.ReactElement<any>} children - Determines the element \"above\" which popover will be shown.\n *\n * @property {boolean} visible - Determines whether popover is visible or not.\n *\n * @property {string | PopoverPlacement} placement - Determines the placement of the popover.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Default is `bottom`.\n *\n * @property {number} indicatorOffset - Determines the offset of indicator (arrow).\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of indicator (arrow).\n *\n * @property ViewProps - Any props applied to View component.\n *\n * @property ModalPresentingBased - Any props applied to Modal component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example PopoverSimpleUsage\n *\n * @overview-example PopoverPlacement\n */\nexport class PopoverComponent extends React.Component<PopoverProps> {\n\n  static styledComponentName: string = 'Popover';\n\n  static defaultProps: Partial<PopoverProps> = {\n    placement: PLACEMENT_DEFAULT.rawValue,\n    visible: false,\n    allowBackdrop: true,\n    onBackdropPress: () => null,\n  };\n\n  private popoverId: string;\n  private placementService: PopoverPlacementService = new PopoverPlacementService();\n  private popoverPlacement: PopoverPlacement;\n\n  public componentDidUpdate(prevProps: PopoverProps): void {\n    this.handleVisibility(prevProps);\n  }\n\n  private handleVisibility = (prevProps: PopoverProps): void => {\n    if (prevProps.visible !== this.props.visible) {\n      if (this.props.visible) {\n        // Toggles re-measuring. This is needed for dynamic containers like ScrollView\n        this.setState({ layout: undefined });\n      } else {\n        this.popoverId = ModalService.hide(this.popoverId);\n      }\n    } else if (prevProps.visible && this.props.visible) {\n      this.updatePopoverElement();\n    }\n  };\n\n  private updatePopoverElement = (): void => {\n    const element: ContentElement = this.renderPopoverElement(this.props.content, this.popoverPlacement);\n\n    const popoverElement: ContentElement = React.cloneElement(element, {\n      style: [element.props.style, styles.popoverVisible],\n    });\n    this.popoverId && ModalService.update(this.popoverId, popoverElement);\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorWidth,\n      indicatorHeight,\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        width: indicatorWidth,\n        height: indicatorHeight,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private onMeasure = (layout: MeasureResult): void => {\n    if (this.props.visible) {\n      const placementOptions: PlacementOptions = this.createPlacementOptions(layout);\n      const popoverPlacement = this.placementService.find(this.popoverPlacement, placementOptions);\n\n      this.popoverId = this.showPopoverModal(popoverPlacement, placementOptions);\n    }\n  };\n\n  private createPlacement = (value: string | PopoverPlacement): PopoverPlacement => {\n    return PopoverPlacements.parse(value, PLACEMENT_DEFAULT);\n  };\n\n  private createPlacementOptions = (layout: MeasureResult): PlacementOptions => {\n    const { children } = this.props;\n\n    return {\n      source: layout[TAG_CONTENT],\n      other: layout[TAG_CHILD],\n      bounds: WINDOW_BOUNDS,\n      offsets: Offsets.find(children.props.style),\n    };\n  };\n\n  private showPopoverModal = (placement: PopoverPlacement, options: PlacementOptions): string => {\n    const popoverFrame: Frame = placement.frame(options);\n    const popoverElement: MeasuredElement = this.renderPopoverElement(this.props.content, placement);\n\n    const positionStyle: ViewStyle = {\n      left: popoverFrame.origin.x,\n      top: popoverFrame.origin.y,\n    };\n\n    const positionedPopoverElement: React.ReactElement<ModalPresentingBased> = React.cloneElement(popoverElement, {\n      style: [styles.popoverVisible, positionStyle],\n    });\n\n    return ModalService.show(positionedPopoverElement, {\n      allowBackdrop: this.props.allowBackdrop,\n      onBackdropPress: this.props.onBackdropPress,\n    });\n  };\n\n  private renderPopoverElement = (children: ContentElement, placement: PopoverPlacement): ContentElement => {\n    const { style: derivedStyle, themedStyle, indicatorStyle, ...derivedProps } = this.props;\n    const { container, indicator } = this.getComponentStyle(themedStyle);\n\n    const measuringProps: MeasuringElementProps = { tag: TAG_CONTENT };\n\n    return (\n      <View\n        {...measuringProps}\n        key={TAG_CONTENT}\n        style={[styles.popover, styles.popoverInvisible]}>\n        <PopoverView\n          {...derivedProps}\n          style={[container, derivedStyle]}\n          indicatorStyle={[indicator, styles.indicator, indicatorStyle]}\n          placement={placement.reverse().rawValue}>\n          {children}\n        </PopoverView>\n      </View>\n    );\n  };\n\n  private renderChildElement = (source: ChildElement): MeasuringElement => {\n    const measuringProps: MeasuringElementProps = { tag: TAG_CHILD };\n\n    return (\n      <View\n        {...measuringProps}\n        key={TAG_CHILD}\n        style={styles.child}>\n        {source}\n      </View>\n    );\n  };\n\n  private renderMeasuringElement = (...children: MeasuringElement[]): MeasuringNode => {\n    return (\n      <MeasureNode\n        onResult={this.onMeasure}>\n        {children}\n      </MeasureNode>\n    );\n  };\n\n  public render(): React.ReactNode {\n    if (this.props.visible) {\n      this.popoverPlacement = this.createPlacement(this.props.placement);\n      const popoverElement: ContentElement = this.renderPopoverElement(this.props.content, this.popoverPlacement);\n      const childElement: ChildElement = this.renderChildElement(this.props.children);\n\n      return this.renderMeasuringElement(childElement, popoverElement);\n    }\n\n    return this.props.children;\n  }\n}\n\nconst styles = StyleSheet.create({\n  popover: {\n    position: 'absolute',\n  },\n  popoverInvisible: {\n    opacity: 0,\n  },\n  popoverVisible: {\n    opacity: 1,\n  },\n  indicator: {},\n  child: {},\n});\n\nexport const Popover = styled<PopoverProps>(PopoverComponent);\n","import React from 'react';\nimport {\n  Dimensions,\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport {\n  Popover,\n  PopoverElement,\n} from '../popover/popover.component';\nimport { BaseCalendarProps } from '../calendar/baseCalendar.component';\nimport { NativeDateService } from '../calendar/service/nativeDate.service';\nimport { CalendarElement } from '../calendar/calendar.component';\nimport { RangeCalendarElement } from '../calendar/rangeCalendar.component';\n\nconst FULL_DATE_FORMAT_STRING: string = 'DD/MM/YYYY';\n\ninterface State {\n  visible: boolean;\n}\n\nexport interface ComponentProps {\n  icon?: (style: ImageStyle) => React.ReactElement<ImageProps>;\n  placeholder?: string;\n}\n\nexport type BaseDatepickerProps<D = Date> =\n  & StyledComponentProps\n  & TouchableOpacityProps\n  & BaseCalendarProps<D>\n  & ComponentProps;\n\nexport abstract class BaseDatepickerComponent<P, D = Date> extends React.Component<BaseDatepickerProps<D> & P, State> {\n\n  static defaultProps: Partial<BaseDatepickerProps> = {\n    dateService: new NativeDateService(),\n    placeholder: 'dd/mm/yyyy',\n  };\n\n  public state: State = {\n    visible: false,\n  };\n\n  protected abstract getComponentTitle(): string;\n\n  protected abstract renderCalendar(): CalendarElement<D> | RangeCalendarElement<D>;\n\n  protected formatDateToString(date: D): string {\n    return this.props.dateService.format(date, FULL_DATE_FORMAT_STRING);\n  }\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    const {\n      popoverMarginHorizontal,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textFontFamily,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      ...containerStyles\n    } = style;\n\n    return {\n      container: containerStyles,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        tintColor: iconTintColor,\n      },\n      text: {\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n        fontFamily: textFontFamily,\n      },\n      popover: {\n        indent: popoverMarginHorizontal,\n      },\n    };\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private toggleVisible = (): void => {\n    const visible: boolean = !this.state.visible;\n\n    this.setState({ visible }, this.dispatchActive);\n  };\n\n  private dispatchActive = (): void => {\n    if (this.state.visible) {\n      this.props.dispatch([Interaction.ACTIVE]);\n    } else {\n      this.props.dispatch([]);\n    }\n  };\n\n  private renderIconElement = (style: StyleType): React.ReactElement<ImageProps> => {\n    return this.props.icon(style);\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    return (\n      <Text style={style}>\n        {this.getComponentTitle()}\n      </Text>\n    );\n  };\n\n  private renderControlChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon } = this.props;\n\n    return [\n      this.renderTextElement(style.text),\n      icon && this.renderIconElement(style.icon),\n    ];\n  };\n\n  private renderControl = (): React.ReactElement<TouchableOpacityProps> => {\n    const { themedStyle, disabled, style } = this.props;\n    const componentStyle: StyleType = this.getComponentStyles(themedStyle);\n\n    const [textElement, iconElement] = this.renderControlChildren(componentStyle);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        disabled={disabled}\n        style={[componentStyle.container, styles.container, style]}\n        onPress={this.toggleVisible}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {textElement}\n        {iconElement}\n      </TouchableOpacity>\n    );\n  };\n\n  public render(): PopoverElement {\n    const { popover } = this.getComponentStyles(this.props.themedStyle);\n\n    const popoverStyle: StyleType = {\n      width: Dimensions.get('window').width - popover.indent,\n      maxWidth: Dimensions.get('window').width - popover.indent,\n    };\n\n    return (\n      <Popover\n        style={popoverStyle}\n        visible={this.state.visible}\n        content={this.renderCalendar()}\n        onBackdropPress={this.toggleVisible}>\n        {this.renderControl()}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n});\n\n","import React from 'react';\nimport { styled } from '@kitten/theme';\nimport {\n  BaseDatepickerComponent,\n  BaseDatepickerProps,\n} from './baseDatepicker.component';\nimport {\n  CalendarElement,\n  Calendar,\n  CalendarProps,\n} from '../calendar/calendar.component';\n\nexport type DatepickerProps<D = Date> = BaseDatepickerProps<D> & CalendarProps<D>;\nexport type DatepickerElement<D = Date> = React.ReactElement<DatepickerProps<D>>;\n\n/**\n * Styled `Datepicker` component.\n * Renders `Calendar` component in the `Popover`.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {(style: ImageStyle) => React.ReactElement<ImageProps>} icon - Determines the icon of the component.\n *\n * @property {string} placeholder - Determines placeholder of the component.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => ReactElement<any>} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example DatepickerSimpleUsage\n *\n * @overview-example DatepickerWithIcon\n *\n * @overview-example DatepickerBoundingMonth\n *\n * @overview-example DatepickerFilter\n *\n * @example DatepickerCustomDay\n *\n * @example DatepickerCustomLocale\n *\n * @example DatepickerMoment\n */\n\nexport class DatepickerComponent<D = Date> extends BaseDatepickerComponent<DatepickerProps<D>, D> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  // BaseDatepickerComponent\n\n  protected getComponentTitle(): string {\n    if (this.props.date) {\n      return this.formatDateToString(this.props.date);\n    } else {\n      return this.props.placeholder;\n    }\n  }\n\n  protected renderCalendar(): CalendarElement<D> {\n    return (\n      // @ts-ignore\n      <Calendar {...this.props}/>\n    );\n  }\n}\n\nexport const Datepicker = styled<DatepickerProps>(DatepickerComponent);\n","import React from 'react';\nimport { styled } from '@kitten/theme';\nimport {\n  BaseDatepickerComponent,\n  BaseDatepickerProps,\n} from './baseDatepicker.component';\nimport {\n  RangeCalendar,\n  RangeCalendarProps,\n  RangeCalendarElement,\n} from '../calendar/rangeCalendar.component';\n\nexport type RangeDatepickerProps<D = Date> = BaseDatepickerProps<D> & RangeCalendarProps<D>;\nexport type RangeDatepickerElement<D = Date> = React.ReactElement<RangeDatepickerProps<D>>;\n\n/**\n * Styled `RangeDatepicker` component.\n * Renders `RangeCalendar` component in the `Popover`.\n * Supports locales and different date objects like Moment.js or date-fns.\n * Composes date picker components in a horizontal pageable list.\n *\n * @extends React.Component\n *\n * @property {(style: ImageStyle) => React.ReactElement<ImageProps>} icon - Determines the icon of the component.\n *\n * @property {string} placeholder - Determines placeholder of the component.\n *\n * @property {D} min - Minimal date that is able to be selected.\n *\n * @property {D} max - Maximum date that is able to be selected.\n *\n * @property {D} date - Date which is currently selected.\n *\n * @property {DateService<D>} dateService - Date service that is able to work with a date objects.\n * Defaults to Native Date service that works with JS Date.\n * Allows using different types of date like Moment.js or date-fns.\n *\n * @property {boolean} boundingMonth - Defines if we should render previous and next months in the current month view.\n *\n * @property {CalendarViewMode} startView - Defines starting view for calendar. Defaults to Date view.\n *\n * @property {(date: D) => string} title - Defines the title for visible date.\n *\n * @property {(date: D) => string} todayTitle - Defines the title for today's date.\n *\n * @property {(date: D) => ReactElement<any>} filter - Predicate that decides which cells will be disabled.\n *\n * @property {(date: D) => void} onSelect - Selection emitter. Fires when another day cell is pressed.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderDay - Should return the content of day cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderMonth - Should return the content of month cell.\n *\n * @property {(date: D, style: StyleType) => ReactElement<any>} renderYear - Should return the content of year cell.\n *\n * @property TouchableOpacityProps\n *\n * @property StyledComponentProps\n *\n * @overview-example RangeDatepickerSimpleUsage\n */\n\nexport class RangeDatepickerComponent<D = Date> extends BaseDatepickerComponent<RangeDatepickerProps<D>, D> {\n\n  static styledComponentName: string = 'Datepicker';\n\n  // BaseDatepickerComponent\n\n  protected getComponentTitle(): string {\n    const { startDate, endDate } = this.props.range;\n\n    if (startDate || endDate) {\n      const start: string = startDate ? this.formatDateToString(startDate) : '';\n      const end: string = endDate ? this.formatDateToString(endDate) : '';\n\n      return `${start} - ${end}`;\n    } else {\n      return this.props.placeholder;\n    }\n  }\n\n  protected renderCalendar(): RangeCalendarElement<D> {\n    return (\n      // @ts-ignore\n      <RangeCalendar {...this.props}/>\n    );\n  }\n}\n\nexport const RangeDatepicker = styled<RangeDatepickerProps>(RangeDatepickerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  FlatList,\n  FlatListProps,\n  ListRenderItemInfo,\n  StyleSheet,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { ListItemProps } from './listItem.component';\n\n// this is basically needed to avoid generics in required props\ntype ItemType = any;\ntype ListItemElement = React.ReactElement<any>;\ntype RenderItemProp = (info: ListRenderItemInfo<ItemType>, style: StyleType) => ListItemElement;\n\ninterface ComponentProps {\n  renderItem: RenderItemProp;\n}\n\nexport type ListProps = StyledComponentProps & FlatListProps<ItemType> & ComponentProps;\nexport type ListElement = React.ReactElement<ListProps>;\n\nexport interface BaseScrollParams {\n  animated?: boolean;\n}\n\nexport interface ViewScrollParams {\n  viewOffset?: number;\n  viewPosition?: number;\n}\n\nexport interface ScrollToIndexParams extends BaseScrollParams, ViewScrollParams {\n  index: number;\n}\n\nexport interface ScrollToOffsetParams extends BaseScrollParams {\n  offset: number;\n}\n\n/**\n * `List` component is a performant interface for rendering simple, flat lists. Extends `FlatList`. Renders list of\n * `ListItem` components or custom content.\n *\n * @extends React.Component\n *\n * @property {(info: ListRenderItemInfo<ItemT>, style: StyleType) => React.ReactElement<any>} renderItem - Takes an\n * item from data and renders it into the list.\n *\n * @property FlatListProps - Any props applied to FlatList component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example ListSimpleUsage\n *\n * @overview-example ListCompositeItem\n *\n * @example ListInlineStyling\n * ```\n */\nexport class ListComponent extends React.Component<ListProps> {\n\n  static styledComponentName: string = 'List';\n\n  private listRef: React.RefObject<FlatList<ItemType>> = React.createRef();\n\n  public scrollToEnd = (params?: BaseScrollParams): void => {\n    this.listRef.current.scrollToEnd(params);\n  };\n\n  public scrollToIndex = (params: ScrollToIndexParams): void => {\n    this.listRef.current.scrollToIndex(params);\n  };\n\n  public scrollToOffset(params: ScrollToOffsetParams): void {\n    this.listRef.current.scrollToOffset(params);\n  }\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    return {\n      container: source,\n      item: {},\n    };\n  };\n\n  private getItemStyle = (source: StyleType, index: number): ViewStyle => {\n    const { item } = source;\n\n    return item;\n  };\n\n  private keyExtractor = (item: ItemType, index: number): string => {\n    return index.toString();\n  };\n\n  private renderItem = (info: ListRenderItemInfo<ItemType>): ListItemElement => {\n    const itemStyle: StyleType = this.getItemStyle(this.props.themedStyle, info.index);\n    const itemElement: React.ReactElement<ListItemProps> = this.props.renderItem(info, itemStyle);\n\n    return React.cloneElement(itemElement, {\n      style: [itemStyle, styles.item, itemElement.props.style],\n      index: info.index,\n    });\n  };\n\n  public render(): React.ReactElement<FlatListProps<ItemType>> {\n    const { style, themedStyle, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    return (\n      <FlatList\n        keyExtractor={this.keyExtractor}\n        {...derivedProps}\n        ref={this.listRef}\n        style={[componentStyle.container, styles.container, style]}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  item: {},\n});\n\nexport const List = styled<ListProps>(ListComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  View,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { TouchableIndexedProps } from '../support/typings/type';\nimport { allWithPrefix } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\n\nexport interface MenuItemType {\n  title: string;\n  disabled?: boolean;\n  subItems?: MenuItemType[];\n  titleStyle?: StyleProp<TextStyle>;\n  menuIndex?: number;\n  icon?: (style: StyleType) => IconElement;\n  accessory?: (style: StyleType) => IconElement;\n}\n\ninterface ComponentProps extends MenuItemType {\n  selected?: boolean;\n}\n\nexport type MenuItemProps = StyledComponentProps & ComponentProps & TouchableIndexedProps;\nexport type MenuItemElement = React.ReactElement<MenuItemProps>;\n\n/**\n * `MenuItem` is a support component for `Menu`.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the ListItem.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines the icon of the component.\n *\n * @property {MenuItemType[]} subItems - Determines the sub-items of the MenuItem.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onPress - Emits when component is pressed.\n *\n * @property TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n * */\n\nclass MenuItemComponent extends React.Component<MenuItemProps> {\n\n  static styledComponentName: string = 'MenuItem';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(this.props.menuIndex, event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.menuIndex, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.menuIndex, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent): void => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.menuIndex, event);\n    }\n  };\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    const { paddingHorizontal, paddingVertical, backgroundColor } = style;\n\n    const titleStyles: StyleType = allWithPrefix(style, 'title');\n    const indicatorStyles: StyleType = allWithPrefix(style, 'indicator');\n    const iconStyles: StyleType = allWithPrefix(style, 'icon');\n\n    return {\n      container: {\n        paddingHorizontal: paddingHorizontal,\n        paddingVertical: paddingVertical,\n        backgroundColor: backgroundColor,\n      },\n      title: {\n        marginHorizontal: titleStyles.titleMarginHorizontal,\n        fontFamily: titleStyles.titleFontFamily,\n        fontSize: titleStyles.titleFontSize,\n        fontWeight: titleStyles.titleFontWeight,\n        lineHeight: titleStyles.titleLineHeight,\n        color: titleStyles.titleColor,\n      },\n      indicator: {\n        width: indicatorStyles.indicatorWidth,\n        backgroundColor: indicatorStyles.indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconStyles.iconWidth,\n        height: iconStyles.iconHeight,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n    };\n  };\n\n  private renderIcon = (style: StyleType): IconElement => {\n    return this.props.icon(style);\n  };\n\n  private renderTitle = (style: StyleType): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text style={[style, titleStyle]}>{title}</Text>\n    );\n  };\n\n  private renderAccessory = (style: StyleType): IconElement => {\n    return this.props.accessory(style);\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { title, icon, accessory } = this.props;\n\n    return [\n      icon && this.renderIcon(style.icon),\n      title && this.renderTitle(style.title),\n      accessory && this.renderAccessory(style.icon),\n    ];\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, ...restProps } = this.props;\n    const { container, indicator, ...restStyles } = this.getComponentStyles(themedStyle);\n    const [iconElement, textElement, accessoryElement] = this.renderComponentChildren(restStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        style={[styles.container, container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        <View style={[styles.indicator, indicator]}/>\n        <View style={styles.subContainer}>\n          {iconElement}\n          {textElement}\n        </View>\n        {accessoryElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  subContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  indicator: {\n    ...StyleSheet.absoluteFillObject,\n    zIndex: 2,\n  },\n});\n\nexport const MenuItem = styled<MenuItemProps>(MenuItemComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  MenuItem as RNMenuItem,\n  MenuItemElement as RNMenuItemElement,\n  MenuItemProps as RNMenuItemProps,\n  // @ts-ignore\n} from './menuItem.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type MenuItemProps = RNMenuItemProps & WebEventResponderCallbacks;\nexport type MenuItemElement = React.ReactElement<MenuItemProps>;\n\nexport class MenuItem extends React.Component<MenuItemProps> implements WebEventResponderCallbacks {\n\n  private menuItemRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.menuItemRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.menuItemRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.menuItemRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.menuItemRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNMenuItemElement {\n    const { textStyle, ...restProps } = this.props;\n\n    return (\n      <RNMenuItem\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.menuItemRef}\n        style={[textStyle, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  ImageProps,\n  StyleSheet,\n  TouchableOpacityProps,\n  View,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  MenuItem,\n  MenuItemElement,\n  MenuItemType,\n} from './menuItem.component';\nimport {\n  MeasureNode,\n  MeasureNodeProps,\n  MeasureResult,\n  MeasuringElementProps,\n} from '../popover/measure.component';\nimport { Chevron } from '../support/components';\nimport { DividerElement } from '../divider/divider.component';\n\ninterface ComponentProps {\n  item: MenuItemType;\n  selectedIndex: number;\n  divider?: DividerElement;\n  onSelect?: (index: number, event?: GestureResponderEvent) => void;\n}\n\ninterface ComponentState {\n  subItemsVisible: boolean;\n  subItemsHeight: number;\n}\n\nexport type SubMenuProps = ComponentProps & StyledComponentProps & TouchableOpacityProps;\nexport type SubMenuElement = React.ReactElement<SubMenuProps>;\ntype OnPressHandler = (index: number, event?: GestureResponderEvent) => void;\ntype IconElement = React.ReactElement<ImageProps>;\n\nconst MAIN_ITEM_KEY: string = 'Main Item';\nconst DIVIDER_ELEMENT_KEY: string = 'Divider';\nconst SUB_ITEMS_MEASURE_TAG: string = 'Sub Items';\n\nclass SubMenuComponent extends React.Component<SubMenuProps, ComponentState> {\n\n  static styledComponentName: string = 'SubMenu';\n\n  public state: ComponentState = {\n    subItemsVisible: false,\n    subItemsHeight: 0,\n  };\n\n  private subItemsAnimation: Animated.Value = new Animated.Value(0);\n  private iconAnimation: Animated.Value = new Animated.Value(-180);\n\n  public componentDidUpdate(prevProps: SubMenuProps, prevState: ComponentState): void {\n    if (prevState.subItemsVisible !== this.state.subItemsVisible) {\n      if (this.state.subItemsVisible) {\n        this.subItemsExpandAnimate(this.state.subItemsHeight);\n        this.animateIcon(0);\n      } else {\n        this.subItemsExpandAnimate(0);\n        this.animateIcon(-180);\n      }\n    }\n  }\n\n  private subItemsExpandAnimate = (toValue: number): void => {\n    Animated.spring(this.subItemsAnimation, {\n      toValue: toValue,\n    }).start();\n  };\n\n  private animateIcon = (toValue: number): void => {\n    Animated.timing(this.iconAnimation, {\n      toValue: toValue,\n      duration: 200,\n    }).start();\n  };\n\n  private onMainItemPress = (): void => {\n    const subItemsVisible: boolean = !this.state.subItemsVisible;\n\n    this.setState({ subItemsVisible });\n  };\n\n  private onSubItemPress = (index: number, event: GestureResponderEvent): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(index, event);\n    }\n  };\n\n  private getComponentStyles = (style: StyleType): StyleType => {\n    return {\n      subContainer: {\n        paddingHorizontal: style.subItemsPaddingHorizontal,\n      },\n    };\n  };\n\n  private onSubMenuMeasure = (result: MeasureResult): void => {\n    const subItemsHeight: number = result[SUB_ITEMS_MEASURE_TAG].size.height;\n\n    this.setState({ subItemsHeight });\n  };\n\n  private getIsSelected = (item: MenuItemType): boolean => {\n    const { selectedIndex } = this.props;\n\n    return selectedIndex === item.menuIndex;\n  };\n\n  private isMainItemDividerExist = (): boolean => {\n    const { divider } = this.props;\n    const { subItemsVisible } = this.state;\n\n    return subItemsVisible && divider !== null;\n  };\n\n  private isSubItemDividerExist = (item: MenuItemType, index: number): boolean => {\n    const { divider } = this.props;\n\n    return (index !== item.subItems.length - 1) && (divider !== null);\n  };\n\n  private renderDivider = (): DividerElement => {\n    const { divider } = this.props;\n\n    return divider && React.cloneElement(divider, {\n      key: DIVIDER_ELEMENT_KEY,\n    });\n  };\n\n  private renderMainItemAccessory = (style: StyleType): IconElement => {\n    const rotateInterpolate = this.iconAnimation.interpolate({\n      inputRange: [-180, 0],\n      outputRange: ['-180deg', '0deg'],\n    });\n    const animatedStyle: StyleType = { transform: [{ rotate: rotateInterpolate }] };\n\n    return (\n      <Chevron\n        style={[style, animatedStyle]}\n        isAnimated={true}\n      />\n    );\n  };\n\n  private renderMenuItem = (item: MenuItemType,\n                            isMainItem: boolean,\n                            index: number | string): MenuItemElement => {\n\n    const onPressHandler: OnPressHandler = isMainItem ? this.onMainItemPress : this.onSubItemPress;\n    const mainMenuItemAccessory = isMainItem ? this.renderMainItemAccessory : null;\n\n    return (\n      <MenuItem\n        {...item}\n        key={index}\n        accessory={mainMenuItemAccessory}\n        onPress={onPressHandler}\n      />\n    );\n  };\n\n  private renderSubItemsInvisible = (subItems: React.ReactNode): React.ReactElement<MeasureNodeProps> => {\n    const measuringProps: MeasuringElementProps = { tag: SUB_ITEMS_MEASURE_TAG };\n\n    return (\n      <MeasureNode onResult={this.onSubMenuMeasure}>\n        <View\n          {...measuringProps}\n          pointerEvents='none'\n          key={SUB_ITEMS_MEASURE_TAG}\n          style={styles.invisibleMenu}>\n          {subItems}\n        </View>\n      </MeasureNode>\n    );\n  };\n\n  private renderSubItems = (): React.ReactFragment => {\n    const { item, themedStyle, divider } = this.props;\n\n    return item.subItems.map((sub: MenuItemType, index: number) => {\n      const { subContainer } = this.getComponentStyles(themedStyle);\n      const isSelected: boolean = this.getIsSelected(sub);\n\n      const element: MenuItemElement = React.cloneElement(this.renderMenuItem(sub, false, index), {\n        style: subContainer,\n        selected: isSelected,\n      });\n      const dividerElement: DividerElement = this.isSubItemDividerExist(item, index) ?\n        this.renderDivider() : null;\n\n      return (\n        <React.Fragment key={index}>\n          {element}\n          {dividerElement}\n        </React.Fragment>\n      );\n    });\n  };\n\n  private renderComponentChildren = (): React.ReactNodeArray => {\n    const { item } = this.props;\n\n    return [\n      this.renderMenuItem(item, true, MAIN_ITEM_KEY),\n      this.renderSubItems(),\n      this.isMainItemDividerExist() ? this.renderDivider() : null,\n    ];\n  };\n\n  public render(): React.ReactFragment {\n    const { subItemsVisible } = this.state;\n    const [mainItem, subItems, divider] = this.renderComponentChildren();\n    const invisibleSubs: React.ReactElement<MeasureNodeProps> = this.renderSubItemsInvisible(subItems);\n\n    const animatedStyle: StyleType = { height: this.subItemsAnimation };\n\n    return (\n      <React.Fragment>\n        {mainItem}\n        {divider}\n        <Animated.View style={animatedStyle}>\n          {subItemsVisible && subItems}\n        </Animated.View>\n        {invisibleSubs}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  invisibleMenu: {\n    opacity: 0,\n    position: 'absolute',\n  },\n});\n\nexport const SubMenu = styled<SubMenuProps>(SubMenuComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport { MenuItemType } from './menuItem.component';\n\n/**\n * Support service for the menu component. Can be expanded.\n */\n\nexport class MenuService {\n\n  /**\n   * Makes custom indexes for the MenuItems array for proper handling group items.\n   *\n   * @param {ReadonlyArray<MenuItemType>} data\n   * @returns {MenuItemType[]} pack by name\n   */\n  public setIndexes(data: ReadonlyArray<MenuItemType>): MenuItemType[] {\n    let tempIndex: number = 0;\n    return data.map((item: MenuItemType) => {\n      if (!item.subItems || item.subItems.length === 0) {\n        item.menuIndex = tempIndex;\n        tempIndex = tempIndex + 1;\n      } else {\n        item.subItems = item.subItems.map((sub: MenuItemType) => {\n          sub.menuIndex = tempIndex;\n          tempIndex = tempIndex + 1;\n          return sub;\n        });\n      }\n      return item;\n    });\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  List,\n  ListProps,\n} from '../list/list.component';\nimport {\n  Divider,\n  DividerElement,\n} from '../divider/divider.component';\nimport {\n  MenuItem,\n  MenuItemType,\n  MenuItemElement,\n  MenuItemProps,\n} from './menuItem.component';\nimport { SubMenu } from './subMenu.component';\nimport { MenuService } from './menu.service';\n\ninterface ComponentProps {\n  selectedIndex?: number;\n  onSelect: (index: number, event?: GestureResponderEvent) => void;\n}\n\nexport type MenuProps = StyledComponentProps & ComponentProps & Omit<ListProps, 'renderItem'>;\nexport type MenuElement = React.ReactElement<MenuProps>;\n\n/**\n * `Menu` renders vertical list of `MenuItems`.\n *\n * @extends React.Component\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` or `noDivider`.\n * Default is `default`.\n *\n * @property {MenuItemType[]} data - Determines menu items.\n *\n * @property {number} selectedIndex - The index of selected item.\n *\n * @property {(index: number, event?: GestureResponderEvent) => void} onSelect - Fires when\n * selected item is changed.\n *\n * @property Omit<ListProps, 'renderItem'> - Any props applied to List component, excluding `renderItem`.\n *\n * @property StyledComponentProps\n *\n * @overview-example MenuSimpleUsage\n *\n * @overview-example MenuAppearance\n *\n * @overview-example MenuWithSubMenu\n *\n * @example MenuWithIcons\n *\n * @example MenuInlineStyling\n */\nclass MenuComponent extends React.Component<MenuProps> {\n\n  static styledComponentName: string = 'Menu';\n\n  private service: MenuService = new MenuService();\n\n  private onSelect = (selectedIndex: number, event: GestureResponderEvent): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(selectedIndex, event);\n    }\n  };\n\n  private isDividerAbsent = (): boolean => {\n    const { appearance } = this.props;\n\n    return appearance !== 'noDivider';\n  };\n\n  private areThereSubItems = (item: MenuItemProps): boolean => {\n    return item.subItems && item.subItems.length !== 0;\n  };\n\n  private getIsSelected = (item: MenuItemType): boolean => {\n    const { selectedIndex } = this.props;\n\n    return selectedIndex === item.menuIndex;\n  };\n\n  private renderMenuItem = (info: ListRenderItemInfo<MenuItemProps>): MenuItemElement => {\n    const { selectedIndex } = this.props;\n    const isSelected: boolean = this.getIsSelected(info.item);\n\n    return this.areThereSubItems(info.item) ? (\n      <SubMenu\n        item={info.item}\n        selectedIndex={selectedIndex}\n        divider={this.renderDivider()}\n        onSelect={this.onSelect}\n      />\n    ) : (\n      <MenuItem\n        {...info.item}\n        selected={isSelected}\n        onPress={this.onSelect}\n      />\n    );\n  };\n\n  private renderDivider = (): DividerElement => {\n    return this.isDividerAbsent() && (\n      <Divider/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { appearance, data, ...restProps } = this.props;\n    const items: MenuItemType[] = this.service.setIndexes(data);\n\n    return (\n      <List\n        ItemSeparatorComponent={this.renderDivider}\n        renderItem={this.renderMenuItem}\n        data={items}\n        {...restProps}\n      />\n    );\n  }\n}\n\nexport const Menu = styled<MenuProps>(MenuComponent);\n","import React from 'react';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\nimport {\n  Menu,\n  MenuElement,\n  MenuProps,\n} from '../menu/menu.component';\nimport { MenuItemType } from '../menu/menuItem.component';\n\nexport type DrawerHeaderElement = React.ReactElement<any>;\nexport type DrawerFooterElement = React.ReactElement<any>;\n\ninterface ComponentProps {\n  header?: () => DrawerHeaderElement;\n  footer?: () => DrawerFooterElement;\n}\n\nexport type DrawerProps = StyledComponentProps & ComponentProps & MenuProps;\nexport type DrawerElement = React.ReactElement<DrawerProps>;\n\n/**\n * Styled `Navigation Drawer` component. The principle of rendering a `Drawer` is the same as a rendering a List.\n *\n * @extends React.Component\n *\n * @property {MenuItemType[]} data - Determines the items displayed in drawer menu.\n *\n * @property {string} appearance - Determines the appearance of the component.\n * Can be `default` or `noDivider`.\n * Default is `default`.\n *\n * @property {() => DrawerHeaderElement} header - Determines the function to render a header. Optional.\n *\n * @property {() => DrawerFooterElement} footer - Determines the function to render a footer. Optional.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onSelect - Determines the function to handle\n * menu item press.\n *\n * @property MenuProps - Any props applied to Menu component.\n *\n * @overview-example DrawerSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { createAppContainer, SafeAreaView } from 'react-navigation';\n * import { createDrawerNavigator } from 'react-navigation-drawer';\n * import { Drawer, Layout, Text } from 'react-native-ui-kitten';\n *\n * // React Navigation also requires installing additional dependencies:\n * //\n * // npm i react-navigation react-navigation-drawer react-native-reanimated react-native-gesture-handler\n * //\n * // Then, install it for ios:\n * //\n * // cd ./ios && pod install\n *\n * const HomeScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>HOME</Text>\n *   </Layout>\n * );\n *\n * const SettingsScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>SETTINGS</Text>\n *   </Layout>\n * );\n *\n * const DrawerComponent = ({ navigation }) => {\n *\n *   const onSelect = (index) => {\n *     const { [index]: selectedTabRoute } = navigation.state.routes;\n *     navigation.navigate(selectedTabRoute.routeName);\n *   };\n *\n *   return (\n *     <SafeAreaView>\n *       <Drawer data={[{ title: 'Home' }, { title: 'Settings' }]} onSelect={onSelect} />\n *     </SafeAreaView>\n *   );\n * };\n *\n * const DrawerNavigator = createDrawerNavigator({\n *   Home: HomeScreen,\n *   Settings: SettingsScreen,\n * }, {\n *   contentComponent: DrawerComponent,\n * });\n *\n * export const AppNavigator = createAppContainer(DrawerNavigator);\n * ```\n *\n * @overview-example DrawerWithIcons\n *\n * @overview-example DrawerHeader\n *\n * @overview-example DrawerFooter\n *\n * @example DrawerCustomHeader\n *\n * @example DrawerNotificationBadgeItem\n */\nclass DrawerComponent extends React.Component<DrawerProps> {\n\n  static styledComponentName: string = 'Drawer';\n\n  private renderHeader = (): DrawerHeaderElement => {\n    return this.props.header();\n  };\n\n  private renderFooter = (): DrawerFooterElement => {\n    return this.props.footer();\n  };\n\n  private renderMenu = (): MenuElement => {\n    const { style, header, footer, themedStyle, ...restProps } = this.props;\n\n    return (\n      <Menu\n        style={themedStyle}\n        showsVerticalScrollIndicator={false}\n        bounces={false}\n        {...restProps}\n      />\n    );\n  };\n\n  private renderComponentChildren = (): React.ReactNodeArray => {\n    const { header, footer } = this.props;\n\n    return [\n      header && this.renderHeader(),\n      this.renderMenu(),\n      footer && this.renderFooter(),\n    ];\n  };\n\n  public render(): React.ReactFragment {\n    const [header, menu, footer] = this.renderComponentChildren();\n\n    return (\n      <React.Fragment>\n        {header}\n        {menu}\n        {footer}\n      </React.Fragment>\n    );\n  }\n}\n\nexport const Drawer = styled<DrawerProps>(DrawerComponent);\n","import React from 'react';\nimport {\n  ListItem,\n  ListItemProps,\n  ListItemElement,\n} from '../list/listItem.component';\n\nexport type DrawerHeaderFooterProps = Partial<ListItemProps>;\nexport type DrawerHeaderFooterElement = ListItemElement;\n\n/**\n * `DrawerHeaderFooter` is a support component for `Drawer`.\n * Designed to be used as Header or Footer of `Drawer`.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the DrawerHeaderFooter.\n *\n * @property {string} description - Determines the description of the DrawerHeaderFooter's title.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes title style.\n *\n * @property {StyleProp<TextStyle>} descriptionStyle - Customizes description style.\n *\n * @property {React.ReactNode} children - Determines React Children of the component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<any>} accessory - Determines the accessory of the\n * component.\n *\n * @property {(style: StyleType, index: number) => React.ReactElement<ImageProps>} icon - Determines the icon of the\n * component.\n *\n * @property {(index: number, event: GestureResponderEvent) => React.ReactElement<ImageProps>} onPress - Emits when\n * component is pressed.\n *\n * @property ListItemProps - Any props applied to ListItem component.\n *\n * @overview-example DrawerHeaderFooterSimpleUsage\n *\n * @overview-example DrawerHeaderFooterWithAccessory\n *\n * @example DrawerHeaderFooterWithExternalSourceIcon\n *\n * @example DrawerHeaderFooterInlineStyling\n */\nexport class DrawerHeaderFooter extends React.Component<DrawerHeaderFooterProps> {\n\n  public render(): DrawerHeaderFooterElement {\n    return (\n      <ListItem {...this.props} />\n    );\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextProps,\n} from '../text/text.component';\nimport { CheckBox } from '../checkbox/checkbox.component';\nimport { TouchableTypeReturningProps } from '../support/typings';\n\ntype TextElement = React.ReactElement<TextProps>;\ntype ItemElement = React.ReactElement<TouchableOpacityProps>;\n\nexport interface SelectOptionType {\n  text: string;\n  textStyle?: TextStyle;\n  disabled?: boolean;\n  items?: SelectOptionType[];\n}\n\nexport interface ComponentProps {\n  item: SelectOptionType;\n  selected?: boolean;\n  indeterminate?: boolean;\n  multiSelect?: boolean;\n}\n\nexport type SelectOptionProps = ComponentProps & StyledComponentProps & TouchableTypeReturningProps<SelectOptionType>;\nexport type SelectOptionElement = React.ReactElement<SelectOptionProps>;\n\nclass SelectOptionComponent extends React.Component<SelectOptionProps> {\n\n  static styledComponentName: string = 'SelectOption';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n    this.props.onPress(this.props.item, event);\n  };\n\n  private onMultiSelectItemPress = (value: boolean): void => {\n    this.onPress(null);\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(this.props.item, event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(this.props.item, event);\n    }\n  };\n\n  private onLongPress = (event: GestureResponderEvent): void => {\n    if (this.props.onLongPress) {\n      this.props.onLongPress(this.props.item, event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textColor,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textMarginHorizontal,\n      ...containerStyles\n    } = source;\n\n    return {\n      container: containerStyles,\n      text: {\n        color: textColor,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        marginHorizontal: textMarginHorizontal,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    return (\n      <Text style={[style, styles.text, this.props.item.textStyle]}>\n        {this.props.item.text}\n      </Text>\n    );\n  };\n\n  private renderDefaultItem = (): ItemElement => {\n    const { themedStyle, style, item, ...restProps } = this.props;\n    const { container, text } = this.getComponentStyle(themedStyle);\n    const textElement: TextElement = this.renderTextElement(text);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...restProps}\n        style={[styles.container, container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}\n        onLongPress={this.onLongPress}>\n        {textElement}\n      </TouchableOpacity>\n    );\n  };\n\n  private renderMultiSelectItem = (): ItemElement => {\n    const { style, themedStyle, selected, disabled, indeterminate, item, ...restProps } = this.props;\n    const { container, text } = this.getComponentStyle(themedStyle);\n\n    return (\n      <View\n        {...restProps}\n        style={[styles.container, container, style]}>\n        <CheckBox\n          text={item.text}\n          textStyle={[text, item.textStyle, styles.multiSelectText]}\n          disabled={disabled}\n          checked={selected}\n          indeterminate={indeterminate}\n          onChange={this.onMultiSelectItemPress}\n        />\n      </View>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return this.props.multiSelect ? this.renderMultiSelectItem() : this.renderDefaultItem();\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {},\n  text: {},\n  multiSelectText: {\n    width: '100%',\n  },\n});\n\nexport const SelectOption = styled<SelectOptionProps>(SelectOptionComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  SelectOption as RNSelectOption,\n  SelectOptionElement as RNSelectOptionElement,\n  SelectOptionProps as RNSelectOptionProps,\n  // @ts-ignore\n} from './selectOption.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type SelectOptionProps = RNSelectOptionProps & WebEventResponderCallbacks;\nexport type SelectOptionElement = React.ReactElement<SelectOptionProps>;\n\nexport class SelectOption extends React.Component<SelectOptionProps> implements WebEventResponderCallbacks {\n\n  private selectOptionRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.selectOptionRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.selectOptionRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNSelectOptionElement {\n    const { textStyle, ...restProps } = this.props;\n\n    return (\n      <RNSelectOption\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.selectOptionRef}\n        style={[textStyle, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ListRenderItemInfo,\n  View,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  SelectOption,\n  SelectOptionElement,\n  SelectOptionProps,\n  SelectOptionType,\n} from './selectOption.component';\nimport { SelectOption as SelectOptionProp} from './select.component';\nimport { SelectionStrategy } from './selection.strategy';\n\ninterface ComponentProps {\n  multiSelect?: boolean;\n  strategy: SelectionStrategy<SelectOptionProp>;\n  renderItem?: (item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>;\n}\n\ninterface MainItemStatus {\n  selected: boolean;\n  indeterminate: boolean;\n}\n\nexport type SelectGroupOptionProps = ComponentProps & Partial<SelectOptionProps> & StyledComponentProps;\nexport type SelectGroupOptionElement = React.ReactElement<SelectGroupOptionProps>;\n\nclass SelectGroupOptionComponent extends React.Component<SelectGroupOptionProps> {\n\n  static styledComponentName: string = 'SelectGroupOption';\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      itemPaddingHorizontal,\n      ...containerStyles\n    } = source;\n\n    return {\n      container: containerStyles,\n      item: {\n        paddingHorizontal: itemPaddingHorizontal,\n      },\n    };\n  };\n\n  private getMainItemStatus = (subItemsSelectedStatusArray: boolean[]): MainItemStatus => {\n    const someSelected: boolean = subItemsSelectedStatusArray\n      .some((item: boolean) => item === true);\n    const everySelected: boolean = subItemsSelectedStatusArray\n      .every((item: boolean) => item === true);\n\n    switch (true) {\n      case (someSelected && !everySelected):\n        return { selected: true, indeterminate: true };\n      case  !someSelected:\n        return { selected: false, indeterminate: false };\n      case everySelected:\n        return { selected: true, indeterminate: false };\n    }\n  };\n\n  private renderSubItem = (option: SelectOptionType, index: number): SelectOptionElement => {\n    const { item, renderItem, strategy, ...restProps } = this.props;\n    const returningOption: ListRenderItemInfo<SelectOptionType> = {\n      item: option,\n      index: index,\n      separators: null,\n    };\n    const selected: boolean = strategy.isSelected(option);\n\n    return renderItem ? renderItem(returningOption) : (\n      <SelectOption\n        {...restProps}\n        selected={selected}\n        item={option}\n      />\n    );\n  };\n\n  private renderSubItemsElements = (): SelectOptionElement[] => {\n    const { item, themedStyle } = this.props;\n    const { item: itemStyle } = this.getComponentStyle(themedStyle);\n\n    return item.items\n      .map((option: SelectOptionType, index: number) => {\n        const element: SelectOptionElement = this.renderSubItem(option, index);\n\n        return React.cloneElement(element, {\n          ...option,\n          style: [element.props.style, itemStyle],\n          key: index,\n        });\n      });\n  };\n\n  private renderMultiSelectMainElement = (subItemsElements: SelectOptionElement[]): SelectOptionElement => {\n    const { item, ...restProps } = this.props;\n    const subItemsSelectedStatusArray: boolean[] = subItemsElements\n      .map((subItem: SelectOptionElement) => subItem.props.selected);\n    const itemStatus: MainItemStatus = this.getMainItemStatus(subItemsSelectedStatusArray);\n\n    return (\n      <SelectOption\n        {...restProps}\n        {...itemStatus}\n        item={item}\n      />\n    );\n  };\n\n  private renderDefaultMainElement = (): SelectOptionElement => {\n    const { item } = this.props;\n\n    return (\n      <SelectOption\n        disabled={true}\n        item={item}\n      />\n    );\n  };\n\n  private renderMainElement = (subItemsElements: SelectOptionElement[]): SelectOptionElement => {\n    const { multiSelect } = this.props;\n\n    return multiSelect ? this.renderMultiSelectMainElement(subItemsElements) : this.renderDefaultMainElement();\n  };\n\n  public render(): SelectGroupOptionElement {\n    const { themedStyle } = this.props;\n    const { container } = this.getComponentStyle(themedStyle);\n    const subItemsElements: SelectOptionElement[] = this.renderSubItemsElements();\n    const mainElement: SelectOptionElement = this.renderMainElement(subItemsElements);\n\n    return (\n      <View style={container}>\n        {mainElement}\n        {subItemsElements}\n      </View>\n    );\n  }\n}\n\nexport const SelectGroupOption = styled<SelectGroupOptionProps>(SelectGroupOptionComponent);\n\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  ListRenderItemInfo,\n  GestureResponderEvent,\n} from 'react-native';\nimport {\n  List,\n  ListProps,\n} from '../list/list.component';\nimport {\n  SelectOption,\n  SelectOptionType,\n  SelectOptionElement,\n} from './selectOption.component';\nimport {\n  SelectGroupOption,\n  SelectGroupOptionElement,\n} from './selectGroupOption.component';\nimport { SelectOption as SelectOptionProp} from './select.component';\nimport { SelectionStrategy } from './selection.strategy';\n\ntype DefaultMenuItemElement = SelectOptionElement | SelectGroupOptionElement;\ntype MenuItemElement = DefaultMenuItemElement | React.ReactElement<any>;\n\nexport interface ComponentProps {\n  data: SelectOptionType[];\n  multiSelect?: boolean;\n  strategy: SelectionStrategy<SelectOptionProp>;\n  renderItem?: (item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>;\n  onSelect: (option: SelectOptionType, event?: GestureResponderEvent) => void;\n}\n\nexport type SelectOptionsListProps = Partial<ListProps> & ComponentProps;\nexport type SelectOptionsListElement = React.ReactElement<SelectOptionsListProps>;\n\nexport class SelectOptionsList extends React.Component<SelectOptionsListProps> {\n\n  private areThereSubItems = (dropdownItem: SelectOptionType): boolean => {\n    const { items } = dropdownItem;\n\n    return items && items.length !== 0;\n  };\n\n  private onSelect = (option: SelectOptionType, event?: GestureResponderEvent): void => {\n    this.props.onSelect(option, event);\n  };\n\n  private renderDefaultItem = (info: ListRenderItemInfo<SelectOptionType>): DefaultMenuItemElement => {\n    const { renderItem, multiSelect, strategy } = this.props;\n    const selected: boolean = strategy.isSelected(info.item);\n\n    return this.areThereSubItems(info.item) ? (\n      <SelectGroupOption\n        {...info}\n        strategy={strategy}\n        multiSelect={multiSelect}\n        renderItem={renderItem}\n        onPress={this.onSelect}\n      />\n    ) : (\n      <SelectOption\n        {...info}\n        disabled={info.item.disabled}\n        selected={selected}\n        multiSelect={multiSelect}\n        onPress={this.onSelect}\n      />\n    );\n  };\n\n  private renderItem = (info: ListRenderItemInfo<SelectOptionType>): MenuItemElement => {\n    const { renderItem } = this.props;\n\n    return renderItem ? renderItem(info) : this.renderDefaultItem(info);\n  };\n\n  public render(): SelectOptionsListElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <List\n        {...restProps}\n        style={[styles.container, style]}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n","import { SelectOptionType } from './selectOption.component';\nimport { KeyExtractorType } from './select.component';\n\nexport abstract class SelectionStrategy<S> {\n\n  public selectedOption: S;\n  protected keyExtractor: KeyExtractorType;\n\n  protected constructor(options: S, data: SelectOptionType[], keyExtractor?: KeyExtractorType) {\n\n    this.selectedOption = options;\n    this.keyExtractor = keyExtractor;\n    this.verifyData(data);\n  }\n\n  public abstract isSelected(item: SelectOptionType): boolean;\n\n  public abstract select(option: SelectOptionType, callback?: () => void): S;\n\n  public abstract getPlaceholder(placeholder: string): string;\n\n  protected abstract verifyData(data: SelectOptionType[]): void;\n\n  protected compareOptions(option1: SelectOptionType, option2: SelectOptionType): boolean {\n    if (!this.keyExtractor) {\n      return option1 === option2;\n    } else {\n      return (option1 && option2) && this.keyExtractor(option1) === this.keyExtractor(option2);\n    }\n  }\n\n  protected hasOptionSubItems(option: SelectOptionType): boolean {\n    return option.items && option.items.length !== 0;\n  }\n\n  protected processData(data: SelectOptionType[]): string[] {\n    return data\n      .reduce((acc: string[], current: SelectOptionType) => {\n        if (this.hasOptionSubItems(current)) {\n          const subTexts: string[] = current.items.map((item: SelectOptionType) => {\n            return item.text;\n          });\n          return acc.concat(subTexts);\n        } else {\n          acc.push(current.text);\n          return acc;\n        }\n      }, []);\n  }\n}\n\nexport class MultiSelectStrategy extends SelectionStrategy<SelectOptionType[]> {\n\n  constructor(options: SelectOptionType | SelectOptionType[],\n              data: SelectOptionType[],\n              keyExtractor?: KeyExtractorType) {\n\n    if (Array.isArray(options)) {\n      super(options, data, keyExtractor);\n    }\n  }\n\n  public select(option: SelectOptionType, callback?: () => void): SelectOptionType[] {\n    const subOptionsExist: boolean = this.hasOptionSubItems(option);\n\n    if (subOptionsExist) {\n      this.selectOptionWithSubOptions(option);\n    } else {\n      this.selectDefaultOption(option);\n    }\n\n    return this.selectedOption;\n  }\n\n  private selectDefaultOption(option: SelectOptionType): void {\n    const optionAlreadyExist: boolean = this.selectedOption\n      .some((item: SelectOptionType) => {\n        return this.compareOptions(item, option);\n      });\n    if (optionAlreadyExist) {\n      this.removeOption(option);\n    } else {\n      this.selectedOption.push(option);\n    }\n  }\n\n  private selectOptionWithSubOptions(option: SelectOptionType): void {\n    const subOptionsAlreadyExist: boolean = this.selectedOption\n      .some((item: SelectOptionType) => {\n        return option.items\n          .some((subItem: SelectOptionType) => {\n            return subItem === item;\n          });\n      });\n\n    if (subOptionsAlreadyExist) {\n      option.items.forEach((subItem: SelectOptionType) => this.removeOption(subItem));\n    } else {\n      const enabledItems: SelectOptionType[] = option.items\n        .filter((item: SelectOptionType) => {\n          return !item.disabled;\n        });\n      this.selectedOption = this.selectedOption.concat(enabledItems);\n    }\n  }\n\n  public getPlaceholder(placeholder: string): string {\n    if (this.isSelectedOptionExist()) {\n      return this.selectedOption\n        .map((item: SelectOptionType) => {\n          return item && item.text;\n        })\n        .join(', ');\n    } else {\n      return placeholder;\n    }\n  }\n\n  public isSelected(item: SelectOptionType): boolean {\n    return this.selectedOption\n      .some((option: SelectOptionType) => {\n        return this.compareOptions(item, option);\n      });\n  }\n\n  private isSelectedOptionExist(): boolean {\n    return this.selectedOption && this.selectedOption.length !== 0;\n  }\n\n  private removeOption(option: SelectOptionType): void {\n    const index: number = this.selectedOption\n      .findIndex((item: SelectOptionType) => {\n        return this.compareOptions(item, option);\n      });\n    if (index !== -1) {\n      this.selectedOption.splice(index, 1);\n    }\n  }\n\n  protected verifyData(data: SelectOptionType[]): void {\n    const selectedItemsAreCorrect: boolean = this.processData(data).some((item: string) => {\n      return this.selectedOption.some((selected: SelectOptionType) => {\n        return selected.text === item;\n      });\n    });\n\n    if (!selectedItemsAreCorrect && this.selectedOption.length !== 0) {\n      const message: string = `Some Option doesn't exist in the data array or you ` +\n        'set Main group option selected.';\n      throw Error(message);\n    }\n  }\n}\n\nexport class SingleSelectStrategy extends SelectionStrategy<SelectOptionType> {\n\n  constructor(options: SelectOptionType | SelectOptionType[],\n              data: SelectOptionType[],\n              keyExtractor?: KeyExtractorType) {\n\n    if (!Array.isArray(options)) {\n      super(options, data, keyExtractor);\n    }\n  }\n\n  public select(option: SelectOptionType, callback?: () => void): SelectOptionType {\n    this.selectedOption = option;\n\n    if (callback) {\n      callback();\n    }\n\n    return this.selectedOption;\n  }\n\n  public getPlaceholder(placeholder: string): string {\n    if (this.selectedOption) {\n      return this.selectedOption.text;\n    } else {\n      return placeholder;\n    }\n  }\n\n  public isSelected(item: SelectOptionType): boolean {\n    if (this.hasOptionSubItems(item)) {\n      return item.items.some((option: SelectOptionType) => {\n        return this.isSelected(option);\n      });\n    } else {\n      return this.compareOptions(item, this.selectedOption);\n    }\n  }\n\n  protected verifyData(data: SelectOptionType[]): void {\n    const selectedItemsAreCorrect: boolean = this.processData(data).some((item: string) => {\n      if (this.selectedOption) {\n        return item === this.selectedOption.text;\n      }\n    });\n\n    if (!selectedItemsAreCorrect && this.selectedOption) {\n      const message: string = `Option \\\"${this.selectedOption.text}\\\" doesn't exist in the data array!`;\n      throw Error(message);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  ListRenderItemInfo,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { Popover } from '../popover/popover.component';\nimport {\n  SelectOptionsList,\n  SelectOptionsListElement,\n} from './selectOptionsList.component';\nimport { SelectOptionType } from './selectOption.component';\nimport {\n  MeasureNode,\n  MeasureResult,\n  MeasuringElementProps,\n} from '../popover/measure.component';\nimport {\n  MultiSelectStrategy,\n  SelectionStrategy,\n  SingleSelectStrategy,\n} from './selection.strategy';\nimport {\n  allWithPrefix,\n  isValidString,\n} from '../support/services';\nimport { Chevron } from '../support/components';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype ControlElement = React.ReactElement<TouchableOpacityProps>;\ntype IconProp = (style: ImageStyle, visible: boolean) => IconElement;\ntype SelectChildren = [SelectOptionsListElement, TextElement, ControlElement];\n\nexport type SelectOption = Array<SelectOptionType> | SelectOptionType;\nexport type KeyExtractorType = (item: SelectOptionType) => string;\n\nconst MEASURED_CONTROL_TAG: string = 'Control';\n\ninterface ComponentProps {\n  data: SelectOptionType[];\n  multiSelect?: boolean;\n  selectedOption?: SelectOption;\n  textStyle?: StyleProp<TextStyle>;\n  placeholder?: string;\n  placeholderStyle?: StyleProp<TextStyle>;\n  label?: string;\n  labelStyle?: StyleProp<TextStyle>;\n  controlStyle?: StyleProp<ViewStyle>;\n  icon?: IconProp;\n  onSelect: (option: SelectOption, event?: GestureResponderEvent) => void;\n  status?: string;\n  renderItem?: (item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>;\n  keyExtractor?: KeyExtractorType;\n}\n\nexport type SelectProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type SelectElement = React.ReactElement<SelectProps>;\n\ninterface State {\n  visible: boolean;\n  optionsListWidth: number;\n}\n\n/**\n * Styled `Select` component. By default, the MultiSelect compares the items by reference.\n * To specify a field from the data object which will be used for the comparison,\n * implement the `keyExtractor` property.\n *\n * @extends React.Component\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning` or `danger`.\n *\n * @property {boolean} multiSelect - Determines `multi-select` behavior of the Select component.\n *\n * @property {SelectOption} selectedOption - Determines selected option of the Select.\n * Can be `SelectOptionType` or `SelectOptionType[]` It depends on `multiSelect` property.\n *\n * @property {SelectOptionType[]} data - Determines items of the Select component.\n *\n * @property {(option: SelectOption, event?: GestureResponderEvent) => void} onSelect - Fires on option selection.\n * Returns selected option/options.\n *\n * @property {(item: ListRenderItemInfo<SelectOptionType>) => React.ReactElement<any>} renderItem - Property for\n * rendering custom select items.\n *\n * @property {StyleProp<TextStyle>} label - Determines the `label` of the component.\n *\n * @property {StyleProp<TextStyle>} placeholder - Determines the `placeholder` of the component.\n * By default is `Select Option`.\n *\n * @property {StyleProp<TextStyle>} labelStyle - Determines the style of the `label`.\n *\n * @property {StyleProp<TextStyle>} placeholderStyle - Determines the style of the `placeholder`.\n *\n * @property {StyleProp<TextStyle>} textStyle - Determines the style of the selected option/options text.\n *\n * @property {StyleProp<ViewStyle>} controlStyle - Determines the style of `control`.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {KeyExtractorType} keyExtractor - Used to extract a unique key for a given item;\n *\n * @property TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example SelectSimpleUsage\n *\n * @overview-example SelectStatus\n *\n * @overview-example SelectMultiSelect\n *\n * @overview-example SelectWithGroups\n *\n * @overview-example SelectMultiPreselectedInline\n *\n * @overview-example SelectMultiPreselectedReference\n *\n * @example SelectCustomIcon\n *\n * @example SelectInlineStyling\n */\nclass SelectComponent extends React.Component<SelectProps, State> {\n\n  static styledComponentName: string = 'Select';\n  static defaultProps: Partial<SelectProps> = {\n    placeholder: 'Select Option',\n    multiSelect: false,\n  };\n\n  public state: State = {\n    visible: false,\n    optionsListWidth: 0,\n  };\n\n  private strategy: SelectionStrategy<SelectOption>;\n  private iconAnimation: Animated.Value;\n\n  constructor(props: SelectProps) {\n    super(props);\n    this.strategy = this.createSelectionStrategy();\n    this.iconAnimation = new Animated.Value(-180);\n  }\n\n  public componentDidUpdate(): void {\n    this.strategy = this.createSelectionStrategy();\n  }\n\n  private onPress = (event: GestureResponderEvent): void => {\n    this.setVisibility();\n\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private onItemSelect = (option: SelectOptionType, event: GestureResponderEvent): void => {\n    const selectedOption: SelectOption = this.strategy.select(option, this.setVisibility);\n    this.props.onSelect(selectedOption);\n  };\n\n  private onControlMeasure = (result: MeasureResult): void => {\n    const width: number = result[MEASURED_CONTROL_TAG].size.width;\n\n    this.setState({ optionsListWidth: width });\n  };\n\n  private createSelectionStrategy = (): SelectionStrategy<SelectOption> => {\n    const { multiSelect, selectedOption, keyExtractor, data } = this.props;\n\n    return multiSelect ?\n      new MultiSelectStrategy(selectedOption, data, keyExtractor) :\n      new SingleSelectStrategy(selectedOption, data, keyExtractor);\n  };\n\n  private setVisibility = (): void => {\n    const visible: boolean = !this.state.visible;\n\n    this.setState({ visible }, this.handleVisibleChange);\n  };\n\n  private handleVisibleChange = (): void => {\n    this.dispatchActive();\n    this.startIconAnimation();\n  };\n\n  private dispatchActive = (): void => {\n    const { visible } = this.state;\n    if (visible) {\n      this.props.dispatch([Interaction.ACTIVE]);\n    } else {\n      this.props.dispatch([]);\n    }\n  };\n\n  private startIconAnimation = (): void => {\n    const { visible } = this.state;\n    if (visible) {\n      this.animateIcon(0);\n    } else {\n      this.animateIcon(-180);\n    }\n  };\n\n  private animateIcon = (toValue: number): void => {\n    Animated.timing(this.iconAnimation, {\n      toValue: toValue,\n      duration: 200,\n    }).start();\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      backgroundColor,\n      borderColor,\n      borderWidth,\n      minHeight,\n      minWidth,\n      paddingHorizontal,\n      paddingVertical,\n      borderRadius,\n    } = source;\n\n    const iconStyles: StyleType = allWithPrefix(source, 'icon');\n    const textStyles: StyleType = allWithPrefix(source, 'text');\n    const placeholderStyles: StyleType = allWithPrefix(source, 'placeholder');\n    const optionsListStyles: StyleType = allWithPrefix(source, 'optionsList');\n    const labelStyle: StyleType = allWithPrefix(source, 'label');\n    const outlineStyles: StyleType = allWithPrefix(source, 'outline');\n\n    return {\n      control: {\n        backgroundColor: backgroundColor,\n        borderColor: borderColor,\n        borderWidth: borderWidth,\n        minHeight: minHeight,\n        minWidth: minWidth,\n        paddingHorizontal: paddingHorizontal,\n        paddingVertical: paddingVertical,\n        borderRadius: borderRadius,\n      },\n      icon: {\n        height: iconStyles.iconHeight,\n        width: iconStyles.iconWidth,\n        marginHorizontal: iconStyles.iconMarginHorizontal,\n        tintColor: iconStyles.iconTintColor,\n      },\n      text: {\n        color: textStyles.textColor,\n        fontFamily: textStyles.textFontFamily,\n        fontSize: textStyles.textFontSize,\n        fontWeight: textStyles.textFontWeight,\n        lineHeight: textStyles.textLineHeight,\n        marginHorizontal: textStyles.textMarginHorizontal,\n      },\n      placeholder: {\n        color: placeholderStyles.placeholderColor,\n        fontFamily: placeholderStyles.placeholderFontFamily,\n        fontSize: placeholderStyles.placeholderFontSize,\n        fontWeight: placeholderStyles.placeholderFontWeight,\n        lineHeight: placeholderStyles.placeholderLineHeight,\n        marginHorizontal: placeholderStyles.placeholderMarginHorizontal,\n      },\n      outline: {\n        backgroundColor: outlineStyles.outlineBackgroundColor,\n        padding: outlineStyles.outlinePadding,\n        borderRadius: outlineStyles.outlineBorderRadius,\n      },\n      optionsList: {\n        maxHeight: optionsListStyles.optionsListMaxHeight,\n        borderRadius: optionsListStyles.optionsListBorderRadius,\n        borderColor: optionsListStyles.optionsListBorderColor,\n        borderWidth: optionsListStyles.optionsListBorderWidth,\n      },\n      label: {\n        color: labelStyle.labelColor,\n        marginBottom: labelStyle.labelMarginBottom,\n      },\n    };\n  };\n\n  private renderLabelElement = (style: TextStyle): TextElement => {\n    const { label, labelStyle } = this.props;\n\n    return (\n      <Text style={[style, styles.label, labelStyle]}>\n        {label}\n      </Text>\n    );\n  };\n\n  private renderDefaultIconElement = (style: ImageStyle): IconElement => {\n    const rotateInterpolate = this.iconAnimation.interpolate({\n      inputRange: [-180, 0],\n      outputRange: ['-180deg', '0deg'],\n    });\n\n    const animatedStyle: StyleType = { transform: [{ rotate: rotateInterpolate }] };\n\n    return (\n      <Chevron\n        style={[style, animatedStyle]}\n        isAnimated={true}\n      />\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    if (this.props.icon) {\n      return this.props.icon(style, this.state.visible);\n    } else {\n      return this.renderDefaultIconElement(style);\n    }\n  };\n\n  private renderTextElement = (valueStyle: TextStyle, placeholderStyle: TextStyle): TextElement => {\n    const { placeholder, textStyle } = this.props;\n    const value: string = this.strategy.getPlaceholder(placeholder);\n    const style: TextStyle = placeholder === value ? placeholderStyle : valueStyle;\n\n    return (\n      <Text\n        style={[style, styles.text, textStyle]}\n        numberOfLines={1}\n        ellipsizeMode='tail'>\n        {value}\n      </Text>\n    );\n  };\n\n  private renderOptionsListElement = (style: StyleType): SelectOptionsListElement => {\n    const { appearance, selectedOption, ...restProps } = this.props;\n    const additionalOptionsListStyle: StyleType = { width: this.state.optionsListWidth };\n\n    return (\n      <SelectOptionsList\n        {...restProps}\n        strategy={this.strategy}\n        key={0}\n        style={[styles.optionsList, style, additionalOptionsListStyle]}\n        bounces={false}\n        onSelect={this.onItemSelect}\n      />\n    );\n  };\n\n  private renderControlChildren = (style: StyleType): React.ReactNodeArray => {\n    return [\n      this.renderIconElement(style.icon),\n      this.renderTextElement(style.text, style.placeholder),\n    ];\n  };\n\n  private renderControlElement = (): ControlElement => {\n    const { themedStyle, controlStyle, ...restProps } = this.props;\n    const { control, outline, ...childrenStyles } = this.getComponentStyle(themedStyle);\n    const [iconElement, textElement] = this.renderControlChildren(childrenStyles);\n\n    const measuringProps: MeasuringElementProps = { tag: MEASURED_CONTROL_TAG };\n\n    return (\n      <MeasureNode onResult={this.onControlMeasure}>\n        <TouchableOpacity\n          {...restProps}\n          {...measuringProps}\n          key={MEASURED_CONTROL_TAG}\n          activeOpacity={1.0}\n          style={[styles.control, control, controlStyle]}\n          onPress={this.onPress}\n          onPressIn={this.onPressIn}\n          onPressOut={this.onPressOut}>\n          {textElement}\n          {iconElement}\n        </TouchableOpacity>\n      </MeasureNode>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): SelectChildren => {\n    return [\n      this.renderOptionsListElement(style.optionsList),\n      isValidString(this.props.label) && this.renderLabelElement(style.label),\n      this.renderControlElement(),\n    ];\n  };\n\n  public render(): SelectElement {\n    const { themedStyle, style } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n    const additionalOptionsListStyle: StyleType = { maxWidth: this.state.optionsListWidth };\n\n    const [optionsListElement, labelElement, controlElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View style={style}>\n        {labelElement}\n        <View style={[styles.outline, componentStyle.outline]}>\n          <Popover\n            visible={this.state.visible}\n            content={optionsListElement}\n            style={additionalOptionsListStyle}\n            indicatorStyle={styles.indicator}\n            onBackdropPress={this.setVisibility}>\n            {controlElement}\n          </Popover>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  control: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  text: {\n    flex: 1,\n  },\n  icon: {},\n  label: {},\n  indicator: {\n    width: 0,\n    height: 6,\n  },\n  optionsList: {\n    flexGrow: 0,\n  },\n  outlineContainer: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  outline: {\n    justifyContent: 'center',\n  },\n});\n\nexport const Select = styled<SelectProps>(SelectComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Select as RNSelect,\n  SelectElement as RNSelectElement,\n  SelectProps as RNSelectProps,\n  // @ts-ignore\n} from './select.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type SelectProps = RNSelectProps & WebEventResponderCallbacks;\nexport type SelectElement = React.ReactElement<SelectProps>;\n\nexport class Select extends React.Component<SelectProps> implements WebEventResponderCallbacks {\n\n  private selectRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  private get isVisible(): boolean {\n    return this.selectRef.current.state.visible;\n  }\n\n  public onMouseEnter = (): void => {\n    if (!this.isVisible) {\n      this.selectRef.current.props.dispatch([Interaction.HOVER]);\n    }\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    if (!this.isVisible) {\n      this.selectRef.current.props.dispatch([]);\n    }\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.selectRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.selectRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNSelectElement {\n    const { controlStyle, ...restProps } = this.props;\n\n    return (\n      <RNSelect\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.selectRef}\n        controlStyle={[controlStyle, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\nimport {\n  IconPack,\n  IconProvider,\n} from './type';\n\nfunction throwPackNotFoundError(name: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: Icon Pack '${name}' is not registered`,\n    'Using UI Kitten components is only possible with configuring ApplicationProvider.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nfunction throwIconNotFoundError(name: string, pack: string) {\n  const docRoot: string = 'https://akveo.github.io/react-native-ui-kitten/docs';\n\n  const message: string = [\n    `\\nIcon: '${name}' icon is not registered in pack '${pack}'.`,\n    'Check icon name or consider switching icon pack.',\n    `📖 Documentation: ${docRoot}/guides/setting-up-icons`,\n  ].join('\\n');\n\n  throw Error(message);\n}\n\nexport interface RegisteredIcon<T> {\n  name: string;\n  pack: string;\n  icon: IconProvider<T>;\n}\n\ntype IconProps = any;\n\n/**\n * This service allows to register multiple icon packs to use them later within\n * `<Icon/>` component.\n */\nclass RegistryService {\n\n  protected packs: Map<string, IconPack<IconProps>> = new Map();\n  protected defaultPack: string;\n\n  /**\n   * Registers multiple icon packs and sets the first one as default if there is no default packs\n   *\n   * @param {IconPack[]} packs - array of icon packs\n   */\n  public register<T>(...packs: IconPack<T>[]) {\n    packs.forEach((pack: IconPack<IconProps>) => {\n      this.registerIconPack(pack);\n    });\n  }\n\n  /**\n   * Sets pack as default\n   *\n   * @param {string} name\n   * @throws {Error} if pack is nor registered\n   */\n  public setDefaultIconPack(name: string) {\n    if (!this.packs.has(name)) {\n      throwPackNotFoundError(name);\n    }\n\n    this.defaultPack = name;\n  }\n\n  /**\n   * @param {string} name\n   * @returns {IconPack} pack by name\n   */\n  public getIconPack<T>(name: string): IconPack<T> {\n    return this.packs.get(name);\n  }\n\n  /**\n   * @param {string} name - icon name\n   * @param {string} pack - pack name\n   * @throws {Error} if requested icon pack is not registered\n   * @returns {RegisteredIcon} - registered icon of a requested/default pack\n   */\n  public getIcon<T>(name: string, pack?: string): RegisteredIcon<T> {\n    const iconsPack: IconPack<T> = pack ? this.getPackOrThrow(pack) : this.getDefaultPack();\n\n    return {\n      name,\n      pack: iconsPack.name,\n      icon: this.getIconFromPack(name, iconsPack),\n    };\n  }\n\n  /**\n   * Registers single icon pack\n   *\n   * @param {IconPack} pack - icon pack to register\n   */\n  protected registerIconPack<T>(pack: IconPack<T>) {\n    this.packs.set(pack.name, pack);\n  }\n\n  protected getPackOrThrow<T>(name: string): IconPack<T> {\n    const pack: IconPack<IconProps> = this.packs.get(name);\n\n    if (!pack) {\n      throwPackNotFoundError(name);\n    }\n\n    return pack;\n  }\n\n  protected getDefaultPack<T>(): IconPack<T> {\n    return this.getIconPack(this.defaultPack);\n  }\n\n  protected getIconFromPack<T>(name: string, pack: IconPack<T>, shouldThrow = true): IconProvider<T> {\n    if (shouldThrow && !pack.icons[name]) {\n      throwIconNotFoundError(name, pack.name);\n    }\n\n    return pack.icons[name];\n  }\n}\n\nexport const IconRegistryService = new RegistryService();\n","import React from 'react';\nimport {\n  Animated,\n  StyleProp,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  getIconAnimation,\n  IconAnimation,\n  IconAnimationRegistry,\n} from './iconAnimation';\nimport {\n  IconRegistryService,\n  RegisteredIcon,\n} from './service/iconRegistry.service';\nimport { AnimationConfig } from '../animation';\n\ninterface ComponentProps {\n  name: string;\n  pack?: string;\n  animation?: keyof IconAnimationRegistry;\n  animationConfig?: AnimationConfig;\n}\n\n// This is basically needed to avoid generics in required props\n// In general, could be SVGProps if using @ui-kitten/eva-icons or ImageProps if using Image.\ntype WrappedElementProps = any;\nexport type IconProps<T = WrappedElementProps> = ComponentProps & T;\nexport type IconElement<T = WrappedElementProps> = React.ReactElement<IconProps<T>>;\n\n/**\n * `Icon` component with animation support. Allows to render any ReactElement registered for a specific name.\n * Starting from UI Kitten 4.2, there is `@ui-kitten/eva-icons` module\n * that renders any icon from eva-icons package in `svg` format.\n * It allows easily use icons in any component that has `icon` prop\n *\n * @extends React.Component\n *\n * @method {(callback?: Animated.EndCallback) => void} startAnimation - Toggle animation to start.\n *\n * @method {() => void} stopAnimation - Toggle animation to stop.\n *\n * @property {string} name - Name of registered icon.\n *\n * @property {string} pack - Name of icon pack that is able to provide an icon for specified name.\n *\n * @property {string} animation - Animation name. Available `zoom`, `pulse` and `shake`. Default is `zoom`.\n *\n * @property {AnimationConfig} animationConfig - Determines animation config. Extends `Animated.AnimationConfig`.\n *\n * @overview-example IconSimpleUsage\n *\n * @overview-example IconWithinButton\n *\n * @overview-example IconWithinInput\n *\n * @overview-example IconExternalSource\n *\n * @overview-example IconAnimation\n *\n * @example IconAnimationInfinite\n *\n * @example IconInlineStyling\n */\nexport class Icon<T> extends React.Component<IconProps<T>> {\n\n  static defaultProps: Partial<IconProps> = {\n    animation: 'zoom',\n  };\n\n  private readonly animation: IconAnimation;\n\n  constructor(props: IconProps<T>) {\n    super(props);\n    this.animation = getIconAnimation(props.animation, props.animationConfig);\n  }\n\n  public componentWillUnmount(): void {\n    this.animation.release();\n  }\n\n  public startAnimation = (callback?: Animated.EndCallback): void => {\n    this.animation.start(callback);\n  };\n\n  public stopAnimation = (): void => {\n    this.animation.stop();\n  };\n\n  private getComponentStyle = (): StyleProp<ViewStyle> => {\n    return this.animation.toProps();\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { name, pack, ...restProps } = this.props;\n    const registeredIcon: RegisteredIcon<T> = IconRegistryService.getIcon(name, pack);\n\n    return (\n      <Animated.View {...this.getComponentStyle()}>\n        {registeredIcon.icon.toReactElement(restProps as T)}\n      </Animated.View>\n    );\n  }\n}\n","import { ViewStyle } from 'react-native';\nimport {\n  Animation,\n  PulseAnimation,\n  ShakeAnimation,\n  ZoomAnimation,\n  AnimationConfig,\n} from '../animation';\n\nexport type IconAnimation = Animation<any, ViewStyle>;\n\nexport interface IconAnimationRegistry {\n  zoom: IconAnimation;\n  pulse: IconAnimation;\n  shake: IconAnimation;\n}\n\nexport function getIconAnimation(animation?: keyof IconAnimationRegistry, config?: AnimationConfig): IconAnimation {\n  switch (animation) {\n    case 'zoom':\n      return new ZoomAnimation(config);\n    case 'pulse':\n      return new PulseAnimation(config);\n    case 'shake':\n      return new ShakeAnimation(config);\n  }\n}\n","import React from 'react';\nimport { IconRegistryService } from './service/iconRegistry.service';\nimport { IconPack } from './service/type';\n\ntype IconsProp = IconPack<any> | IconPack<any>[];\n\nexport interface IconRegistryProps {\n  icons: IconsProp;\n  defaultIcons?: string;\n}\n\nexport type IconRegistryElement = React.ReactElement<IconRegistryProps>;\n\n/**\n * Icon Registry component. Registers one or more icon packs for later usage in `<Icon/>` component.\n * Renders nothing, but should be added as a child of an Application Root.\n *\n * @extends React.Component\n *\n * @property {IconPack<any> | IconPack<any>[]} icons - Icon packs to register.\n * @property {string} defaultIcons - Name of an icon pack that is used by default.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { mapping, light as lightTheme } from '@eva-design/eva';\n * import { ApplicationProvider, IconRegistry, Layout, Text } from 'react-native-ui-kitten';\n * import { EvaIconsPack } from '@ui-kitten/eva-icons'; // <-- Make sure it is installed. npm i @ui-kitten/eva-icons\n *\n * export default class App extends React.Component {\n *   render() {\n *     return (\n *       <React.Fragment>\n *         <IconRegistry icons={EvaIconsPack}/>\n *         <ApplicationProvider mapping={mapping} theme={lightTheme}>\n *           <Layout style={{flex: 1, justifyContent: 'center', alignItems: 'center'}}>\n *             <Text>Welcome to UI Kitten</Text>\n *           </Layout>\n *         </ApplicationProvider>\n *       <React.Fragment>\n *     );\n *   }\n * }\n * ```\n */\nexport class IconRegistry extends React.Component<IconRegistryProps> {\n\n  static defaultProps: Partial<IconRegistryProps> = {\n    icons: [],\n  };\n\n  private findDefaultIconPack = (packs: IconPack<any>[], name: string): IconPack<any> => {\n    const requestedPackIndex: number = packs.findIndex((pack: IconPack<any>): boolean => {\n      return pack.name === name;\n    });\n\n    return packs[Math.max(0, requestedPackIndex)];\n  };\n\n  private registerIcons = (source: IconsProp, defaultPack: string): void => {\n    const packs: IconPack<any>[] = Array.isArray(source) ? source : [source];\n    const defaultIconPack: IconPack<any> = this.findDefaultIconPack(packs, defaultPack);\n\n    IconRegistryService.register(...packs);\n    IconRegistryService.setDefaultIconPack(defaultIconPack.name);\n  };\n\n  public render(): React.ReactNode {\n    const { icons, defaultIcons } = this.props;\n    this.registerIcons(icons, defaultIcons);\n\n    return null;\n  }\n}\n","export const TextStyleProps: string[] = [\n\n  // TextStyle\n\n  'color',\n  'fontFamily',\n  'fontSize',\n  'fontStyle',\n  'fontWeight',\n  'letterSpacing',\n  'lineHeight',\n  'textAlign',\n  'textAlign',\n  'textDecorationLine',\n  'textDecorationStyle',\n  'textDecorationColor',\n  'textShadowColor',\n  'textShadowColor',\n  'textShadowOffset',\n  'textShadowRadius',\n\n  // TextStyleIOS\n\n  'textTransform',\n  'writingDirection',\n\n  // TextStyleAndroid\n\n  'textAlignVertical',\n  'includeFontPadding',\n];\n\nexport const FlexStyleProps: string[] = [\n  'alignContent',\n  'alignItems',\n  'alignSelf',\n  'aspectRatio',\n  'borderBottomWidth',\n  'borderEndWidth',\n  'borderLeftWidth',\n  'borderRightWidth',\n  'borderStartWidth',\n  'borderTopWidth',\n  'borderWidth',\n  'bottom',\n  'display',\n  'end',\n  'flex',\n  'flexBasis',\n  'flexDirection',\n  'flexGrow',\n  'flexShrink',\n  'flexWrap',\n  'height',\n  'justifyContent',\n  'left',\n  'margin',\n  'marginBottom',\n  'marginEnd',\n  'marginHorizontal',\n  'marginLeft',\n  'marginRight',\n  'marginStart',\n  'marginTop',\n  'marginVertical',\n  'maxHeight',\n  'maxWidth',\n  'minHeight',\n  'minWidth',\n  'overflow',\n  'padding',\n  'paddingBottom',\n  'paddingEnd',\n  'paddingHorizontal',\n  'paddingLeft',\n  'paddingRight',\n  'paddingStart',\n  'paddingTop',\n  'paddingVertical',\n  'position',\n  'right',\n  'start',\n  'top',\n  'width',\n  'zIndex',\n\n  // ios\n\n  'direction',\n];\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextInput,\n  TextInputProps,\n  TextStyle,\n  TouchableWithoutFeedback,\n  TouchableWithoutFeedbackProps,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport {\n  allWithRest,\n  isValidString,\n} from '../support/services';\nimport {\n  FlexStyleProps,\n  InputFocusEvent,\n} from '../support/typings';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: StyleType) => IconElement;\n\ninterface ComponentProps {\n  status?: string;\n  size?: string;\n  disabled?: boolean;\n  label?: string;\n  caption?: string;\n  captionIcon?: IconProp;\n  icon?: IconProp;\n  textStyle?: StyleProp<TextStyle>;\n  labelStyle?: StyleProp<TextStyle>;\n  captionTextStyle?: StyleProp<TextStyle>;\n  onIconPress?: (event: GestureResponderEvent) => void;\n}\n\nexport type InputProps = StyledComponentProps & TextInputProps & ComponentProps;\nexport type InputElement = React.ReactElement<InputProps>;\n\n/**\n * Styled `Input` component.\n *\n * @extends React.Component\n *\n * @method {() => void} focus - Requests focus for the given input or view. The exact behavior triggered\n * will depend on the platform and type of view.\n *\n * @method {() => void} blur - Removes focus from an input or view. This is the opposite of `focus()`.\n *\n * @method {() => boolean} isFocused - Returns if the input is currently focused.\n *\n * @method {() => void} clear - Removes all text from the input.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning` or `danger`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `large`, `medium` or `small`.\n * Default is `medium`.\n *\n * @property {string} label - Determines label of the component.\n *\n * @property {StyleProp<TextStyle>} labelStyle - Customizes label style.\n *\n * @property {string} caption - Determines caption of the component.\n *\n * @property {StyleProp<TextStyle>} captionStyle - Customizes caption style.\n *\n * @property {string} placeholder - Determines placeholder of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} captionIcon - Determines caption icon.\n *\n * @property TextInputProps - Any props applied to TextInput component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example InputSimpleUsage\n *\n * @overview-example InputStatus\n *\n * @overview-example InputSize\n *\n * @overview-example InputWithIcon\n *\n * @overview-example InputWithLabel\n *\n * @overview-example InputWithCaption\n *\n * @example InputInlineStyling\n *\n * @example InputWithExternalSourceIcon\n */\nexport class InputComponent extends React.Component<InputProps> {\n\n  static styledComponentName: string = 'Input';\n\n  private textInputRef: React.RefObject<TextInput> = React.createRef();\n\n  public focus = (): void => {\n    this.textInputRef.current.focus();\n  };\n\n  public blur = (): void => {\n    this.textInputRef.current.blur();\n  };\n\n  public isFocused = (): boolean => {\n    return this.textInputRef.current.isFocused();\n  };\n\n  public clear = (): void => {\n    this.textInputRef.current.clear();\n  };\n\n  private onTextFieldFocus = (event: InputFocusEvent): void => {\n    this.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus(event);\n    }\n  };\n\n  private onTextFieldBlur = (event: InputFocusEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur(event);\n    }\n  };\n\n  private onIconPress = (event: GestureResponderEvent): void => {\n    if (this.props.onIconPress) {\n      this.props.onIconPress(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const flatStyles: ViewStyle = StyleSheet.flatten(this.props.style);\n    const { rest: inputContainerStyle, ...containerStyle } = allWithRest(flatStyles, FlexStyleProps);\n\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      placeholderColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      labelColor,\n      labelFontSize,\n      labelLineHeight,\n      labelMarginBottom,\n      labelFontWeight,\n      captionMarginTop,\n      captionColor,\n      captionFontSize,\n      captionLineHeight,\n      captionFontWeight,\n      captionIconWidth,\n      captionIconHeight,\n      captionIconMarginRight,\n      captionIconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerStyle,\n      inputContainer: {\n        ...containerParameters,\n        ...inputContainerStyle,\n      },\n      captionContainer: {\n        marginTop: captionMarginTop,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        // FIXME: RN issue (https://github.com/facebook/react-native/issues/7823)\n        // lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      placeholder: {\n        color: placeholderColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      label: {\n        color: labelColor,\n        fontSize: labelFontSize,\n        lineHeight: labelLineHeight,\n        marginBottom: labelMarginBottom,\n        fontWeight: labelFontWeight,\n      },\n      captionIcon: {\n        width: captionIconWidth,\n        height: captionIconHeight,\n        tintColor: captionIconTintColor,\n        marginRight: captionIconMarginRight,\n      },\n      captionLabel: {\n        fontSize: captionFontSize,\n        fontWeight: captionFontWeight,\n        lineHeight: captionLineHeight,\n        color: captionColor,\n      },\n    };\n  };\n\n  private renderIconTouchableElement = (style: StyleType): React.ReactElement<TouchableWithoutFeedbackProps> => {\n    const iconElement: IconElement = this.renderIconElement(style);\n\n    return (\n      <TouchableWithoutFeedback onPress={this.onIconPress}>\n        {iconElement}\n      </TouchableWithoutFeedback>\n    );\n  };\n\n  private renderIconElement = (style: StyleType): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderLabelElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={1}\n        style={[style, styles.label, this.props.labelStyle]}>\n        {this.props.label}\n      </Text>\n    );\n  };\n\n  private renderCaptionElement = (style: TextStyle): TextElement => {\n    return (\n      <Text\n        key={2}\n        style={[style, styles.captionLabel, this.props.captionTextStyle]}>\n        {this.props.caption}\n      </Text>\n    );\n  };\n\n  private renderCaptionIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.captionIcon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 3,\n      style: [style, styles.captionIcon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon, label, captionIcon, caption } = this.props;\n\n    return [\n      icon && this.renderIconTouchableElement(style.icon),\n      isValidString(label) && this.renderLabelElement(style.label),\n      isValidString(caption) && this.renderCaptionElement(style.captionLabel),\n      captionIcon && this.renderCaptionIconElement(style.captionIcon),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, textStyle, ...restProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const [\n      iconElement,\n      labelElement,\n      captionElement,\n      captionIconElement,\n    ] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View style={[componentStyle.container, styles.container]}>\n        {labelElement}\n        <View\n          style={[componentStyle.inputContainer, styles.inputContainer]}>\n          <TextInput\n            ref={this.textInputRef}\n            {...restProps}\n            style={[componentStyle.text, styles.text, textStyle]}\n            placeholderTextColor={componentStyle.placeholder.color}\n            editable={!restProps.disabled}\n            onFocus={this.onTextFieldFocus}\n            onBlur={this.onTextFieldBlur}\n          />\n          {iconElement}\n        </View>\n        <View style={[componentStyle.captionContainer, styles.captionContainer]}>\n          {captionIconElement}\n          {captionElement}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  inputContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    width: '100%',\n  },\n  captionContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  text: {\n    flexGrow: 1,\n    flexShrink: 1,\n    flexBasis: 'auto',\n  },\n  placeholder: {},\n  icon: {},\n  label: {\n    textAlign: 'left',\n  },\n  captionIcon: {},\n  captionLabel: {\n    textAlign: 'left',\n  },\n});\n\nexport const Input = styled<InputProps>(InputComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Input as RNInput,\n  InputElement as RNInputElement,\n  InputProps as RNInputProps,\n  // @ts-ignore\n} from './input.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type InputProps = RNInputProps & WebEventResponderCallbacks;\nexport type InputElement = React.ReactElement<InputProps>;\n\nexport class Input extends React.Component<InputProps> implements WebEventResponderCallbacks {\n\n  private inputRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.inputRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.inputRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNInputElement {\n    const { textStyle, ...restProps } = this.props;\n\n    return (\n      <RNInput\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.inputRef}\n        textStyle={[textStyle, styles.text]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n} from '@kitten/theme';\n\ninterface ComponentProps {\n  level?: string;\n  children?: React.ReactNode;\n}\n\nexport type LayoutProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type LayoutElement = React.ReactElement<LayoutProps>;\n\n/**\n * `Layout` container component. Behaves like React Native `View`.\n * The key feature of using `Layout` instead of `View` is that\n * it automatically picks background color fitting to current theme.\n *\n * @extends React.Component\n *\n * @property {string} level - Determines background color level of component.\n * Can be `level='1'`, `level='2'`, `level='3'` or `level='4'`.\n *\n * @property {React.ReactElement<any> | React.ReactElement<any>[]} children - Determines the children of the component.\n *\n * @property ViewProps - Any props applied to View component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example LayoutSimpleUsage\n *\n * @overview-example LayoutLevel\n *\n * @example LayoutInlineStyling\n */\nexport class LayoutComponent extends React.Component<LayoutProps> {\n\n  static styledComponentName: string = 'Layout';\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, themedStyle, ...derivedProps } = this.props;\n\n    return (\n      <View\n        {...derivedProps}\n        style={[themedStyle, style]}\n      />\n    );\n  }\n}\n\nexport const Layout = styled<LayoutProps>(LayoutComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleSheet,\n  Dimensions,\n  ViewStyle,\n  StyleProp,\n} from 'react-native';\nimport {\n  ModalService,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  MeasureNode,\n  MeasureNodeProps,\n  MeasuringElementProps,\n  MeasureResult,\n} from '../popover/measure.component';\nimport { Size } from '../popover/type';\nimport { ModalPresentingBased } from '../support/typings';\n\nconst initialWindowSize: Size = Dimensions.get('screen');\nconst TAG_CHILD: string = 'Modal';\nconst initialContentSize: Size = { width: 0, height: 0 };\nexport const baseModalTestId: string = '@modal/base';\n\ntype ChildElement = React.ReactElement<any>;\ntype ChildrenProp = ChildElement | ChildElement[];\n\ninterface ComponentProps {\n  visible: boolean;\n  children: ChildrenProp;\n  backdropStyle?: StyleProp<ViewStyle>;\n}\n\nexport type ModalProps = ViewProps & ComponentProps & ModalPresentingBased;\nexport type ModalElement = React.ReactElement<ModalProps>;\n\n/**\n * `Modal` component is a wrapper than presents content above an enclosing view.\n *\n * @extends React.Component\n *\n * @property {boolean} visible - Determines whether component is visible. By default is false.\n *\n * @property {React.ReactElement<any> | React.ReactElement<any>[]} children -\n * Determines component's children.\n *\n * @property {boolean} allowBackdrop - Determines whether user can tap on back-drop.\n * Default is `false`.\n *\n * @property {StyleProp<ViewStyle>} backdropStyle - Determines the style of backdrop.\n *\n * @property {() => void} onBackdropPress - Determines component's behavior when the user is\n * tapping on back-drop.\n *\n * @property {ViewProps} - Any props applied to View component.\n *\n * @overview-example Simple Usage\n *\n * ```\n * import React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Button, Modal, Text, Layout } from 'react-native-ui-kitten';\n *\n * export class ModalShowcase extends React.Component {\n *\n *   state = {\n *     modalVisible: false,\n *   };\n *\n *   setModalVisible = () => {\n *     const modalVisible = !this.state.modalVisible;\n *     this.setState({ modalVisible });\n *   };\n *\n *   renderModalElement = () => {\n *     return (\n *       <Layout\n *         level='3'\n *         style={styles.modalContainer}>\n *         <Text>This is modal</Text>\n *         <Button onPress={this.setModalVisible}>Hide Modal</Button>\n *       </Layout>\n *     );\n *   };\n *\n *   render() {\n *     return (\n *       <Layout style={styles.container}>\n *         <Button onPress={this.setModalVisible}>Show Modal</Button>\n *         <Modal visible={this.state.modalVisible}>\n *           {this.renderModalElement()}\n *         </Modal>\n *       </Layout>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     padding: 16,\n *   },\n *   modalContainer: {\n *     width: 200,\n *     height: 200,\n *     justifyContent: 'center',\n *     alignItems: 'center',\n *   },\n * });\n * ```\n *\n * @overview-example With Backdrop\n *\n * ```\n * import React from 'react';\n * import { StyleSheet } from 'react-native';\n * import { Button, Modal, Text, Layout } from 'react-native-ui-kitten';\n *\n * export class ModalShowcase extends React.Component {\n *\n *   state = {\n *     modalVisible: false,\n *   };\n *\n *   setModalVisible = () => {\n *     const modalVisible: boolean = !this.state.modalVisible;\n *     this.setState({ modalVisible });\n *   };\n *\n *   renderModalElement = () => {\n *     return (\n *       <Layout\n *         level='3'\n *         style={styles.modalContainer}>\n *         <Text>This is modal</Text>\n *         <Button onPress={this.setModalVisible}>Hide Modal</Button>\n *       </Layout>\n *     );\n *   };\n *\n *   render() {\n *     return (\n *       <Layout style={styles.container}>\n *         <Button onPress={this.setModalVisible}>Show Modal</Button>\n *         <Modal\n *           allowBackdrop={true}\n *           backdropStyle={{ backgroundColor: 'black', opacity: 0.5 }}\n *           onBackdropPress={this.setModalVisible}\n *           visible={this.state.modalVisible}>\n *           {this.renderModalElement()}\n *         </Modal>\n *       </View>\n *     );\n *   }\n * }\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     padding: 16,\n *   },\n *   modalContainer: {\n *     width: 200,\n *     height: 200,\n *     justifyContent: 'center',\n *     alignItems: 'center',\n *   },\n * });\n * ```\n */\nexport class Modal extends React.Component<ModalProps> {\n\n  static defaultProps: Partial<ModalProps> = {\n    allowBackdrop: false,\n    onBackdropPress: () => null,\n  };\n\n  private contentSize: Size = initialContentSize;\n  private id: string = '';\n\n  public componentDidUpdate(prevProps: ModalProps): void {\n    if (prevProps.visible !== this.props.visible) {\n      this.handleVisibility(this.props);\n    } else if (prevProps.visible && this.props.visible) {\n      const element: React.ReactElement = this.renderModal();\n      ModalService.update(this.id, element.props.children);\n    }\n  }\n\n  private handleVisibility = (props: ModalProps): void => {\n    const { allowBackdrop, onBackdropPress } = this.props;\n\n    if (props.visible) {\n      const element: React.ReactElement = this.renderModal();\n      this.id = ModalService.show(element, { allowBackdrop, onBackdropPress });\n    } else {\n      ModalService.hide(this.id);\n      this.id = '';\n    }\n  };\n\n  private getAbsoluteRelatedStyle = (): StyleType => {\n    const windowSize: Size = Dimensions.get('window');\n\n    return {\n      top: (windowSize.height - this.contentSize.height) / 2,\n      left: (windowSize.width - this.contentSize.width) / 2,\n    };\n  };\n\n  private onMeasure = (result: MeasureResult): void => {\n    this.contentSize = result[TAG_CHILD].size;\n  };\n\n  private renderBaseModal = (): React.ReactElement<ViewProps> => {\n    const { style, children, ...restProps } = this.props;\n    const absoluteRelatedStyle: StyleType = this.getAbsoluteRelatedStyle();\n    const measuringProps: MeasuringElementProps = { tag: TAG_CHILD };\n\n    return (\n      <View\n        {...restProps}\n        {...measuringProps}\n        testID={baseModalTestId}\n        key={TAG_CHILD}\n        style={[styles.container, absoluteRelatedStyle, style]}>\n        {children}\n      </View>\n    );\n  };\n\n  private renderModal = (): React.ReactElement => {\n    const { backdropStyle } = this.props;\n    const modal: React.ReactElement<ViewProps> = this.renderBaseModal();\n\n    return backdropStyle ? (\n      <React.Fragment>\n        <View\n          pointerEvents='box-none'\n          style={[styles.backdrop, backdropStyle]}/>\n        {modal}\n      </React.Fragment>\n    ) : modal;\n  };\n\n  private renderMeasureNode = (): React.ReactElement<MeasureNodeProps> => {\n    const modal: React.ReactElement = this.renderBaseModal();\n    const measureStyledModal: React.ReactElement = React.cloneElement(modal, {\n      style: [modal.props.style, styles.hiddenModal],\n      key: TAG_CHILD,\n      pointerEvents: 'none',\n    });\n\n    return (\n      <MeasureNode onResult={this.onMeasure}>\n        {[measureStyledModal]}\n      </MeasureNode>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return this.renderMeasureNode();\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    position: 'absolute',\n  },\n  backdrop: {\n    position: 'absolute',\n    width: initialWindowSize.width,\n    height: initialWindowSize.height,\n  },\n  hiddenModal: {\n    opacity: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Menu,\n  MenuElement,\n  MenuProps,\n} from '../menu/menu.component';\nimport { MenuItemType } from '../menu/menuItem.component';\nimport {\n  Popover,\n  PopoverElement,\n  PopoverProps,\n} from '../popover/popover.component';\nimport {\n  ModalPresentingBased,\n  Override,\n} from '../support/typings';\n\ntype PopoverContentProps = Omit<PopoverProps, 'content'>;\nexport type OverflowMenuItemType = Omit<MenuItemType, 'subItems'>;\n\ninterface ComponentProps extends PopoverContentProps, ModalPresentingBased {\n  children: React.ReactElement<any>;\n}\n\ntype MenuBasedProps = Override<MenuProps, { data: OverflowMenuItemType[] }>;\n\nexport type OverflowMenuProps = & StyledComponentProps & ComponentProps & MenuBasedProps;\nexport type OverflowMenuElement = React.ReactElement<OverflowMenuProps>;\n\n/**\n * `OverflowMenu` renders vertical list of menu items in a modal.\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<any>} children - Determines the element above\n * which the menu will be rendered.\n *\n * @property {boolean} visible - determines the visibility of the component.\n *\n * @property {OverflowMenuItemType[]} data - Determines menu items.\n *\n * @property {number} selectedIndex - Determines the index of currently selected item.\n *\n * @property {(index: number, event: GestureResponderEvent) => void} onSelect - Fires when selected item is changed.\n *\n * @property Omit<PopoverProps, 'content'> - Any props applied to Popover component, excluding `content`.\n *\n * @property Override<MenuProps, { data: OverflowMenuItemType[] }> - Any props applied to Menu component.\n *\n * @property ModalPresentingBased - Any props applied to Modal component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example OverflowMenuSimpleUsage\n *\n * @overview-example OverflowMenuWithIcons\n *\n * @example OverflowMenuWithDisabledItems\n *\n * @example OverflowMenuWithoutDivider\n *\n * @example OverflowMenuExternalSourceIcons\n */\nclass OverflowMenuComponent extends React.Component<OverflowMenuProps> {\n\n  static styledComponentName: string = 'OverflowMenu';\n\n  static defaultProps: Partial<OverflowMenuProps> = {\n    indicatorOffset: 12,\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private renderPopoverContentElement = (style: StyleType): MenuElement => {\n    const { themedStyle, indicatorStyle, children, data, ...restProps } = this.props;\n\n    return (\n      <Menu\n        {...restProps}\n        data={data}\n        style={[styles.menu, style]}\n        initialNumToRender={data.length}\n        bounces={false}\n      />\n    );\n  };\n\n  public render(): PopoverElement {\n    const { themedStyle, style, indicatorStyle, children, appearance, ...restProps } = this.props;\n    const { container, indicator } = this.getComponentStyle(themedStyle);\n\n    const contentElement: MenuElement = this.renderPopoverContentElement(container);\n\n    return (\n      <Popover\n        {...restProps}\n        style={[styles.container, style]}\n        indicatorStyle={[indicator, indicatorStyle]}\n        content={contentElement}>\n        {children}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n  menu: {\n    flexGrow: 0,\n  },\n});\n\nexport const OverflowMenu = styled<OverflowMenuProps>(OverflowMenuComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  Insets,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n  View,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ninterface ComponentProps {\n  textStyle?: StyleProp<TextStyle>;\n  text?: string;\n  checked?: boolean;\n  status?: string;\n  onChange?: (selected: boolean) => void;\n}\n\nexport type RadioProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type RadioElement = React.ReactElement<RadioProps>;\n\n/**\n * Styled `Radio` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning`, `danger`, basic` or `control`.\n * Default is `basic`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(selected: boolean) => void} onChange - Triggered on onChange value.\n *\n * @property TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example RadioSimpleUsage\n *\n * @overview-example RadioStatus\n *\n * @overview-example RadioWithText\n *\n * @example RadioInlineStyling\n */\nexport class RadioComponent extends React.Component<RadioProps> {\n\n  static styledComponentName: string = 'Radio';\n\n  private onPress = (): void => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginHorizontal,\n      textFontFamily,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconBorderRadius,\n      iconTintColor,\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: {},\n      highlightContainer: {},\n      selectContainer: containerParameters,\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        borderRadius: iconBorderRadius,\n        backgroundColor: iconTintColor,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (style: StyleProp<ViewStyle>): Insets => {\n    const flatStyle: ViewStyle = StyleSheet.flatten(style);\n\n    // @ts-ignore `width` is restricted to be a number\n    const value: number = 40 - flatStyle.width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text\n        key={0}\n        style={[style, styles.text, textStyle]}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { text } = this.props;\n\n    return [\n      isValidString(text) && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { style, themedStyle, disabled, ...derivedProps } = this.props;\n\n    const {\n      container,\n      highlightContainer,\n      selectContainer,\n      icon,\n      highlight,\n      ...componentStyles\n    } = this.getComponentStyle(themedStyle);\n\n    const selectContainerStyle: StyleProp<ViewStyle> = [selectContainer, styles.selectContainer];\n    const hitSlopInsets: Insets = this.createHitSlopInsets(selectContainerStyle);\n\n    const [textElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        disabled={disabled}\n        hitSlop={hitSlopInsets}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        <View style={[highlightContainer, styles.highlightContainer]}>\n          <View style={[highlight, styles.highlight]}/>\n          <View style={selectContainerStyle}>\n            <View style={[icon, styles.icon]}/>\n          </View>\n        </View>\n        {textElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  highlightContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  selectContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  icon: {},\n  highlight: {\n    position: 'absolute',\n  },\n  text: {},\n});\n\nexport const Radio = styled<RadioProps>(RadioComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Radio as RNRadio,\n  RadioElement as RNRadioElement,\n  RadioProps as RNRadioProps,\n  // @ts-ignore\n} from './radio.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type RadioProps = RNRadioProps & WebEventResponderCallbacks;\nexport type RadioElement = React.ReactElement<RadioProps>;\n\nexport class Radio extends React.Component<RadioProps> implements WebEventResponderCallbacks {\n\n  private radioRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.radioRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.radioRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.radioRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.radioRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNRadioElement {\n    const { textStyle, ...restProps } = this.props;\n\n    return (\n      <RNRadio\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        style={[textStyle, styles.element]}\n        ref={this.radioRef}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { RadioElement } from '../radio/radio.component';\n\ntype ChildrenProp = RadioElement | RadioElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  onChange?: (index: number) => void;\n}\n\nexport type RadioGroupProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type RadioGroupElement = React.ReactElement<RadioGroupProps>;\n\n/**\n * Renders a group of `Radio` buttons.\n *\n * @extends React.Component\n *\n * @property {React.ReactElement<RadioProps> | React.ReactElement<RadioProps>[]} children -\n * Determines radio buttons in group.\n *\n * @property {number} selectedIndex - Determines the index of selected button\n *\n * @property {(index: number) => void} onChange - Fires when selected radio is changed.\n *\n * @property ViewProps - Any props applied to View component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example RadioGroupSimpleUsage\n */\nclass RadioGroupComponent extends React.Component<RadioGroupProps> {\n\n  static styledComponentName: string = 'RadioGroup';\n\n  static defaultProps: Partial<RadioGroupProps> = {\n    selectedIndex: -1,\n  };\n\n  private onRadioChange = (index: number): void => {\n    if (this.props.onChange) {\n      this.props.onChange(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    return {\n      container: source,\n    };\n  };\n\n  private renderRadioElement = (element: RadioElement, index: number): RadioElement => {\n    return React.cloneElement(element, {\n      key: index,\n      checked: this.props.selectedIndex === index,\n      onChange: () => this.onRadioChange(index),\n    });\n  };\n\n  private renderRadioElements = (source: RadioElement | RadioElement[]): RadioElement[] => {\n    return React.Children.map(source, this.renderRadioElement);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const radioElements: RadioElement[] = this.renderRadioElements(children);\n\n    return (\n      <View\n        {...derivedProps}\n        style={[componentStyle.container, styles.container, style]}>\n        {radioElements}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n});\n\nexport const RadioGroup = styled<RadioGroupProps>(RadioGroupComponent);\n","import {\n  Animated,\n  Easing,\n  EasingFunction,\n  ViewStyle,\n} from 'react-native';\nimport {\n  Animation,\n  AnimationConfig,\n} from '../animation/animation';\n\nconst PI: number = 180;\nconst PI2: number = 360;\nconst OFFSET_MIN: number = PI / 12;\nconst OFFSET_MAX: number = PI / 6;\n\nconst BaseBezierEasing: EasingFunction = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n\nconst StartArcEasing: EasingFunction = (progress: number): number => {\n  return -PI + OFFSET_MIN + (PI - OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst EndArcEasing: EasingFunction = (progress: number): number => {\n  return PI2 - OFFSET_MIN + (-PI + OFFSET_MAX) * BaseBezierEasing(progress);\n};\n\nconst DEFAULT_CONFIG: SpinnerAnimationConfig = {\n  duration: 2400,\n  easing: Easing.linear,\n  cycles: -1,\n};\n\ntype TimingAnimationConfig = Omit<Animated.TimingAnimationConfig, 'toValue'>;\n\nexport interface SpinnerAnimationStyle {\n  container: ViewStyle;\n  start: ViewStyle;\n  end: ViewStyle;\n}\n\nexport type SpinnerAnimationConfig = AnimationConfig & TimingAnimationConfig;\n\n/**\n * Animates a Spinner in a Material Design way.\n *\n * Thanks these guys for open sourcing the algorithm: https://github.com/n4kz/react-native-indicators\n */\nexport class SpinnerAnimation extends Animation<SpinnerAnimationConfig, SpinnerAnimationStyle> {\n\n  private animationValue: Animated.Value;\n  private animationFrames: number[];\n  private arcSize: number;\n\n  protected get animation(): Animated.CompositeAnimation {\n    return Animated.timing(this.animationValue, { toValue: 1.0, ...this.config });\n  }\n\n  constructor(arcSize: number, config?: SpinnerAnimationConfig) {\n    super({ ...DEFAULT_CONFIG, ...config });\n    this.arcSize = arcSize;\n    this.animationValue = new Animated.Value(0);\n    this.animationFrames = this.createFrameRange(this.config.duration);\n  }\n\n  public start(callback?: Animated.EndCallback) {\n    // reset animation value before the next animation cycle\n    this.animationValue.setValue(0);\n    super.start(callback);\n  }\n\n  public stop() {\n    super.stop();\n    this.animationValue.setValue(0);\n  }\n\n  /**\n   * @returns {SpinnerAnimationStyle} - an object that contains container, start and end arcs transform styles.\n   */\n  public toProps(): SpinnerAnimationStyle {\n    const containerInterpolation: Animated.AnimatedInterpolation = this.createContainerInterpolation();\n    const startArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(StartArcEasing);\n    const endArcInterpolation: Animated.AnimatedInterpolation = this.createArcInterpolation(EndArcEasing);\n\n    return {\n      container: this.toStyleTransformProp(containerInterpolation),\n      start: this.toStyleTransformProp(startArcInterpolation),\n      end: this.toStyleTransformProp(endArcInterpolation, {\n        transform: [{ translateY: -this.arcSize / 2 }],\n      }),\n    };\n  }\n\n  /**\n   * @param {number} duration - animation duration.\n   * @returns an array of frames fitted into animation.\n   */\n  private createFrameRange = (duration: number): number[] => {\n    const numberOfFrames: number = 60 * duration / 1000;\n\n    return new Array(numberOfFrames).fill(0);\n  };\n\n  private createContainerInterpolation = (): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: [0, 1],\n      outputRange: [\n        this.toDegValue(OFFSET_MAX + OFFSET_MIN),\n        this.toDegValue((2 * PI2 + OFFSET_MAX + OFFSET_MIN)),\n      ],\n    });\n  };\n\n  private createArcInterpolation = (easing: EasingFunction): Animated.AnimatedInterpolation => {\n    return this.animationValue.interpolate({\n      inputRange: this.createArcInterpolationInputRange(),\n      outputRange: this.createArcInterpolationOutputRange(easing),\n    });\n  };\n\n  /**\n   * Maps the animation frames into initial animation values specific for each frame.\n   *\n   * @returns a container interpolation input range in a numeric format.\n   */\n  private createArcInterpolationInputRange = (): number[] => {\n    return this.animationFrames.map((item: number, frame: number): number => {\n      return frame / (this.animationFrames.length - 1);\n    });\n  };\n\n  /**\n   * Maps the animation frames into a final animation values specific for each frame.\n   *\n   * @param {(progress: number) => number} easing - Easing function specific for the arc.\n   * @returns an arc interpolation end values eased with an `easing` function in a StyleSheet degree format.\n   */\n  private createArcInterpolationOutputRange = (easing: EasingFunction): string[] => {\n    return this.animationFrames.map((item: number, frame: number): string => {\n      const progress: number = 2 * frame / (this.animationFrames.length - 1);\n      const boundedProgress: number = Math.min(2.0 - progress, progress);\n\n      return this.toDegValue(easing(boundedProgress));\n    });\n  };\n\n  /**\n   * @param {Animated.AnimatedInterpolation} rotate - animated rotation animationValue.\n   * @param {ViewStyle} source - initial StyleSheet object.\n   * @returns a final StyleSheet object with a `rotate` animation value.\n   */\n  private toStyleTransformProp = (rotate: Animated.AnimatedInterpolation, source: ViewStyle = {}): ViewStyle => {\n    const transform = [...(source.transform || []), { rotate }];\n\n    // @ts-ignore: AnimatedInterpolation does not fit RotateTransform type declaration\n    return { ...source, transform };\n  };\n\n  /**\n   * @param {number} source - degrees in a numeric format.\n   * @returns degrees in a StyleSheet format.\n   */\n  private toDegValue = (source: number): string => {\n    return `${source}deg`;\n  };\n}\n","import React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  SpinnerAnimation,\n  SpinnerAnimationStyle,\n} from './animation';\n// TODO: Frame, Point, Size types should be refactored to common types\nimport { Size } from '../popover/type';\n\ninterface ArcElementStyle {\n  container: ViewStyle;\n  arc: ViewStyle;\n  overflow?: ViewStyle;\n}\n\ninterface ComponentProps extends ViewProps {\n  animating?: boolean;\n  size?: string;\n  status?: string;\n}\n\nexport type SpinnerProps = StyledComponentProps & ComponentProps;\nexport type SpinnerElement = React.ReactElement<SpinnerProps>;\n\n/**\n * Styled `Spinner` component. Designed to be used as `ActivityIndicator` component\n *\n * @extends React.Component\n *\n * @property {boolean} animating - Determines whether component is animating. Default is `true`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `giant`, `large`, `medium`, `small` or `tiny`.\n * Default is `medium`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning`, `danger` or `alternative`.\n * Default is `primary`.\n *\n * @overview-example SpinnerSimpleUsage\n *\n * @overview-example SpinnerSizes\n *\n * @overview-example SpinnerStatuses\n *\n * @example SpinnerDataLoading\n */\nexport class SpinnerComponent extends React.PureComponent<SpinnerProps> {\n\n  static styledComponentName: string = 'Spinner';\n\n  static defaultProps: Partial<SpinnerProps> = {\n    animating: true,\n  };\n\n  private animation: SpinnerAnimation = new SpinnerAnimation(this.containerSize.height);\n\n  private get containerSize(): Size {\n    const { width, height } = StyleSheet.flatten([this.props.themedStyle, this.props.style]);\n    // @ts-ignore: width and height are restricted to be a number\n    return new Size(width, height);\n  }\n\n  public componentDidMount(): void {\n    if (this.props.animating) {\n      this.startAnimation();\n    }\n  }\n\n  public componentDidUpdate(prevProps: SpinnerProps): void {\n    const animatingChanged: boolean = this.props.animating !== prevProps.animating;\n\n    if (animatingChanged && this.props.animating) {\n      this.startAnimation();\n    }\n\n    if (animatingChanged && !this.props.animating) {\n      this.stopAnimation();\n    }\n  }\n\n  public componentWillUnmount(): void {\n    this.animation.release();\n  }\n\n  private startAnimation = (): void => {\n    this.animation.start();\n  };\n\n  private stopAnimation = (): void => {\n    this.animation.stop();\n  };\n\n  private getComponentStyle = (source: SpinnerAnimationStyle): StyleType => {\n    const start: ArcElementStyle = {\n      container: source.container,\n      arc: source.start,\n    };\n\n    const end: ArcElementStyle = {\n      container: source.container,\n      arc: source.end,\n      overflow: { top: this.containerSize.height / 2 },\n    };\n\n    return { start, end };\n  };\n\n  private renderArcElement = (style: ArcElementStyle, size: Size): React.ReactElement<ViewProps> => {\n    const arcSize: Size = new Size(size.width, size.height / 2);\n\n    return (\n      <Animated.View style={[style.container, styles.absolute, size]}>\n        <View style={[styles.noOverflow, style.overflow, arcSize]}>\n          <Animated.View style={[style.arc, size]}>\n            <View style={[styles.noOverflow, arcSize]}>\n              <View style={[this.props.themedStyle, this.props.style]}/>\n            </View>\n          </Animated.View>\n        </View>\n      </Animated.View>\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const containerSize: Size = this.containerSize;\n    const { start, end } = this.getComponentStyle(this.animation.toProps());\n\n    return (\n      <View style={containerSize}>\n        {this.renderArcElement(start, containerSize)}\n        {this.renderArcElement(end, containerSize)}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  absolute: StyleSheet.absoluteFillObject,\n  noOverflow: {\n    overflow: 'hidden',\n  },\n});\n\nexport const Spinner = styled<SpinnerProps>(SpinnerComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { TabElement } from './tab.component';\nimport { TabIndicator } from '../support/components';\n\ntype ChildrenProp = TabElement | TabElement[];\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  onSelect?: (index: number) => void;\n}\n\nexport type TabBarProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type TabBarElement = React.ReactElement<TabBarProps>;\n\n/**\n * The `TabBar` component that manages `Tab` components.\n *\n * @extends React.Component\n *\n * @property {number} selectedIndex - Determines current tab index.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of selected tab indicator.\n *\n * @property {(index: number) => void} onSelect - Fires on tab select with corresponding index.\n *\n * @property {React.ReactElement<TabProps>} children - Determines tabs.\n *\n * @property ViewProps - Any props applied to View component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example TabBarSimpleUsage\n *\n * @overview-example Using with React Navigation\n *\n * ```\n * import React from 'react';\n * import { createAppContainer, SafeAreaView } from 'react-navigation';\n * import { createMaterialTopTabNavigator } from 'react-navigation-tabs';\n * import { TabBar, Tab, Layout, Text } from 'react-native-ui-kitten';\n *\n * // React Navigation also requires installing additional dependencies:\n * //\n * // npm i react-navigation react-navigation-tabs react-native-reanimated react-native-gesture-handler\n * //\n * // Then install it for ios:\n * //\n * // cd ios && pod install\n *\n * const HomeScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>HOME</Text>\n *   </Layout>\n * );\n *\n * const SettingsScreen = () => (\n *   <Layout style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n *     <Text category='h1'>SETTINGS</Text>\n *   </Layout>\n * );\n *\n * const TabBarComponent = ({ navigation }) => {\n *\n *   const onSelect = (index) => {\n *     const { [index]: selectedTabRoute } = navigation.state.routes;\n *     navigation.navigate(selectedTabRoute.routeName);\n *   };\n *\n *   return (\n *     <SafeAreaView>\n *       <TabBar selectedIndex={navigation.state.index} onSelect={onSelect}>\n *         <Tab title='HOME'/>\n *         <Tab title='SETTINGS'/>\n *       </TabBar>\n *     </SafeAreaView>\n *   );\n * };\n *\n * const TabNavigator = createMaterialTopTabNavigator({\n *   Home: HomeScreen,\n *   Settings: SettingsScreen,\n * }, {\n *   tabBarComponent: TabBarComponent,\n * });\n *\n * export const AppNavigator = createAppContainer(TabNavigator);\n * ```\n */\nexport class TabBarComponent extends React.Component<TabBarProps> {\n\n  static styledComponentName: string = 'TabBar';\n\n  static defaultProps: Partial<TabBarProps> = {\n    selectedIndex: 0,\n  };\n\n  private tabIndicatorRef: React.RefObject<TabIndicator> = React.createRef();\n\n  public scrollToIndex(params: { index: number, animated?: boolean }): void {\n    const { current: tabIndicator } = this.tabIndicatorRef;\n\n    tabIndicator.scrollToIndex(params);\n  }\n\n  public scrollToOffset(params: { offset: number, animated?: boolean }): void {\n    const { current: tabIndicator } = this.tabIndicatorRef;\n\n    tabIndicator.scrollToOffset(params);\n  }\n\n  private onTabSelect = (index: number): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(index);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorHeight,\n      indicatorBorderRadius,\n      indicatorBackgroundColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      item: {},\n      indicator: {\n        height: indicatorHeight,\n        borderRadius: indicatorBorderRadius,\n        backgroundColor: indicatorBackgroundColor,\n      },\n    };\n  };\n\n  private isTabSelected = (index: number): boolean => {\n    return index === this.props.selectedIndex;\n  };\n\n  private renderTabElement = (element: TabElement, index: number): TabElement => {\n    return React.cloneElement(element, {\n      key: index,\n      style: [styles.item, element.props.style],\n      selected: this.isTabSelected(index),\n      onSelect: () => this.onTabSelect(index),\n    });\n  };\n\n  private renderTabElements = (source: ChildrenProp): TabElement[] => {\n    return React.Children.map(source, this.renderTabElement);\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, indicatorStyle, selectedIndex, children, ...derivedProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const tabElements: TabElement[] = this.renderTabElements(children);\n\n    return (\n      <View>\n        <View\n          {...derivedProps}\n          style={[componentStyle.container, styles.container, style]}>\n          {tabElements}\n        </View>\n        <TabIndicator\n          ref={this.tabIndicatorRef}\n          style={[componentStyle.indicator, styles.indicator, indicatorStyle]}\n          selectedPosition={selectedIndex}\n          positions={tabElements.length}\n        />\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n  },\n  item: {\n    flex: 1,\n  },\n  indicator: {},\n});\n\nexport const TabBar = styled<TabBarProps>(TabBarComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { TabElement } from './tab.component';\nimport { TabBar } from './tabBar.component';\nimport { ViewPager } from '../viewPager/viewPager.component';\n\ntype TabContentElement = React.ReactElement<any>;\ntype ChildrenProp = TabElement | TabElement[];\n\nclass TabViewChildElement {\n  tab: TabElement;\n  content: TabContentElement;\n}\n\nclass TabViewChildren {\n  tabs: TabElement[] = [];\n  content: TabContentElement[] = [];\n}\n\ninterface ComponentProps {\n  children: ChildrenProp;\n  selectedIndex?: number;\n  tabBarStyle?: StyleProp<ViewStyle>;\n  indicatorStyle?: StyleProp<ViewStyle>;\n  shouldLoadComponent?: (index: number) => boolean;\n  onOffsetChange?: (offset: number) => void;\n  onSelect?: (index: number) => void;\n}\n\nexport type TabViewProps = ViewProps & ComponentProps;\nexport type TabViewElement = React.ReactElement<TabViewProps>;\n\n/**\n * `TabView` is a dynamic tabset component. Allows flipping through the tab \"pages\".\n *\n * @extends React.Component\n **\n * @property {number} selectedIndex - Determines current tab index.\n *\n * @property {StyleProp<ViewStyle>} tabBarStyle - Determines style TabBar component.\n *\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of selected tab indicator.\n *\n * @property {(index: number) => void} onSelect - Fires on \"page\" select with corresponding index.\n *\n * @property {TabElement | TabElement[]} children - Determines children of the component.\n *\n * @property {(index: number) => boolean} shouldLoadComponent - Determines loading behavior particular page and can be\n * used for lazy loading.\n *\n * @property {(offset: number) => void} onOffsetChange - Fires on scroll event with current scroll offset.\n *\n * @property ViewProps - Any props applied to View component.\n *\n * @overview-example TabViewSimpleUsage\n *\n * @overview-example TabViewLazyLoading\n *\n * @example TabViewInlineStyling\n */\nexport class TabView extends React.Component<TabViewProps> {\n\n  static defaultProps: Partial<TabViewProps> = {\n    selectedIndex: 0,\n  };\n\n  private viewPagerRef: React.RefObject<ViewPager> = React.createRef();\n  private tabBarRef: React.RefObject<any> = React.createRef();\n\n  private onBarSelect = (index: number): void => {\n    const { current: viewPager } = this.viewPagerRef;\n\n    viewPager.scrollToIndex({ index, animated: true });\n  };\n\n  private onPagerOffsetChange = (offset: number): void => {\n    const { current: tabBar } = this.tabBarRef;\n    const tabCount: number = React.Children.count(tabBar.props.children);\n\n    tabBar.scrollToOffset({ offset: offset / tabCount });\n  };\n\n  private onPagerSelect = (selectedIndex: number): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(selectedIndex);\n    }\n  };\n\n  private renderComponentChild = (element: TabElement, index: number): TabViewChildElement => {\n    return {\n      tab: React.cloneElement(element, { key: index }),\n      content: element.props.children,\n    };\n  };\n\n  private renderComponentChildren = (source: ChildrenProp): TabViewChildren => {\n    return React.Children.toArray(source).reduce((acc: TabViewChildren, element: TabElement, index: number) => {\n      const { tab, content } = this.renderComponentChild(element, index);\n      return {\n        tabs: [...acc.tabs, tab],\n        content: [...acc.content, content],\n      };\n    }, new TabViewChildren());\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { style, selectedIndex, children, tabBarStyle, indicatorStyle, ...derivedProps } = this.props;\n\n    const { tabs, content } = this.renderComponentChildren(children);\n\n    return (\n      <View\n        style={[styles.container, style]}\n        {...derivedProps}>\n        <TabBar\n          style={tabBarStyle}\n          ref={this.tabBarRef}\n          selectedIndex={selectedIndex}\n          indicatorStyle={indicatorStyle}\n          onSelect={this.onBarSelect}>\n          {tabs}\n        </TabBar>\n        <ViewPager\n          ref={this.viewPagerRef}\n          {...derivedProps}\n          style={[styles.container, style]}\n          selectedIndex={selectedIndex}\n          shouldLoadComponent={this.props.shouldLoadComponent}\n          onOffsetChange={this.onPagerOffsetChange}\n          onSelect={this.onPagerSelect}>\n          {content}\n        </ViewPager>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    overflow: 'hidden',\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: ImageStyle) => React.ReactElement<ImageProps>;\ntype ContentElement = React.ReactElement<any>;\n\ninterface ComponentProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  selected?: boolean;\n  onSelect?: (selected: boolean) => void;\n  children?: ContentElement;\n}\n\nexport type TabProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type TabElement = React.ReactElement<TabProps>;\n\n/**\n * `Tab` component is a part of `TabBar` or `TabView` component.\n * `TabView` Tabs should be wrapped in `TabBar` or `TabView` to provide usable component.\n * See usage examples at `TabView` component documentation.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the component.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Determines style of the title.\n *\n * @property {React.ReactElement<any>} children - Determines content of the tab.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {boolean} selected - Determines tab selection state.\n *\n * @property {(selected: boolean) => void} onSelect = Fires on onSelect event.\n *\n * @property TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @property StyledComponentProps - Any props applied to `styledL` component.\n *\n * @overview-example TabSimpleUsage\n *\n * @overview-example TabWithIcon\n *\n * @example TabWithExternalSourceIcon\n *\n * @example TabInlineStyling\n */\nexport class TabComponent extends React.Component<TabProps> {\n\n  static styledComponentName: string = 'Tab';\n\n  static defaultProps: Partial<TabProps> = {\n    selected: false,\n  };\n\n  private onPress = (): void => {\n    if (this.props.onSelect) {\n      this.props.onSelect(!this.props.selected);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      textMarginVertical,\n      textFontFamily,\n      textFontSize,\n      textLineHeight,\n      textFontWeight,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconMarginVertical,\n      iconTintColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginVertical: iconMarginVertical,\n        tintColor: iconTintColor,\n      },\n      title: {\n        marginVertical: textMarginVertical,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        fontWeight: textFontWeight,\n        color: textColor,\n      },\n    };\n  };\n\n  private renderTitleElement = (style: TextStyle): TextElement => {\n    const { title, titleStyle } = this.props;\n\n    return (\n      <Text\n        key={1}\n        style={[style, styles.title, titleStyle]}>\n        {title}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: React.ReactElement<ImageProps> = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 2,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const { title, icon } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      isValidString(title) && this.renderTitleElement(style.title),\n    ];\n  };\n\n  public render(): React.ReactElement<TouchableOpacityProps> {\n    const { themedStyle, style, ...derivedProps } = this.props;\n    const { container, ...componentStyles } = this.getComponentStyle(themedStyle);\n\n    const [iconElement, titleElement] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        onPress={this.onPress}>\n        {iconElement}\n        {titleElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  icon: {},\n  title: {},\n});\n\nexport const Tab = styled<TabProps>(TabComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Tab as RNTab,\n  TabElement as RNTabElement,\n  TabProps as RNTabProps,\n  // @ts-ignore\n} from './tab.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type TabProps = RNTabProps & WebEventResponderCallbacks;\nexport type TabElement = React.ReactElement<TabProps>;\n\nexport class Tab extends React.Component<TabProps> implements WebEventResponderCallbacks {\n\n  private tabRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.tabRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.tabRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNTabElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNTab\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.tabRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  Animated,\n  Easing,\n  GestureResponderEvent,\n  PanResponder,\n  PanResponderCallbacks,\n  PanResponderGestureState,\n  PanResponderInstance,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  TouchableOpacity,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { CheckMark } from '../support/components';\nimport { I18nLayoutService } from '../support/services';\n\ninterface ComponentProps {\n  checked?: boolean;\n  disabled?: boolean;\n  status?: string;\n  size?: string;\n  text?: string;\n  textStyle?: StyleProp<TextStyle>;\n  onChange?: (checked: boolean) => void;\n}\n\nexport type ToggleProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type ToggleElement = React.ReactElement<ToggleProps>;\n\n/**\n * Styled `Toggle` component.\n *\n * @extends React.Component\n *\n * @property {boolean} checked - Determines whether component is checked.\n * Default is `false`.\n *\n * @property {boolean} disabled - Determines whether component is disabled.\n * Default is `false`.\n *\n * @property {string} status - Determines the status of the component.\n * Can be `primary`, `success`, `info`, `warning`, `danger`, `basic` or `control`.\n * Default is `basic`.\n *\n * @property {string} size - Determines the size of the component.\n * Can be `giant`, `large`, `medium`, `small`, or `tiny`.\n * Default is `medium`.\n *\n * @property {string} text - Determines text of the component.\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(checked: boolean) => void} onChange - Fires when selection state is changed.\n *\n * @property TouchableOpacityProps - Any props applied to TouchableOpacity component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example ToggleSimpleUsage\n *\n * @overview-example ToggleStatus\n *\n * @overview-example ToggleSize\n *\n * @overview-example ToggleWithText\n *\n * @example ToggleInlineStyling\n */\nexport class ToggleComponent extends React.Component<ToggleProps> implements PanResponderCallbacks {\n\n  static styledComponentName: string = 'Toggle';\n\n  private panResponder: PanResponderInstance;\n  private thumbWidthAnimation: Animated.Value;\n  private thumbTranslateAnimation: Animated.Value;\n  private ellipseScaleAnimation: Animated.Value;\n  private thumbTranslateAnimationActive: boolean;\n\n  constructor(props: ToggleProps) {\n    super(props);\n\n    const { checked, themedStyle } = props;\n\n    this.thumbWidthAnimation = new Animated.Value(themedStyle.thumbWidth);\n    this.thumbTranslateAnimation = new Animated.Value(0);\n    this.ellipseScaleAnimation = new Animated.Value(checked ? 0.01 : 1.0);\n    this.thumbTranslateAnimationActive = false;\n\n    this.panResponder = PanResponder.create(this);\n  }\n\n  // PanResponderCallbacks\n\n  public onStartShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onStartShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponder = (): boolean => {\n    return true;\n  };\n\n  public onMoveShouldSetPanResponderCapture = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderTerminationRequest = (): boolean => {\n    return false;\n  };\n\n  public onPanResponderGrant = (): void => {\n    const { checked, disabled, themedStyle } = this.props;\n\n    if (disabled) {\n      return;\n    }\n\n    this.onPressIn();\n\n    if (this.thumbTranslateAnimationActive) {\n      this.thumbTranslateAnimationActive = false;\n      this.stopAnimations();\n      return;\n    }\n\n    this.animateThumbWidth(themedStyle.thumbWidth * 1.2);\n    this.animateEllipseScale(checked ? 1 : 0.01);\n  };\n\n  public onPanResponderMove: () => boolean = (): boolean => {\n    return true;\n  };\n\n  public onPanResponderRelease = (e: GestureResponderEvent, gestureState: PanResponderGestureState): void => {\n    const { checked, disabled, themedStyle } = this.props;\n\n    if (!disabled) {\n      if ((!checked && gestureState.dx > -5) || (checked && gestureState.dx < 5)) {\n        this.toggle(this.onPress);\n      } else {\n        this.animateEllipseScale(checked ? 0.01 : 1);\n      }\n    }\n\n    this.animateThumbWidth(themedStyle.thumbWidth);\n    this.onPressOut();\n  };\n\n  private onPressIn = (): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n  };\n\n  private onPressOut = (): void => {\n    this.props.dispatch([]);\n  };\n\n  private onPress = (): void => {\n    if (this.props.onChange) {\n      this.props.onChange(!this.props.checked);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const { checked, disabled } = this.props;\n\n    const {\n      outlineWidth,\n      outlineHeight,\n      outlineBorderRadius,\n      outlineBackgroundColor,\n      thumbWidth,\n      thumbHeight,\n      thumbBorderRadius,\n      thumbBackgroundColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontWeight,\n      textLineHeight,\n      textFontFamily,\n      textColor,\n      iconWidth,\n      iconHeight,\n      iconTintColor,\n      offsetValue,\n      backgroundColor,\n      borderColor,\n      ...containerParameters\n    } = source;\n\n    const interpolatedBackgroundColor: Animated.AnimatedDiffClamp = this.getInterpolatedColor(\n      backgroundColor,\n      borderColor,\n    );\n\n    const thumbScale: Animated.AnimatedDiffClamp = this.animateThumbScale(offsetValue);\n\n    return {\n      toggleContainer: {},\n      ellipseContainer: {\n        borderColor: borderColor,\n        backgroundColor: interpolatedBackgroundColor,\n        ...containerParameters,\n      },\n      highlight: {\n        width: outlineWidth,\n        height: outlineHeight,\n        borderRadius: outlineBorderRadius,\n        backgroundColor: outlineBackgroundColor,\n      },\n      ellipse: {\n        width: containerParameters.width - (containerParameters.borderWidth * 2),\n        height: containerParameters.height - (containerParameters.borderWidth * 2),\n        borderRadius: (source.height - (source.borderWidth * 2)) / 2,\n        backgroundColor: interpolatedBackgroundColor,\n        transform: [{ scale: checked ? thumbScale : this.ellipseScaleAnimation }],\n      },\n      thumb: {\n        alignSelf: checked ? 'flex-end' : 'flex-start',\n        width: this.thumbWidthAnimation,\n        height: thumbHeight,\n        borderRadius: thumbBorderRadius,\n        backgroundColor: thumbBackgroundColor,\n        elevation: disabled ? 0 : 5,\n        transform: [{ translateX: this.thumbTranslateAnimation }],\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontSize: textFontSize,\n        fontWeight: textFontWeight,\n        lineHeight: textLineHeight,\n        fontFamily: textFontFamily,\n        color: textColor,\n      },\n      icon: {\n        width: source.iconWidth,\n        height: source.iconHeight,\n        backgroundColor: iconTintColor,\n      },\n    };\n  };\n\n  private animateThumbTranslate = (value: number, callback: () => void = () => null): void => {\n    this.thumbTranslateAnimationActive = true;\n\n    Animated.timing(this.thumbTranslateAnimation, {\n      toValue: I18nLayoutService.select(value, -value),\n      duration: 150,\n      easing: Easing.linear,\n    }).start(() => {\n      this.thumbTranslateAnimationActive = false;\n      callback();\n    });\n  };\n\n  private animateThumbWidth = (value: number, callback: () => void = () => null): void => {\n    Animated.timing(this.thumbWidthAnimation, {\n      toValue: value,\n      duration: 150,\n      easing: Easing.linear,\n    }).start(callback);\n  };\n\n  private animateEllipseScale = (value: number, callback: () => void = () => null): void => {\n    Animated.timing(this.ellipseScaleAnimation, {\n      toValue: value,\n      duration: 200,\n      easing: Easing.linear,\n    }).start(callback);\n  };\n\n  private animateThumbScale = (value: number): Animated.AnimatedDiffClamp => {\n    return this.thumbTranslateAnimation.interpolate({\n      inputRange: [-value, 0],\n      outputRange: [1, 0.01],\n    });\n  };\n\n  private stopAnimations = (): void => {\n    const value: number = this.props.checked ? 0.01 : 1;\n\n    this.thumbTranslateAnimation.stopAnimation();\n    this.ellipseScaleAnimation.stopAnimation();\n    this.thumbWidthAnimation.stopAnimation();\n\n    this.ellipseScaleAnimation.setValue(value);\n  };\n\n  private toggle = (callback = (nextValue: boolean) => null): void => {\n    const { checked, themedStyle } = this.props;\n\n    const value: number = checked ? -themedStyle.offsetValue : themedStyle.offsetValue;\n\n    this.animateThumbTranslate(value, () => {\n      this.thumbTranslateAnimation.setValue(0);\n      callback(!checked);\n    });\n\n    this.animateThumbWidth(this.props.themedStyle.thumbWidth);\n  };\n\n  private getInterpolatedColor = (startColor: string, endColor: string): Animated.AnimatedDiffClamp => {\n    const { checked, themedStyle } = this.props;\n\n    return this.thumbTranslateAnimation.interpolate({\n      inputRange: checked ? [-themedStyle.offsetValue, 0] : [0, themedStyle.offsetValue],\n      outputRange: [startColor, endColor],\n    });\n  };\n\n  private renderTextElement = (style: StyleType): TextElement => {\n    return (\n      <Text style={[style, this.props.textStyle]}>\n        {this.props.text}\n      </Text>\n    );\n  };\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    return [\n      this.props.text && this.renderTextElement(style.text),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, checked, ...restProps } = this.props;\n\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n    const [textElement] = this.renderComponentChildren(componentStyle);\n\n    return (\n      <View\n        {...this.panResponder.panHandlers}\n        style={[styles.container, style]}>\n        <TouchableOpacity\n          activeOpacity={1.0}\n          {...restProps}\n          style={[componentStyle.toggleContainer, styles.toggleContainer]}>\n          <View style={[componentStyle.highlight, styles.highlight]}/>\n          <Animated.View style={[componentStyle.ellipseContainer, styles.ellipseContainer]}>\n            <Animated.View style={[componentStyle.ellipse, styles.ellipse]}/>\n            <Animated.View style={[componentStyle.thumb, styles.thumb]}>\n              <CheckMark style={componentStyle.icon} isAnimated={true}/>\n            </Animated.View>\n          </Animated.View>\n        </TouchableOpacity>\n        {textElement}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  toggleContainer: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  ellipseContainer: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    overflow: 'hidden',\n  },\n  ellipse: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  highlight: {\n    alignSelf: 'center',\n    position: 'absolute',\n  },\n  thumb: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport const Toggle = styled<ToggleProps>(ToggleComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  Toggle as RNToggle,\n  ToggleElement as RNToggleElement,\n  ToggleProps as RNToggleProps,\n  // @ts-ignore\n} from './toggle.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type ToggleProps = RNToggleProps & WebEventResponderCallbacks;\nexport type ToggleElement = React.ReactElement<ToggleProps>;\n\nexport class Toggle extends React.Component<ToggleProps> implements WebEventResponderCallbacks {\n\n  private toggleRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    if (!this.props.disabled) {\n      this.toggleRef.current.props.dispatch([Interaction.HOVER]);\n    }\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    if (!this.props.disabled) {\n      this.toggleRef.current.props.dispatch([]);\n    }\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    if (!this.props.disabled) {\n      this.toggleRef.current.props.dispatch([Interaction.FOCUSED]);\n    }\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    if (!this.props.disabled) {\n      this.toggleRef.current.props.dispatch([]);\n    }\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNToggleElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNToggle\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.toggleRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  ImageProps,\n  ImageStyle,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport {\n  Popover,\n  PopoverElement,\n  PopoverProps,\n} from '../popover/popover.component';\nimport { ModalPresentingBased } from '../support/typings';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: StyleType) => IconElement;\ntype WrappingElement = React.ReactElement<any>;\n\ntype PopoverContentProps = Omit<PopoverProps, 'content'>;\n\ninterface ComponentProps extends PopoverContentProps, ModalPresentingBased {\n  text: string;\n  textStyle?: StyleProp<TextStyle>;\n  icon?: IconProp;\n  children: WrappingElement;\n}\n\nexport type TooltipProps = StyledComponentProps & ComponentProps;\nexport type TooltipElement = React.ReactElement<TooltipProps>;\n\n/**\n * `Tooltip` displays informative text when users focus on or tap an element.\n *\n * @extends React.Component\n *\n * @property {string} text - Determines the text of the tooltip\n *\n * @property {StyleProp<TextStyle>} textStyle - Customizes text style.\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines icon of the component.\n *\n * @property {React.ReactElement<any>} children - Determines the element \"above\" which popover will be shown.\n *\n * @property {boolean} visible - Determines whether popover is visible or not.\n *\n * @property {string | PopoverPlacement} placement - Determines the placement of the popover.\n * Can be `left`, `top`, `right`, `bottom`, `left start`, `left end`, `top start`, `top end`, `right start`,\n * `right end`, `bottom start` or `bottom end`.\n * Default is `bottom`.\n *\n * @property {number} indicatorOffset - Determines the offset of indicator (arrow).\n * @property {StyleProp<ViewStyle>} indicatorStyle - Determines style of indicator (arrow).\n *\n * @property Omit<PopoverProps, 'content'> - Any props applied to Popover component, excluding `content`.\n *\n * @property ModalPresentingBased - Any props applied to Modal component.\n *\n * @property StyledComponentProps - Any props applied to `styled` component.\n *\n * @overview-example TooltipSimpleUsage\n *\n * @overview-example TooltipWithIcon\n *\n * @overview-example TooltipPlacement\n *\n * @example TooltipWithExternalSourceIcon\n *\n * @example TooltipInlineStyling\n */\nexport class TooltipComponent extends React.Component<TooltipProps> {\n\n  static styledComponentName: string = 'Tooltip';\n\n  static defaultProps: Partial<TooltipProps> = {\n    indicatorOffset: 8,\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      indicatorBackgroundColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n      iconTintColor,\n      textMarginHorizontal,\n      textFontSize,\n      textFontFamily,\n      textLineHeight,\n      textColor,\n      ...containerParameters\n    } = source;\n\n    return {\n      container: containerParameters,\n      content: {},\n      indicator: {\n        backgroundColor: indicatorBackgroundColor,\n      },\n      icon: {\n        width: iconWidth,\n        height: iconHeight,\n        marginHorizontal: iconMarginHorizontal,\n        tintColor: iconTintColor,\n      },\n      text: {\n        marginHorizontal: textMarginHorizontal,\n        fontFamily: textFontFamily,\n        fontSize: textFontSize,\n        lineHeight: textLineHeight,\n        color: textColor,\n      },\n    };\n  };\n\n  private renderTextElement = (style: TextStyle): TextElement => {\n    const { text, textStyle } = this.props;\n\n    return (\n      <Text\n        key={1}\n        style={[style, styles.text, textStyle]}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderIconElement = (style: ImageStyle): IconElement => {\n    const iconElement: IconElement = this.props.icon(style);\n\n    return React.cloneElement(iconElement, {\n      key: 0,\n      style: [style, styles.icon, iconElement.props.style],\n    });\n  };\n\n  private renderContentElementChildren = (style: StyleType): React.ReactNodeArray => {\n    const { icon } = this.props;\n\n    return [\n      icon && this.renderIconElement(style.icon),\n      this.renderTextElement(style.text),\n    ];\n  };\n\n  private renderPopoverContentElement = (style: StyleType): React.ReactElement<ViewProps> => {\n    const { content, ...childrenStyle } = style;\n\n    const contentChildren: React.ReactNode = this.renderContentElementChildren(childrenStyle);\n\n    return (\n      <View style={[content, styles.content]}>\n        {contentChildren}\n      </View>\n    );\n  };\n\n  public render(): PopoverElement {\n    const { themedStyle, style, indicatorStyle, children, ...derivedProps } = this.props;\n    const { container, indicator, ...componentStyle } = this.getComponentStyle(themedStyle);\n\n    const contentElement: TextElement = this.renderPopoverContentElement(componentStyle);\n\n    return (\n      <Popover\n        {...derivedProps}\n        style={[container, styles.container, style]}\n        indicatorStyle={[indicator, indicatorStyle]}\n        content={contentElement}>\n        {children}\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  content: {\n    flexDirection: 'row',\n  },\n  indicator: {},\n  icon: {},\n  text: {\n    alignSelf: 'center',\n  },\n});\n\nexport const Tooltip = styled<TooltipProps>(TooltipComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\nimport { TopNavigationActionElement } from './topNavigationAction.component';\nimport {\n  Text,\n  TextElement,\n} from '../text/text.component';\nimport { isValidString } from '../support/services';\n\ntype ActionElementProp = TopNavigationActionElement | TopNavigationActionElement[];\ntype AlignmentProp = 'start' | 'center';\n\ninterface ComponentProps {\n  title?: string;\n  titleStyle?: StyleProp<TextStyle>;\n  subtitle?: string;\n  subtitleStyle?: StyleProp<TextStyle>;\n  alignment?: AlignmentProp;\n  leftControl?: TopNavigationActionElement;\n  rightControls?: ActionElementProp;\n}\n\nexport type TopNavigationProps = StyledComponentProps & ViewProps & ComponentProps;\nexport type TopNavigationElement = React.ReactElement<TopNavigationProps>;\n\n/**\n * `TopNavigation` component is designed to be a Navigation Bar.\n * Can be used for navigation.\n *\n * @extends React.Component\n *\n * @property {string} title - Determines the title of the component.\n *\n * @property {string} subtitle - Determines the subtitle of the component.\n *\n * @property {string} alignment - Determines the alignment of the component.\n * Can be `center` or `start`.\n *\n * @property {React.ReactElement<TopNavigationActionProps>} leftControl - Determines the left control\n * of the component.\n *\n * @property {React.ReactElement<TopNavigationActionProps>[]} rightControls - Determines the right controls\n * of the component.\n *\n * @property {StyleProp<TextStyle>} titleStyle - Customizes text style of title.\n *\n * @property {StyleProp<TextStyle>} subtitleStyle - Customizes text style of subtitle.\n *\n * @property {ViewProps} - Any props applied to View component.\n *\n * @property {StyledComponentProps} - Any props applied to `styled` component.\n *\n * @overview-example TopNavigationSimpleUsage\n *\n * @overview-example TopNavigationActions\n *\n * @overview-example TopNavigationAlignments\n *\n * @overview-example TopNavigationWithMenu\n *\n * @example TopNavigationInlineStyling\n */\nexport class TopNavigationComponent extends React.Component<TopNavigationProps> {\n\n  static styledComponentName: string = 'TopNavigation';\n\n  private getAlignmentDependentStyles = (alignment: AlignmentProp): StyleType => {\n    if (alignment === 'center') {\n      return {\n        container: styles.containerCentered,\n        titleContainer: styles.titleContainerCentered,\n      };\n    }\n\n    return {\n      rightControlsContainer: styles.rightControlsContainerStart,\n    };\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      titleTextAlign,\n      titleFontFamily,\n      titleFontSize,\n      titleLineHeight,\n      titleFontWeight,\n      titleColor,\n      subtitleTextAlign,\n      subtitleFontFamily,\n      subtitleFontSize,\n      subtitleLineHeight,\n      subtitleFontWeight,\n      subtitleColor,\n      ...containerParameters\n    } = source;\n\n\n    return {\n      container: containerParameters,\n      titleContainer: {},\n      title: {\n        textAlign: titleTextAlign,\n        fontFamily: titleFontFamily,\n        fontSize: titleFontSize,\n        lineHeight: titleLineHeight,\n        fontWeight: titleFontWeight,\n        color: titleColor,\n      },\n      subtitle: {\n        textAlign: subtitleTextAlign,\n        fontFamily: subtitleFontFamily,\n        fontSize: subtitleFontSize,\n        color: subtitleColor,\n        fontWeight: subtitleFontWeight,\n        lineHeight: subtitleLineHeight,\n      },\n      leftControlContainer: {},\n      rightControlsContainer: {},\n    };\n  };\n\n  private renderTextElement = (text: string, style: StyleProp<TextStyle>): TextElement => {\n    return (\n      <Text style={style}>\n        {text}\n      </Text>\n    );\n  };\n\n  private renderActionElements(source: ActionElementProp): TopNavigationActionElement[] {\n    return React.Children.map(source, (element: TopNavigationActionElement, index: number) => {\n      return React.cloneElement(element, {\n        key: index,\n        appearance: this.props.appearance,\n      });\n    });\n  }\n\n  private renderComponentChildren = (style: StyleType): React.ReactNodeArray => {\n    const {\n      title,\n      subtitle,\n      leftControl,\n      rightControls,\n      titleStyle,\n      subtitleStyle,\n    } = this.props;\n\n    return [\n      isValidString(title) && this.renderTextElement(title, [style.title, styles.title, titleStyle]),\n      isValidString(subtitle) && this.renderTextElement(subtitle, [style.subtitle, styles.subtitle, subtitleStyle]),\n      leftControl && this.renderActionElements(leftControl),\n      rightControls && this.renderActionElements(rightControls),\n    ];\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    const { themedStyle, style, alignment, ...restProps } = this.props;\n\n    const {\n      container,\n      leftControlContainer,\n      titleContainer,\n      rightControlsContainer,\n      ...componentStyles\n    } = this.getComponentStyle(themedStyle);\n\n    const alignmentStyles: StyleType = this.getAlignmentDependentStyles(alignment);\n\n    const [\n      titleElement,\n      subtitleElement,\n      leftControlElement,\n      rightControlElements,\n    ] = this.renderComponentChildren(componentStyles);\n\n    return (\n      <View\n        style={[container, styles.container, alignmentStyles.container, style]}\n        {...restProps}>\n        <View style={[leftControlContainer, styles.leftControlContainer]}>\n          {leftControlElement}\n        </View>\n        <View style={[titleContainer, styles.titleContainer, alignmentStyles.titleContainer]}>\n          {titleElement}\n          {subtitleElement}\n        </View>\n        <View style={[rightControlsContainer, styles.rightControlsContainer, alignmentStyles.rightControlsContainer]}>\n          {rightControlElements}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  containerCentered: {\n    justifyContent: 'space-between',\n  },\n  titleContainer: {},\n  titleContainerCentered: {\n    ...StyleSheet.absoluteFillObject,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  title: {},\n  subtitle: {},\n  leftControlContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainer: {\n    flexDirection: 'row',\n    zIndex: 1,\n  },\n  rightControlsContainerStart: {\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n});\n\nexport const TopNavigation = styled<TopNavigationProps>(TopNavigationComponent);\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport React from 'react';\nimport {\n  GestureResponderEvent,\n  ImageProps,\n  ImageStyle,\n  Insets,\n  StyleProp,\n  StyleSheet,\n  TouchableOpacity,\n  TouchableOpacityProps,\n} from 'react-native';\nimport {\n  Interaction,\n  styled,\n  StyledComponentProps,\n  StyleType,\n} from '@kitten/theme';\n\ntype IconElement = React.ReactElement<ImageProps>;\ntype IconProp = (style: StyleType) => IconElement;\n\ninterface ComponentProps {\n  icon: IconProp;\n}\n\nexport type TopNavigationActionProps = StyledComponentProps & TouchableOpacityProps & ComponentProps;\nexport type TopNavigationActionElement = React.ReactElement<TopNavigationActionProps>;\n\n/**\n * The `TopNavigationAction` component is a part of the `TopNavigation` component.\n * `TopNavigationActions` should be used in `TopNavigation` to provide usable component.\n * See usage examples at `TopNavigation` component documentation.\n *\n * @extends React.Component\n *\n * @property {(style: StyleType) => React.ReactElement<ImageProps>} icon - Determines the icon of the tab.\n *\n * @property {TouchableOpacityProps} - Any props applied to TouchableOpacity component.\n *\n * @property {StyledComponentProps} - Any props applied to `styled` component.\n *\n * @overview-example TopNavigationActionSimpleUsage\n *\n * @example TopNavigationActionExternalSourceIcon\n *\n * @example TopNavigationActionInlineStyling\n */\nclass TopNavigationActionComponent extends React.Component<TopNavigationActionProps> {\n\n  static styledComponentName: string = 'TopNavigationAction';\n\n  private onPress = (event: GestureResponderEvent): void => {\n    if (this.props.onPress) {\n      this.props.onPress(event);\n    }\n  };\n\n  private onPressIn = (event: GestureResponderEvent): void => {\n    this.props.dispatch([Interaction.ACTIVE]);\n\n    if (this.props.onPressIn) {\n      this.props.onPressIn(event);\n    }\n  };\n\n  private onPressOut = (event: GestureResponderEvent): void => {\n    this.props.dispatch([]);\n\n    if (this.props.onPressOut) {\n      this.props.onPressOut(event);\n    }\n  };\n\n  private getComponentStyle = (source: StyleType): StyleType => {\n    const {\n      iconTintColor,\n      iconWidth,\n      iconHeight,\n      iconMarginHorizontal,\n    } = source;\n\n    return {\n      container: {\n        marginHorizontal: iconMarginHorizontal,\n      },\n      icon: {\n        tintColor: iconTintColor,\n        width: iconWidth,\n        height: iconHeight,\n        ...styles.icon,\n      },\n    };\n  };\n\n  private createHitSlopInsets = (iconStyle: StyleProp<ImageStyle>): Insets => {\n    const flatStyle: ImageStyle = StyleSheet.flatten(iconStyle);\n\n    // @ts-ignore: `width` is restricted to be a number\n    const value: number = 40 - flatStyle.width;\n\n    return {\n      left: value,\n      top: value,\n      right: value,\n      bottom: value,\n    };\n  };\n\n  private renderIconElement = (style: StyleType): IconElement => {\n    return this.props.icon(style);\n  };\n\n  public render(): React.ReactNode {\n    const { themedStyle, style, icon, ...touchableProps } = this.props;\n    const componentStyle: StyleType = this.getComponentStyle(themedStyle);\n\n    const hitSlopInsets: Insets = this.createHitSlopInsets(componentStyle.icon);\n\n    const iconElement: IconElement = this.renderIconElement(componentStyle.icon);\n\n    return (\n      <TouchableOpacity\n        activeOpacity={1.0}\n        hitSlop={hitSlopInsets}\n        {...touchableProps}\n        style={[componentStyle.container, styles.container, style]}\n        onPress={this.onPress}\n        onPressIn={this.onPressIn}\n        onPressOut={this.onPressOut}>\n        {iconElement}\n      </TouchableOpacity>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {},\n  icon: {},\n});\n\nexport const TopNavigationAction = styled<TopNavigationActionProps>(TopNavigationActionComponent);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Interaction } from '@kitten/theme';\nimport {\n  TopNavigationAction as RNTopNavigationAction,\n  TopNavigationActionElement as RNTopNavigationActionElement,\n  TopNavigationActionProps as RNTopNavigationActionProps,\n  // @ts-ignore\n} from './topNavigationAction.component.tsx';\nimport {\n  WebEventResponder,\n  WebEventResponderCallbacks,\n  WebEventResponderInstance,\n} from '../support/services';\n\nexport type TopNavigationActionProps = RNTopNavigationActionProps & WebEventResponderCallbacks;\nexport type TopNavigationActionElement = React.ReactElement<TopNavigationActionProps>;\n\nexport class TopNavigationAction extends React.Component<TopNavigationActionProps>\n  implements WebEventResponderCallbacks {\n\n  private topNavigationActionRef: React.RefObject<any> = React.createRef();\n  private webEventResponder: WebEventResponderInstance = WebEventResponder.create(this);\n\n  public onMouseEnter = (): void => {\n    this.topNavigationActionRef.current.props.dispatch([Interaction.HOVER]);\n\n    if (this.props.onMouseEnter) {\n      this.props.onMouseEnter();\n    }\n  };\n\n  public onMouseLeave = (): void => {\n    this.topNavigationActionRef.current.props.dispatch([]);\n\n    if (this.props.onMouseLeave) {\n      this.props.onMouseLeave();\n    }\n  };\n\n  public onFocus = (): void => {\n    this.topNavigationActionRef.current.props.dispatch([Interaction.FOCUSED]);\n\n    if (this.props.onFocus) {\n      this.props.onFocus();\n    }\n  };\n\n  public onBlur = (): void => {\n    this.topNavigationActionRef.current.props.dispatch([]);\n\n    if (this.props.onBlur) {\n      this.props.onBlur();\n    }\n  };\n\n  public render(): RNTopNavigationActionElement {\n    const { style, ...restProps } = this.props;\n\n    return (\n      <RNTopNavigationAction\n        {...restProps}\n        {...this.webEventResponder.eventHandlers}\n        ref={this.topNavigationActionRef}\n        style={[style, styles.element]}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  element: {\n    // @ts-ignore\n    outlineWidth: 0,\n  },\n});\n","import React from 'react';\nimport {\n  Avatar,\n  AvatarElement,\n  AvatarProps,\n} from 'react-native-ui-kitten';\n\nexport const AvatarShowcase = (props?: AvatarProps): AvatarElement => {\n  return (\n    <Avatar\n      {...props}\n      source={{ uri: 'https://cdn.vox-cdn.com/uploads/chorus_asset/file/7790309/cena.jpg' }}\n    />\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\nconst giantAvatar: ComponentShowcaseItem = {\n  title: 'Giant',\n  props: {\n    size: 'giant',\n  },\n};\n\nconst largeAvatar: ComponentShowcaseItem = {\n  title: 'Large',\n  props: {\n    size: 'large',\n  },\n};\n\nconst mediumAvatar: ComponentShowcaseItem = {\n  title: 'Medium',\n  props: {\n    size: 'medium',\n  },\n};\n\nconst smallAvatar: ComponentShowcaseItem = {\n  title: 'Small',\n  props: {\n    size: 'small',\n  },\n};\n\nconst tinyAvatar: ComponentShowcaseItem = {\n  title: 'Tiny',\n  props: {\n    size: 'tiny',\n  },\n};\n\nconst roundAvatar: ComponentShowcaseItem = {\n  title: 'Round',\n  props: {\n    shape: 'round',\n  },\n};\n\nconst roundedAvatar: ComponentShowcaseItem = {\n  title: 'Rounded',\n  props: {\n    shape: 'rounded',\n  },\n};\n\nconst squareAvatar: ComponentShowcaseItem = {\n  title: 'Square',\n  props: {\n    shape: 'square',\n  },\n};\n\nconst shapeSection: ComponentShowcaseSection = {\n  title: 'Shape',\n  items: [\n    roundAvatar,\n    roundedAvatar,\n    squareAvatar,\n  ],\n};\n\nconst sizeSection: ComponentShowcaseSection = {\n  title: 'Size',\n  items: [\n    giantAvatar,\n    largeAvatar,\n    mediumAvatar,\n    smallAvatar,\n    tinyAvatar,\n  ],\n};\n\nexport const avatarShowcase: ComponentShowcase = {\n  sections: [\n    sizeSection,\n    shapeSection,\n  ],\n};\n","import React from 'react';\nimport {\n  I18nManager,\n  View,\n  ViewProps,\n} from 'react-native';\nimport { Updates } from 'expo';\nimport {\n  Button,\n  CheckBox,\n  Icon,\n  OverflowMenu,\n  OverflowMenuItemType,\n  StyleType,\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from 'react-native-ui-kitten';\nimport {\n  ComponentShowcaseSetting,\n  ShowcaseThemes,\n} from './type';\n\ninterface ComponentProps {\n  themes?: ShowcaseThemes;\n  settings?: ComponentShowcaseSetting[];\n  onThemeSelect?: (theme: string) => void;\n  onSettingSelect?: (setting: { [prop: string]: any }) => void;\n  onReset: () => void;\n}\n\ninterface State {\n  themesMenuVisible: boolean;\n  settingsMenuVisible: boolean;\n}\n\nexport type ShowcaseSettingsProps = ThemedComponentProps & ViewProps & ComponentProps;\n\nconst ThemesIcon = (style: StyleType) => (\n  <Icon {...style} name='color-palette' />\n);\n\nconst SettingsIcon = (style: StyleType) => (\n  <Icon {...style} name='settings' />\n);\n\nconst TrashIcon = (style: StyleType) => (\n  <Icon {...style} name='trash' />\n);\n\nclass ShowcaseSettingsComponent extends React.Component<ShowcaseSettingsProps, State> {\n\n  public state: State = {\n    themesMenuVisible: false,\n    settingsMenuVisible: false,\n  };\n\n  private createSettingMenuItem = (setting: ComponentShowcaseSetting): OverflowMenuItemType => {\n    return {\n      title: setting.description || `${setting.propertyName}: ${setting.value}`,\n    };\n  };\n\n  private createThemeMenuItem = (theme: string): OverflowMenuItemType => {\n    return {\n      title: theme,\n    };\n  };\n\n  private onThemeSelect = (index: number) => {\n    const { [index]: theme } = Object.keys(this.props.themes);\n\n    this.props.onThemeSelect(theme);\n    this.setState({ themesMenuVisible: false });\n  };\n\n  private onResetButtonPress = () => {\n    this.props.onReset();\n  };\n\n  private onSettingSelect = (index: number) => {\n    const { [index]: setting } = this.props.settings;\n\n    this.props.onSettingSelect({\n      [setting.propertyName]: setting.value,\n    });\n    this.setState({ settingsMenuVisible: false });\n  };\n\n  private createThemesMenuItems = (): OverflowMenuItemType[] => {\n    if (this.props.themes) {\n      return Object.keys(this.props.themes).map(this.createThemeMenuItem);\n    }\n  };\n\n  private createSettingsMenuItems = (): OverflowMenuItemType[] => {\n    if (this.props.settings) {\n      return this.props.settings.map(this.createSettingMenuItem);\n    }\n\n    return [];\n  };\n\n  private toggleThemesMenu = () => {\n    const themesMenuVisible: boolean = !this.state.themesMenuVisible;\n\n    this.setState({ themesMenuVisible });\n  };\n\n  private toggleSettingsMenu = () => {\n    const settingsMenuVisible: boolean = !this.state.settingsMenuVisible;\n\n    this.setState({ settingsMenuVisible });\n  };\n\n  private toggleRtl = () => {\n    I18nManager.forceRTL(!I18nManager.isRTL);\n    I18nManager.allowRTL(I18nManager.isRTL);\n    Updates.reload();\n  };\n\n  public render(): React.ReactNode {\n    const { style, themedStyle } = this.props;\n\n    return (\n      <View style={[themedStyle.container, style]}>\n        <OverflowMenu\n          visible={this.state.themesMenuVisible}\n          onSelect={this.onThemeSelect}\n          data={this.createThemesMenuItems()}\n          onBackdropPress={this.toggleThemesMenu}>\n          <Button\n            size='tiny'\n            icon={ThemesIcon}\n            disabled={!this.props.themes}\n            onPress={this.toggleThemesMenu}>\n            THEMES\n          </Button>\n        </OverflowMenu>\n        <OverflowMenu\n          visible={this.state.settingsMenuVisible}\n          onSelect={this.onSettingSelect}\n          data={this.createSettingsMenuItems()}\n          onBackdropPress={this.toggleSettingsMenu}>\n          <Button\n            size='tiny'\n            icon={SettingsIcon}\n            disabled={!this.props.settings}\n            onPress={this.toggleSettingsMenu}>\n            SETTINGS\n          </Button>\n        </OverflowMenu>\n        <Button\n          size='tiny'\n          status='danger'\n          icon={TrashIcon}\n          disabled={!this.props.settings}\n          onPress={this.onResetButtonPress}>\n          RESET\n        </Button>\n        <CheckBox\n          checked={I18nManager.isRTL}\n          onChange={this.toggleRtl}\n          text='RTL'\n        />\n      </View>\n    );\n  }\n}\n\nexport const ShowcaseSettings = withStyles(ShowcaseSettingsComponent, (theme: ThemeType) => ({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    paddingVertical: 16,\n    backgroundColor: theme['background-basic-color-2'],\n  },\n}));\n","import React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Text,\n  TextProps,\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from 'react-native-ui-kitten';\nimport { ComponentShowcaseItem } from './type';\n\ninterface ComponentProps {\n  item: ComponentShowcaseItem;\n  renderItem: (props: any) => React.ReactElement<any>;\n}\n\nexport type ShowcaseItemProps = ThemedComponentProps & ViewProps & ComponentProps;\n\nclass ShowcaseItemComponent extends React.Component<ShowcaseItemProps> {\n\n  private renderElement = (): React.ReactElement<any> => {\n    const { themedStyle, item, renderItem } = this.props;\n\n    const element: React.ReactElement<any> = renderItem(item.props);\n\n    return React.cloneElement(element, {\n      style: [themedStyle.element, element.props.style],\n    });\n  };\n\n  private renderTitleElement = (): React.ReactElement<TextProps> => {\n    const { themedStyle, item } = this.props;\n\n    return (\n      <Text\n        appearance='hint'\n        style={themedStyle.titleLabel}>\n        {item.title}\n      </Text>\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { style, themedStyle, item } = this.props;\n\n    const titleElement: React.ReactElement<TextProps> = item.title && this.renderTitleElement();\n    const showcaseElement: React.ReactElement<any> = this.renderElement();\n\n    return (\n      <View style={[themedStyle.container, style]}>\n        {titleElement}\n        {showcaseElement}\n      </View>\n    );\n  }\n}\n\nexport const ShowcaseItem = withStyles(ShowcaseItemComponent, (theme: ThemeType) => ({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  titleLabel: {\n    minWidth: 128,\n    fontSize: 13,\n    textAlign: 'left',\n  },\n  element: {},\n}));\n","import React from 'react';\nimport {\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Text,\n  TextProps,\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from 'react-native-ui-kitten';\nimport {\n  ShowcaseItem,\n  ShowcaseItemProps,\n} from './showcaseItem.component';\nimport {\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from './type';\n\ninterface ComponentProps {\n  section: ComponentShowcaseSection;\n  renderItem: (props: any) => React.ReactElement<any>;\n}\n\nexport type ShowcaseSectionProps = ThemedComponentProps & ViewProps & ComponentProps;\n\nclass ShowcaseSectionComponent extends React.Component<ShowcaseSectionProps> {\n\n  private renderItem = (item: ComponentShowcaseItem, index: number): React.ReactElement<ShowcaseItemProps> => {\n    const { themedStyle, renderItem } = this.props;\n\n    return (\n      <ShowcaseItem\n        key={index}\n        style={themedStyle.item}\n        item={item}\n        renderItem={renderItem}\n      />\n    );\n  };\n\n  private renderTitleElement = (): React.ReactElement<TextProps> => {\n    const { themedStyle, section } = this.props;\n\n    return (\n      <Text style={themedStyle.titleLabel}>\n        {section.title}\n      </Text>\n    );\n  };\n\n  public render(): React.ReactNode {\n    const { style, themedStyle, section } = this.props;\n\n    const titleElement: React.ReactElement<TextProps> = section.title && this.renderTitleElement();\n\n    return (\n      <View style={[themedStyle.container, style]}>\n        {titleElement}\n        {section.items.map(this.renderItem)}\n      </View>\n    );\n  }\n}\n\nexport const ShowcaseSection = withStyles(ShowcaseSectionComponent, (theme: ThemeType) => ({\n  container: {},\n  titleLabel: {\n    marginVertical: 8,\n    fontSize: 20,\n    lineHeight: 28,\n    textAlign: 'left',\n  },\n  item: {\n    marginVertical: 8,\n  },\n}));\n","import React from 'react';\nimport {\n  ScrollView,\n  ViewStyle,\n} from 'react-native';\nimport {\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from 'react-native-ui-kitten';\nimport {\n  ShowcaseSection,\n  ShowcaseSectionProps,\n} from './showcaseSection.component';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseSection,\n} from './type';\n\ninterface ComponentProps {\n  showcase: ComponentShowcase;\n  settings?: { [prop: string]: any };\n  renderItem: (props: any) => React.ReactElement<any>;\n}\n\nexport type ShowcaseProps = ThemedComponentProps & ComponentProps;\n\ntype ListItemElement = React.ReactElement<ShowcaseSectionProps>;\n\nclass ShowcaseComponent extends React.Component<ShowcaseProps> {\n\n  private renderShowcaseElement = (props: any): React.ReactElement<any> => {\n    return this.props.renderItem({\n      ...props,\n      ...this.props.settings,\n    });\n  };\n\n  private renderSectionElement = (item: ComponentShowcaseSection): ListItemElement => {\n    return (\n      <ShowcaseSection\n        section={item}\n        renderItem={this.renderShowcaseElement}\n      />\n    );\n  };\n\n  private renderSectionItem = (item: ComponentShowcaseSection, index: number): ListItemElement => {\n    const { themedStyle, showcase } = this.props;\n\n    const listItemElement: ListItemElement = this.renderSectionElement(item);\n\n    const borderStyle: ViewStyle | null = index === showcase.sections.length - 1 ? null : themedStyle.itemBorder;\n\n    return React.cloneElement(listItemElement, {\n      key: index,\n      style: [themedStyle.item, borderStyle, listItemElement.props.style],\n    });\n  };\nO;\n  public render(): React.ReactNode {\n    const { themedStyle, showcase } = this.props;\n\n    return (\n      <ScrollView\n        style={themedStyle.container}\n        bounces={false}>\n        {showcase.sections.map(this.renderSectionItem)}\n      </ScrollView>\n    );\n  }\n}\n\nexport const Showcase = withStyles(ShowcaseComponent, (theme: ThemeType) => {\n  return {\n    container: {\n      flex: 1,\n      backgroundColor: theme['background-basic-color-1'],\n    },\n    item: {\n      paddingHorizontal: 24,\n      paddingVertical: 16,\n    },\n    itemBorder: {\n      borderBottomWidth: 1,\n      borderBottomColor: theme['border-basic-color-3'],\n    },\n  };\n});\n\n","import {\n  dark,\n  light,\n} from '@eva-design/eva';\nimport { ThemeType } from '@kitten/theme';\n\nexport interface ThemeRegistry {\n  'Eva Light': ThemeType;\n  'Eva Dark': ThemeType;\n}\n\nexport type ThemeKey = keyof ThemeRegistry;\n\nexport const themes: ThemeRegistry = {\n  'Eva Light': light,\n  'Eva Dark': dark,\n};\n","import React from 'react';\nimport { ThemeKey } from './registry';\n\nexport interface ThemeContextType {\n  name: ThemeKey;\n  toggleTheme: (theme: ThemeKey) => void;\n}\n\nconst initialValue: ThemeContextType = {\n  name: 'Eva Light',\n  toggleTheme: (theme: ThemeKey) => {},\n};\n\nexport const ThemeContext: React.Context<ThemeContextType> = React.createContext(initialValue);\n","import React from 'react';\nimport {\n  ScrollViewProps,\n  View,\n} from 'react-native';\nimport { StyleType } from 'react-native-ui-kitten';\nimport { ShowcaseSettings } from './showcaseSettings.component';\nimport { Showcase } from './showcase.component';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseSetting,\n} from './type';\nimport {\n  ThemeContext,\n  themes,\n} from '../../../themes';\n\ninterface ContainerProps {\n  style?: StyleType;\n  showcase: ComponentShowcase;\n  settings?: ComponentShowcaseSetting[];\n  renderItem: (props: any) => React.ReactElement<any>;\n}\n\ninterface State {\n  settings: { [prop: string]: any };\n}\n\nexport class ShowcaseContainer extends React.Component<ContainerProps, State> {\n\n  public state: State = {\n    settings: {},\n  };\n\n  private onSelectSetting = (selectedSettings: { [prop: string]: any }) => {\n    const settings: { [prop: string]: any } = { ...this.state.settings, ...selectedSettings };\n\n    this.setState({ settings });\n  };\n\n  private onResetSettings = () => {\n    const settings = {};\n\n    this.setState({ settings });\n  };\n\n  private renderContent = ({ toggleTheme }): React.ReactElement<ScrollViewProps> => {\n    const { showcase, settings, renderItem, children, style } = this.props;\n\n    return (\n      <View style={[{ flex: 1 }, style]}>\n        <ShowcaseSettings\n          themes={themes}\n          settings={settings}\n          onSettingSelect={this.onSelectSetting}\n          onThemeSelect={toggleTheme}\n          onReset={this.onResetSettings}\n        />\n        {children}\n        <Showcase\n          showcase={showcase}\n          renderItem={renderItem}\n          settings={this.state.settings}\n        />\n      </View>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ThemeContext.Consumer>\n        {this.renderContent}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  AvatarProps,\n  AvatarElement,\n} from 'react-native-ui-kitten';\nimport { AvatarShowcase } from './avatarShowcase.component';\nimport { avatarShowcase } from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class AvatarContainer extends React.Component {\n\n  private renderItem = (props: AvatarProps): AvatarElement => {\n    return (\n      <AvatarShowcase {...props}/>\n    );\n  };\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={avatarShowcase}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationElement,\n  BottomNavigationProps,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  selectedIndex: number;\n}\n\nexport class BottomNavigationShowcase extends React.Component<BottomNavigationProps, State> {\n\n  public state: State = {\n    selectedIndex: 0,\n  };\n\n  private onSelect = (selectedIndex: number) => {\n    this.setState({ selectedIndex });\n  };\n\n  public render(): BottomNavigationElement {\n    return (\n      <BottomNavigation\n        {...this.props}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Image,\n  ImageProps,\n} from 'react-native';\nimport {\n  BottomNavigationTab,\n  StyleType,\n} from 'react-native-ui-kitten';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst Icon = (style: StyleType): React.ReactElement<ImageProps> => {\n  return (\n    <Image source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}/>\n  );\n};\n\nconst titleBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <BottomNavigationTab title='Tab 1'/>,\n      <BottomNavigationTab title='Tab 2'/>,\n      <BottomNavigationTab title='Tab 3'/>,\n    ],\n  },\n};\n\nconst iconBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <BottomNavigationTab icon={Icon}/>,\n      <BottomNavigationTab icon={Icon}/>,\n      <BottomNavigationTab icon={Icon}/>,\n    ],\n  },\n};\n\nconst iconTitleBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <BottomNavigationTab icon={Icon} title='Tab 1'/>,\n      <BottomNavigationTab icon={Icon} title='Tab 2'/>,\n      <BottomNavigationTab icon={Icon} title='Tab 3'/>,\n    ],\n  },\n};\n\nconst titleSection: ComponentShowcaseSection = {\n  title: 'Title',\n  items: [\n    titleBottomNavigation,\n  ],\n};\n\nconst iconSection: ComponentShowcaseSection = {\n  title: 'Icon',\n  items: [\n    iconBottomNavigation,\n  ],\n};\n\nconst iconTitleSection: ComponentShowcaseSection = {\n  title: 'Icon Title',\n  items: [\n    iconTitleBottomNavigation,\n  ],\n};\n\nexport const bottomNavigationShowcase: ComponentShowcase = {\n  sections: [\n    titleSection,\n    iconSection,\n    iconTitleSection,\n  ],\n};\n\nexport const bottomNavigationSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'noIndicator',\n    description: 'No Indicator',\n  },\n];\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  BottomNavigationElement,\n  BottomNavigationProps,\n} from 'react-native-ui-kitten';\nimport { BottomNavigationShowcase } from './bottomNavigationShowcase.component';\nimport {\n  bottomNavigationSettings,\n  bottomNavigationShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class BottomNavigationContainer extends React.Component {\n\n  private renderItem = (props: BottomNavigationProps): BottomNavigationElement => {\n    return (\n      <BottomNavigationShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={bottomNavigationShowcase}\n        settings={bottomNavigationSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import React from 'react';\nimport {\n  Button,\n  ButtonElement,\n  ButtonProps,\n} from 'react-native-ui-kitten';\n\nexport const ButtonShowcase = (props?: ButtonProps): ButtonElement => {\n  return (\n    <Button\n      {...props}>\n      BUTTON\n    </Button>\n  );\n};\n","import React from 'react';\nimport { ImageProps } from 'react-native';\nimport {\n  Icon,\n  StyleType,\n} from 'react-native-ui-kitten';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst IconElement = (style: StyleType): React.ReactElement<ImageProps> => (\n  <Icon name='star' {...style}/>\n);\n\nconst defaultButton: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst disabledButton: ComponentShowcaseItem = {\n  title: 'Disabled',\n  props: {\n    disabled: true,\n  },\n};\n\nconst leftIconButton: ComponentShowcaseItem = {\n  title: 'Left Icon',\n  props: {\n    icon: IconElement,\n  },\n};\n\nconst rightIconButton: ComponentShowcaseItem = {\n  title: 'Right Icon',\n  props: {\n    icon: IconElement,\n    style: {\n      flexDirection: 'row-reverse',\n    },\n  },\n};\n\nconst disabledIconButton: ComponentShowcaseItem = {\n  title: 'Disabled',\n  props: {\n    icon: IconElement,\n    disabled: true,\n  },\n};\n\nconst giantButton: ComponentShowcaseItem = {\n  title: 'Giant',\n  props: {\n    size: 'giant',\n  },\n};\n\nconst largeButton: ComponentShowcaseItem = {\n  title: 'Large',\n  props: {\n    size: 'large',\n  },\n};\n\nconst mediumButton: ComponentShowcaseItem = {\n  title: 'Medium',\n  props: {\n    size: 'medium',\n  },\n};\n\nconst smallButton: ComponentShowcaseItem = {\n  title: 'Small',\n  props: {\n    size: 'small',\n  },\n};\n\nconst tinyButton: ComponentShowcaseItem = {\n  title: 'Tiny',\n  props: {\n    size: 'tiny',\n  },\n};\nconst textSection: ComponentShowcaseSection = {\n  title: 'Text',\n  items: [\n    defaultButton,\n    disabledButton,\n  ],\n};\n\nconst iconSection: ComponentShowcaseSection = {\n  title: 'Icon',\n  items: [\n    leftIconButton,\n    rightIconButton,\n    disabledIconButton,\n  ],\n};\n\nconst sizeSection: ComponentShowcaseSection = {\n  title: 'Size',\n  items: [\n    giantButton,\n    largeButton,\n    mediumButton,\n    smallButton,\n    tinyButton,\n  ],\n};\n\nexport const buttonShowcase: ComponentShowcase = {\n  sections: [\n    textSection,\n    iconSection,\n    sizeSection,\n  ],\n};\n\nexport const buttonSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'filled',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'outline',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'ghost',\n  },\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'status',\n    value: 'control',\n  },\n  {\n    propertyName: 'status',\n    value: 'basic',\n  },\n];\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ButtonElement,\n  ButtonProps,\n} from 'react-native-ui-kitten';\nimport { ButtonShowcase } from './buttonShowcase.component';\nimport {\n  buttonShowcase,\n  buttonSettings,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class ButtonContainer extends React.Component {\n\n  private renderItem = (props: ButtonProps): ButtonElement => {\n    return (\n      <ButtonShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={buttonShowcase}\n        settings={buttonSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import React from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  ButtonGroupElement,\n  ButtonGroupProps,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupShowcase = (props?: ButtonGroupProps): ButtonGroupElement => {\n  return (\n    <ButtonGroup {...props}>\n      <Button>L</Button>\n      <Button>M</Button>\n      <Button>R</Button>\n    </ButtonGroup>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultButtonGroup: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst giantButtonGroup: ComponentShowcaseItem = {\n  title: 'Giant',\n  props: {\n    size: 'giant',\n  },\n};\n\nconst largeButtonGroup: ComponentShowcaseItem = {\n  title: 'Large',\n  props: {\n    size: 'large',\n  },\n};\n\nconst mediumButtonGroup: ComponentShowcaseItem = {\n  title: 'Medium',\n  props: {\n    size: 'medium',\n  },\n};\n\nconst smallButtonGroup: ComponentShowcaseItem = {\n  title: 'Small',\n  props: {\n    size: 'small',\n  },\n};\n\nconst tinyButtonGroup: ComponentShowcaseItem = {\n  title: 'Tiny',\n  props: {\n    size: 'tiny',\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultButtonGroup,\n  ],\n};\n\nconst sizeSection: ComponentShowcaseSection = {\n  title: 'Size',\n  items: [\n    giantButtonGroup,\n    largeButtonGroup,\n    mediumButtonGroup,\n    smallButtonGroup,\n    tinyButtonGroup,\n  ],\n};\n\nexport const buttonGroupShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    sizeSection,\n  ],\n};\n\nexport const buttonGroupSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'filled',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'outline',\n  },\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'status',\n    value: 'control',\n  },\n  {\n    propertyName: 'status',\n    value: 'basic',\n  },\n];\n","import React from 'react';\nimport {\n  ButtonGroupElement,\n  ButtonGroupProps,\n} from 'react-native-ui-kitten';\nimport { ButtonGroupShowcase } from './buttonGroupShowcase.component';\nimport {\n  buttonGroupSettings,\n  buttonGroupShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class ButtonGroupContainer extends React.Component {\n\n  private renderItem = (props: ButtonGroupProps): ButtonGroupElement => {\n    return (\n      <ButtonGroupShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={buttonGroupShowcase}\n        settings={buttonGroupSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  CheckBox,\n  CheckBoxElement,\n  CheckBoxProps,\n} from 'react-native-ui-kitten';\n\ninterface CheckBoxShowcaseComponentState {\n  checked: boolean;\n  indeterminate: boolean;\n}\n\nclass CheckBoxShowcaseComponent extends React.Component<CheckBoxProps, CheckBoxShowcaseComponentState> {\n\n  static defaultProps: CheckBoxProps = {\n    checked: true,\n    indeterminate: false,\n  };\n\n  public state: CheckBoxShowcaseComponentState = {\n    checked: this.props.checked,\n    indeterminate: this.props.indeterminate,\n  };\n\n  private onChange = (checked: boolean, indeterminate: boolean) => {\n    this.setState({ checked, indeterminate });\n  };\n\n  public render(): CheckBoxElement {\n    return (\n      <CheckBox\n        {...this.props}\n        checked={this.state.checked}\n        indeterminate={this.state.indeterminate}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nexport const CheckBoxShowcase = (props?: CheckBoxProps): CheckBoxElement => {\n  return (\n    <CheckBoxShowcaseComponent {...props}/>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst checkedCheckBox: ComponentShowcaseItem = {\n  title: 'Checked',\n  props: {\n    checked: true,\n  },\n};\n\nconst uncheckedCheckBox: ComponentShowcaseItem = {\n  title: 'Unchecked',\n  props: {\n    checked: false,\n  },\n};\n\nconst indeterminateCheckBox: ComponentShowcaseItem = {\n  title: 'Indeterminate',\n  props: {\n    indeterminate: true,\n  },\n};\n\nconst disabledCheckBox: ComponentShowcaseItem = {\n  title: 'Disabled',\n  props: {\n    disabled: true,\n  },\n};\n\nconst rightTextCheckBox: ComponentShowcaseItem = {\n  title: 'Right Text',\n  props: {\n    text: 'Place your text',\n  },\n};\n\nconst leftTextCheckBox: ComponentShowcaseItem = {\n  title: 'Left Text',\n  props: {\n    style: { flexDirection: 'row-reverse' },\n    text: 'Place your text',\n  },\n};\n\nconst textDisabledCheckBox: ComponentShowcaseItem = {\n  title: 'Disabled Text',\n  props: {\n    disabled: true,\n    text: 'Place your text',\n  },\n};\n\nconst stateSection: ComponentShowcaseSection = {\n  title: 'State',\n  items: [\n    checkedCheckBox,\n    uncheckedCheckBox,\n    indeterminateCheckBox,\n    disabledCheckBox,\n  ],\n};\n\nconst accessoriesSection: ComponentShowcaseSection = {\n  title: 'Accessories',\n  items: [\n    rightTextCheckBox,\n    leftTextCheckBox,\n    textDisabledCheckBox,\n  ],\n};\n\nexport const checkboxShowcase: ComponentShowcase = {\n  sections: [\n    stateSection,\n    accessoriesSection,\n  ],\n};\n\nexport const checkboxSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'status',\n    value: 'control',\n  },\n  {\n    propertyName: 'status',\n    value: 'basic',\n  },\n];\n","import React from 'react';\nimport {\n  CheckBoxElement,\n  CheckBoxProps,\n} from 'react-native-ui-kitten';\nimport { CheckBoxShowcase } from './checkboxShowcase.component';\nimport {\n  checkboxSettings,\n  checkboxShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class CheckBoxContainer extends React.Component {\n\n  private renderItem = (props: CheckBoxProps): CheckBoxElement => {\n    return (\n      <CheckBoxShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={checkboxShowcase}\n        settings={checkboxSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Button,\n  ButtonElement,\n  ButtonProps,\n} from 'react-native-ui-kitten';\n\nexport const DrawerShowcase = (props?: ButtonProps): ButtonElement => {\n  return (\n    <Button\n      {...props}>\n      TOGGLE DRAWER\n    </Button>\n  );\n};\n","import React from 'react';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\n\nconst defaultDrawer: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultDrawer,\n  ],\n};\n\nexport const drawerShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { NavigationScreenProps } from 'react-navigation';\nimport { DrawerProps } from 'react-native-ui-kitten';\nimport { DrawerShowcase } from './drawerShowcase.component';\nimport { drawerShowcase } from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class DrawerContainer extends React.Component<NavigationScreenProps> {\n\n  private toggleDrawer = () => {\n    this.props.navigation.toggleDrawer();\n  };\n\n  private renderItem = (props: DrawerProps): React.ReactElement<DrawerProps> => {\n    return (\n      <DrawerShowcase\n        {...props}\n        style={[styles.component, props.style]}\n        onPress={this.toggleDrawer}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={drawerShowcase}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultIcon: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst zoomIcon: ComponentShowcaseItem = {\n  title: 'Zoom',\n  props: {\n    animation: 'zoom',\n  },\n};\n\nconst pulseIcon: ComponentShowcaseItem = {\n  title: 'Pulse',\n  props: {\n    animation: 'pulse',\n  },\n};\n\nconst shakeIcon: ComponentShowcaseItem = {\n  title: 'Shake',\n  props: {\n    animation: 'shake',\n  },\n};\n\nconst infiniteExample: ComponentShowcaseItem = {\n  title: 'Infinite',\n  props: {\n    animation: 'shake',\n    animationConfig: {\n      cycles: -1,\n    },\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultIcon,\n  ],\n};\n\nconst animationSection: ComponentShowcaseSection = {\n  title: 'Animations',\n  items: [\n    zoomIcon,\n    pulseIcon,\n    shakeIcon,\n  ],\n};\n\nconst infiniteSection: ComponentShowcaseSection = {\n  title: 'Infinite Animation',\n  items: [\n    infiniteExample,\n  ],\n};\n\nexport const iconShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    animationSection,\n    infiniteSection,\n  ],\n};\n\nexport const iconSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'pack',\n    value: 'eva',\n  },\n  {\n    propertyName: 'pack',\n    value: 'ant',\n  },\n  {\n    propertyName: 'pack',\n    value: 'feather',\n  },\n  {\n    propertyName: 'pack',\n    value: 'font-awesome',\n  },\n  {\n    propertyName: 'pack',\n    value: 'material',\n  },\n  {\n    propertyName: 'pack',\n    value: 'material-community',\n  },\n];\n","import React from 'react';\nimport { ViewProps } from 'react-native';\nimport {\n  Icon,\n  IconProps,\n  Input,\n  StyleType,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  iconName: string;\n}\n\nconst DEFAULT_ICON: string = 'star';\n\nexport class IconShowcase extends React.Component<IconProps, State> {\n\n  private iconRef: React.RefObject<Icon<any>> = React.createRef();\n  private animationTimeout: NodeJS.Timeout;\n\n  public state: State = {\n    iconName: DEFAULT_ICON,\n  };\n\n  public componentDidMount() {\n    this.animationTimeout = setTimeout(this.startAnimation, 500);\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this.animationTimeout);\n  }\n\n  private onInputChangeText = (text: string) => {\n    this.state.iconName = text.length > 0 ? text : DEFAULT_ICON;\n  };\n\n  private onInputBlur = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  private startAnimation = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  private renderIcon = (style: StyleType) => {\n    return (\n      <Icon\n        ref={this.iconRef}\n        name={this.state.iconName}\n        {...this.props}\n        {...style}\n      />\n    );\n  };\n\n  public render(): React.ReactElement<ViewProps> {\n    return (\n      <Input\n        style={{ flex: 1 }}\n        placeholder='Type icon name'\n        autoCapitalize='none'\n        autoCorrect={false}\n        caption='Unfocus to change icon'\n        captionIcon={this.renderIcon}\n        icon={this.renderIcon}\n        onChangeText={this.onInputChangeText}\n        onBlur={this.onInputBlur}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  IconElement,\n  IconProps,\n} from 'react-native-ui-kitten';\nimport {\n  iconSettings,\n  iconShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { IconShowcase } from './iconShowcase.component';\n\nexport class IconContainer extends React.Component {\n\n  private renderItem = (props: IconProps): IconElement => {\n    return (\n      <IconShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={iconShowcase}\n        settings={iconSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Calendar,\n  CalendarElement,\n  CalendarProps,\n  Button,\n  Divider,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  date: Date;\n}\n\ninterface ComponentProps {\n  withFooter?: boolean;\n}\n\ntype Props = ComponentProps & CalendarProps<Date>;\n\nexport class CalendarShowcase extends React.Component<Props, State> {\n\n  static defaultProps: Partial<Props> = {\n    withFooter: false,\n  };\n\n  private calendarRef: React.RefObject<any> = React.createRef();\n\n  public state: State = {\n    date: this.props.date,\n  };\n\n  private onSelect = (date: Date) => {\n    this.setState({ date });\n  };\n\n  private onTodayPress = (): void => {\n    this.calendarRef.current.scrollToToday();\n  };\n\n  private renderFooterElement = (): React.ReactElement<any> => {\n    return (\n      <React.Fragment>\n        <Divider style={styles.footerDivider}/>\n        <View style={styles.footerContainer}>\n          <Button onPress={this.onTodayPress}>\n            Today\n          </Button>\n        </View>\n      </React.Fragment>\n    );\n  };\n\n  private renderFooter = (): React.ReactElement<any> => {\n    const { withFooter } = this.props;\n\n    return withFooter && this.renderFooterElement();\n  };\n\n  public render(): CalendarElement<Date> {\n    return (\n      <Calendar\n        {...this.props}\n        ref={this.calendarRef}\n        date={this.state.date}\n        renderFooter={this.renderFooter}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  footerContainer: {\n    paddingHorizontal: 8,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n  },\n  footerDivider: {\n    marginVertical: 12,\n  },\n});\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  DateService,\n  TranslationWidth,\n} from 'react-native-ui-kitten';\n// @ts-ignore\nimport _moment, {\n  default as _rollupMoment,\n  Moment,\n} from 'moment';\n\nconst moment = _rollupMoment || _moment;\n\nexport class MomentDateService extends DateService<Moment> {\n\n  protected localeData: {\n    firstDayOfWeek: number,\n    defaultFormat: string,\n    months: { [key: string]: string[] },\n    days: { [key: string]: string[] },\n  };\n\n  constructor(locale: string = 'en') {\n    super();\n    this.setLocale(locale);\n  }\n\n  public setLocale(locale: string) {\n    super.setLocale(locale);\n    this.setMomentLocaleData(locale);\n  }\n\n  public addDay(date: Moment, days: number): Moment {\n    return this.clone(date).add({ days });\n  }\n\n  public addMonth(date: Moment, months: number): Moment {\n    return this.clone(date).add({ months });\n  }\n\n  public addYear(date: Moment, years: number): Moment {\n    return this.clone(date).add({ years });\n  }\n\n  public clone(date: Moment): Moment {\n    return date.clone().locale(this.locale);\n  }\n\n  public compareDates(date1: Moment, date2: Moment): number {\n    return this.getYear(date1) - this.getYear(date2) ||\n      this.getMonth(date1) - this.getMonth(date2) ||\n      this.getDate(date1) - this.getDate(date2);\n  }\n\n  public createDate(year: number, month: number, date: number): Moment {\n    return moment.utc([year, month, date]);\n  }\n\n  public format(date: Moment, format: string): string {\n    if (date) {\n      return date.format(format || this.localeData.defaultFormat);\n    }\n\n    return '';\n  }\n\n  public getDate(date: Moment): number {\n    return this.clone(date).date();\n  }\n\n  public getDayOfWeek(date: Moment): number {\n    return this.clone(date).day();\n  }\n\n  public getDayOfWeekNames(style: TranslationWidth = TranslationWidth.SHORT): string[] {\n    return this.localeData.days[style];\n  }\n\n  public getFirstDayOfWeek(): number {\n    return this.localeData.firstDayOfWeek;\n  }\n\n  public getMonth(date: Moment): number {\n    return this.clone(date).month();\n  }\n\n  public getMonthEnd(date: Moment): Moment {\n    return this.clone(date).endOf('month');\n  }\n\n  public getMonthName(date: Moment, style: TranslationWidth = TranslationWidth.SHORT): string {\n    const month: number = this.getMonth(date);\n\n    return this.getMonthNameByIndex(month, style);\n  }\n\n  public getMonthNameByIndex(month: number, style: TranslationWidth = TranslationWidth.SHORT): string {\n    return this.localeData.months[style][month];\n  }\n\n  public getMonthStart(date: Moment): Moment {\n    return this.clone(date).startOf('month');\n  }\n\n  public getNumberOfDaysInMonth(date: Moment): number {\n    return this.clone(date).daysInMonth();\n  }\n\n  public getYear(date: Moment): number {\n    return this.clone(date).year();\n  }\n\n  public getYearEnd(date: Moment): Moment {\n    return this.clone(date).endOf('year');\n  }\n\n  public getYearStart(date: Moment): Moment {\n    return this.clone(date).startOf('year');\n  }\n\n  public isSameDay(date1: Moment, date2: Moment): boolean {\n    return this.isSameMonth(date1, date2) && this.getDate(date1) === this.getDate(date2);\n  }\n\n  public isSameMonth(date1: Moment, date2: Moment): boolean {\n    return this.isSameYear(date1, date2) && this.getMonth(date1) === this.getMonth(date2);\n  }\n\n  public isSameYear(date1: Moment, date2: Moment): boolean {\n    return this.getYear(date1) === this.getYear(date2);\n  }\n\n  public isValidDateString(date: string, format: string): boolean {\n    return moment(date, format).isValid();\n  }\n\n  public parse(date: string, format: string): Moment {\n    return moment(date, format);\n  }\n\n  public today(): Moment {\n    return moment();\n  }\n\n  public getId(): string {\n    return 'moment';\n  }\n\n  protected setMomentLocaleData(locale: string) {\n    const momentLocaleData = moment.localeData(locale);\n\n    this.localeData = {\n      firstDayOfWeek: momentLocaleData.firstDayOfWeek(),\n      defaultFormat: momentLocaleData.longDateFormat('L'),\n      months: {\n        [TranslationWidth.SHORT]: momentLocaleData.monthsShort(),\n        [TranslationWidth.LONG]: momentLocaleData.months(),\n      },\n      days: {\n        [TranslationWidth.SHORT]: momentLocaleData.weekdaysShort(),\n        [TranslationWidth.LONG]: momentLocaleData.weekdays(),\n      },\n    };\n  }\n}\n","/**\n * @license\n * Copyright Akveo. All Rights Reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n */\n\nimport {\n  I18nConfig,\n  NativeDateService,\n  NativeDateServiceOptions,\n} from 'react-native-ui-kitten';\n// @ts-ignore\nimport dateFnsParse, { default as rollupParse } from 'date-fns/parse';\n// @ts-ignore\nimport dateFnsFormat, { default as rollupFormat } from 'date-fns/format';\n\nconst parse = rollupParse || dateFnsParse;\nconst formatDate = rollupFormat || dateFnsFormat;\n\nexport interface DateFnsOptions extends NativeDateServiceOptions {\n  format: string;\n  parseOptions: {};\n  formatOptions: {};\n}\n\nexport class DateFnsService extends NativeDateService {\n\n  protected options: Partial<DateFnsOptions> = {\n    format: `DD/MM/YYYY`,\n  };\n\n  constructor(locale: string = 'en', options?: DateFnsOptions) {\n    super(locale, options);\n    this.options = options || this.options;\n  }\n\n  public format(date: Date, format: string): string {\n    if (date) {\n      return formatDate(date, format || this.options.format, this.options.formatOptions);\n    }\n\n    return '';\n  }\n\n  public parse(date: string, format: string): Date {\n    // Parse format is not supported in current version of date-fns\n    return this.parseDate(date);\n  }\n\n  private parseDate(date: string): Date {\n    return parse(date);\n  }\n\n  public getId(): string {\n    return 'date-fns';\n  }\n}\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  StyleType,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const CalendarCustomItem = ({ date }, style: StyleType): React.ReactElement<ViewProps> => {\n\n  const value: number = 100 * date.getDate() + Math.pow(date.getDate(), 2);\n\n  return (\n    <View\n      style={[styles.container, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      <Text style={[style.text, styles.value]}>{`${value}$`}</Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: 'normal',\n  },\n});\n","import moment from 'moment';\nimport {\n  CalendarViewModes,\n  NativeDateService,\n} from 'react-native-ui-kitten';\nimport { MomentDateService } from '@ui-kitten/moment';\nimport { DateFnsService } from '@ui-kitten/date-fns';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\nimport { CalendarCustomItem } from './calendarCustomItem.component';\n\nconst now: Date = new Date();\n\nconst defaultCalendar: ComponentShowcaseItem = {\n  props: {\n    min: new Date(now.getFullYear() - 12, 0, 1),\n    max: new Date(now.getFullYear() + 12, 0, 1),\n    withFooter: true,\n  },\n};\n\nconst momentCalendar: ComponentShowcaseItem = {\n  props: {\n    date: moment(),\n    dateService: new MomentDateService(),\n  },\n};\n\nconst dateFnsCalendar: ComponentShowcaseItem = {\n  props: {\n    date: now,\n    dateService: new DateFnsService(),\n  },\n};\n\nconst startViewCalendar: ComponentShowcaseItem = {\n  props: {\n    startView: CalendarViewModes.MONTH,\n  },\n};\n\nconst minMaxCalendar: ComponentShowcaseItem = {\n  props: {\n    min: new Date(now.getFullYear(), now.getMonth(), 15),\n    max: new Date(now.getFullYear(), now.getMonth() + 1, 15),\n  },\n};\n\nconst boundingCalendar: ComponentShowcaseItem = {\n  props: {\n    ...defaultCalendar.props,\n    boundingMonth: true,\n  },\n};\n\nconst customItemCalendar: ComponentShowcaseItem = {\n  props: {\n    ...defaultCalendar.props,\n    renderDay: CalendarCustomItem,\n  },\n};\n\nconst customTitlesCalendar: ComponentShowcaseItem = {\n  props: {\n    ...defaultCalendar.props,\n    title: (date: Date): string => {\n      return 'MODE';\n    },\n    todayTitle: (date: Date): string => {\n      return 'TODAY';\n    },\n  },\n};\n\nconst filterCalendar: ComponentShowcaseItem = {\n  props: {\n    ...defaultCalendar.props,\n    filter: (date: Date): boolean => {\n      return date.getDay() !== 0 && date.getDay() !== 6;\n    },\n  },\n};\n\nconst mondayCalendar: ComponentShowcaseItem = {\n  props: {\n    ...defaultCalendar.props,\n    dateService: new NativeDateService('en', {\n      startDayOfWeek: 1,\n    }),\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultCalendar,\n  ],\n};\n\nconst momentSection: ComponentShowcaseSection = {\n  title: 'Moment',\n  items: [\n    momentCalendar,\n  ],\n};\n\nconst dateFnsSection: ComponentShowcaseSection = {\n  title: 'Date FNS',\n  items: [\n    dateFnsCalendar,\n  ],\n};\n\nconst startViewSection: ComponentShowcaseSection = {\n  title: 'Start View',\n  items: [\n    startViewCalendar,\n  ],\n};\n\nconst minMaxSection: ComponentShowcaseSection = {\n  title: 'Date Bounds',\n  items: [\n    minMaxCalendar,\n  ],\n};\n\nconst boundingMonthSection: ComponentShowcaseSection = {\n  title: 'Bounding Month',\n  items: [\n    boundingCalendar,\n  ],\n};\n\nconst customItemSection: ComponentShowcaseSection = {\n  title: 'Custom Day',\n  items: [\n    customItemCalendar,\n  ],\n};\n\nconst customTitlesSection: ComponentShowcaseSection = {\n  title: 'Custom Titles',\n  items: [\n    customTitlesCalendar,\n  ],\n};\n\nconst filterSection: ComponentShowcaseSection = {\n  title: 'Filter',\n  items: [\n    filterCalendar,\n  ],\n};\n\nconst startDayOfWeekSection: ComponentShowcaseSection = {\n  title: 'Start Day of Week',\n  items: [\n    mondayCalendar,\n  ],\n};\n\nexport const calendarShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    // startDayOfWeekSection,\n    // customItemSection,\n    // momentSection,\n    // dateFnsSection,\n    // startViewSection,\n    // minMaxSection,\n    // boundingMonthSection,\n    // filterSection,\n    // customTitlesSection,\n  ],\n};\n","import React from 'react';\nimport { CalendarProps } from 'react-native-ui-kitten';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { CalendarShowcase } from './calendarShowcase.component';\nimport { calendarShowcase } from './type';\n\nexport class CalendarContainer extends React.Component {\n\n  private renderItem = (props: CalendarProps<Date>): React.ReactElement<CalendarProps<Date>> => {\n    return (\n      <CalendarShowcase style={{flex: 1}} {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={calendarShowcase}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Input,\n  InputElement,\n  InputProps,\n} from 'react-native-ui-kitten';\n\nexport const InputShowcase = (props?: InputProps): InputElement => {\n  return (\n    <Input\n      {...props}\n      placeholder='Place your Text'\n    />\n  );\n};\n","import React from 'react';\nimport {\n  Icon,\n  StyleType,\n} from 'react-native-ui-kitten';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\n\nconst defaultInput: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst disabledInput: ComponentShowcaseItem = {\n  title: 'Disabled',\n  props: {\n    disabled: true,\n  },\n};\n\nconst iconInput: ComponentShowcaseItem = {\n  title: 'Icon',\n  props: {\n    icon: (style: StyleType) => (\n      <Icon name='star' {...style} />\n    ),\n  },\n};\n\nconst labelInput: ComponentShowcaseItem = {\n  title: 'Label',\n  props: {\n    label: 'Place your text',\n  },\n};\n\nconst captionInput: ComponentShowcaseItem = {\n  title: 'Caption',\n  props: {\n    caption: 'Place your text',\n  },\n};\n\nconst captionIconInput: ComponentShowcaseItem = {\n  title: 'Caption Icon',\n  props: {\n    caption: 'Place your text',\n    captionIcon: (style: StyleType) => (\n      <Icon name='star' {...style} />\n    ),\n  },\n};\n\nconst stateSection: ComponentShowcaseSection = {\n  title: 'State',\n  items: [\n    defaultInput,\n    disabledInput,\n  ],\n};\n\nconst accessoriesSection: ComponentShowcaseSection = {\n  title: 'Accessories',\n  items: [\n    iconInput,\n    labelInput,\n    captionInput,\n    captionIconInput,\n  ],\n};\n\nexport const inputShowcase: ComponentShowcase = {\n  sections: [\n    stateSection,\n    accessoriesSection,\n  ],\n};\n\nexport const inputSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'size',\n    value: 'small',\n  },\n  {\n    propertyName: 'size',\n    value: 'medium',\n  },\n  {\n    propertyName: 'size',\n    value: 'large',\n  },\n];\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  InputElement,\n  InputProps,\n} from 'react-native-ui-kitten';\nimport { InputShowcase } from './inputShowcase.component';\nimport {\n  inputSettings,\n  inputShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class InputContainer extends React.Component {\n\n  private renderItem = (props: InputProps): InputElement => {\n    return (\n      <InputShowcase\n        style={styles.component}\n        {...props}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={inputShowcase}\n        settings={inputSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport {\n  Layout,\n  LayoutElement,\n  LayoutProps,\n} from 'react-native-ui-kitten';\n\nexport const LayoutShowcase = (props?: LayoutProps): LayoutElement => {\n  return (\n    <Layout {...props}/>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultLayout: ComponentShowcaseItem = {\n  props: {},\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultLayout,\n  ],\n};\n\nexport const layoutShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\nexport const layoutSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'level',\n    value: '1',\n    description: 'level 1',\n  },\n  {\n    propertyName: 'level',\n    value: '2',\n    description: 'level 2',\n  },\n  {\n    propertyName: 'level',\n    value: '3',\n    description: 'level 3',\n  },\n  {\n    propertyName: 'level',\n    value: '4',\n    description: 'level 4',\n  },\n];\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  LayoutElement,\n  LayoutProps,\n} from 'react-native-ui-kitten';\nimport { LayoutShowcase } from './layoutShowcase.component';\nimport {\n  layoutShowcase,\n  layoutSettings,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class LayoutContainer extends React.Component {\n\n  private renderItem = (props: LayoutProps): LayoutElement => {\n    return (\n      <LayoutShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={layoutShowcase}\n        settings={layoutSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n    height: 256,\n  },\n});\n\n","import React from 'react';\nimport {\n  ListProps,\n  List,\n  ListElement,\n} from 'react-native-ui-kitten';\n\nexport const ListShowcase = (props?: ListProps): ListElement => {\n  return (\n    <List {...props}/>\n  );\n};\n","import React from 'react';\nimport {\n  CheckBox,\n  CheckBoxProps,\n  Icon,\n  ListItem,\n  ListItemElement,\n  ListItemProps,\n  IconElement,\n  StyleType,\n} from 'react-native-ui-kitten';\n\nexport const ListItemShowcase = (props?: ListItemProps): ListItemElement => {\n  return (\n    <ListItem {...props}/>\n  );\n};\n\nexport const ListItemIconShowcase = (props?: ListItemProps): ListItemElement => {\n\n  const StarIcon = (style: StyleType, index: number): IconElement => (\n    <Icon name='star' {...style}/>\n  );\n\n  return (\n    <ListItem {...props} icon={StarIcon}/>\n  );\n};\n\nexport const ListItemAccessoryShowcase = (props?: ListItemProps): ListItemElement => {\n\n  const AccessoryElement = (style: StyleType, index: number): React.ReactElement<CheckBoxProps> => (\n    <CheckBox checked={index % 2 === 0}/>\n  );\n\n  return (\n    <ListItem {...props} accessory={AccessoryElement}/>\n  );\n};\n\nexport const ListItemIconAccessoryShowcase = (props?: ListItemProps): ListItemElement => {\n\n  const StarIcon = (style: StyleType, index: number): IconElement => (\n    <Icon {...style} name='star' />\n  );\n\n  const AccessoryElement = (style: StyleType, index: number): React.ReactElement<CheckBoxProps> => (\n    <CheckBox checked={index % 2 === 0}/>\n  );\n\n  return (\n    <ListItem {...props} icon={StarIcon} accessory={AccessoryElement}/>\n  );\n};\n","import React from 'react';\nimport { ListRenderItemInfo } from 'react-native';\nimport {\n  ListItemElement,\n  ListItemProps,\n} from 'react-native-ui-kitten';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\nimport {\n  ListItemAccessoryShowcase,\n  ListItemIconAccessoryShowcase,\n  ListItemIconShowcase,\n  ListItemShowcase,\n} from './listItemShowcase.component';\n\ninterface ListData {\n  title: string;\n  description: string;\n}\n\nconst data: ListData[] = new Array(42).fill(  {\n  title: 'Title',\n  description: 'Description',\n});\n\nconst renderListItem = (info: ListRenderItemInfo<ListData>): ListItemElement => {\n  return (\n    <ListItemShowcase {...info.item}/>\n  );\n};\n\nconst renderIconListItem = (info: ListRenderItemInfo<ListData>): ListItemElement => {\n  return (\n    <ListItemIconShowcase {...info.item}/>\n  );\n};\n\nconst renderAccessoryListItem = (info: ListRenderItemInfo<ListData>): ListItemElement => {\n  return (\n    <ListItemAccessoryShowcase {...info.item}/>\n  );\n};\n\nconst renderIconAccessoryListItem = (info: ListRenderItemInfo<ListData>): ListItemElement => {\n  return (\n    <ListItemIconAccessoryShowcase {...info.item}/>\n  );\n};\n\nexport const defaultList: ComponentShowcaseItem = {\n  props: {\n    data: data,\n    renderItem: renderListItem,\n  },\n};\n\nexport const defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultList,\n  ],\n};\n\nexport const listShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\nexport const listSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'renderItem',\n    value: renderIconListItem,\n    description: 'icon',\n  },\n  {\n    propertyName: 'renderItem',\n    value: renderAccessoryListItem,\n    description: 'accessory',\n  },\n  {\n    propertyName: 'renderItem',\n    value: renderIconAccessoryListItem,\n    description: 'icon accessory',\n  },\n];\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ListElement,\n  ListProps,\n} from 'react-native-ui-kitten';\nimport { ListShowcase } from './listShowcase';\nimport {\n  listSettings,\n  listShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class ListContainer extends React.Component {\n\n  private renderItem = (props: ListProps): ListElement => {\n    return (\n      <ListShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={listShowcase}\n        settings={listSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import React from 'react';\nimport {\n  Menu,\n  MenuProps,\n  MenuElement,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  selectedIndex: number;\n}\n\nexport class MenuShowcase extends React.Component<MenuProps, State> {\n\n  public state: State = {\n    selectedIndex: null,\n  };\n\n  private onSelect = (selectedIndex: number): void => {\n    this.setState({ selectedIndex });\n  };\n\n  public render(): MenuElement {\n    return (\n      <Menu\n        {...this.props}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  MenuItemType,\n  StyleType,\n  Icon,\n  IconElement,\n} from 'react-native-ui-kitten';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst StarIcon = (style: StyleType): IconElement => (\n  <Icon {...style}  name='star' />\n);\n\nconst defaultMenuItems: MenuItemType[] = [\n  { title: 'Item 1' },\n  { title: 'Item 2' },\n  { title: 'Item 3' },\n];\n\nconst withIconMenuItems: MenuItemType[] = [\n  {\n    title: 'Item 1',\n    icon: StarIcon,\n  },\n  {\n    title: 'Item 2',\n    icon: StarIcon,\n  },\n  {\n    title: 'Item 3',\n    icon: StarIcon,\n  },\n];\n\nconst withDisabledItemMenuItems: MenuItemType[] = [\n  {\n    title: 'Item 1',\n    icon: StarIcon,\n  },\n  {\n    title: 'Item 2',\n    icon: StarIcon,\n    disabled: true,\n  },\n  {\n    title: 'Item 3',\n    icon: StarIcon,\n  },\n];\n\nconst withGroupsMenuItems: MenuItemType[] = [\n  {\n    title: 'Item 1',\n    icon: StarIcon,\n  },\n  {\n    title: 'Item 2',\n    icon: StarIcon,\n    subItems: [\n      {\n        title: 'Item 21',\n        icon: StarIcon,\n        disabled: true,\n      },\n      {\n        title: 'Item 22',\n        icon: StarIcon,\n      },\n      {\n        title: 'Item 23',\n        icon: StarIcon,\n      },\n    ],\n  },\n  {\n    title: 'Item 3',\n    icon: StarIcon,\n  },\n];\n\nconst defaultMenu: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {\n    data: defaultMenuItems,\n  },\n};\n\nconst withIconsMenu: ComponentShowcaseItem = {\n  title: 'Icon',\n  props: {\n    data: withIconMenuItems,\n  },\n};\n\nconst withDisabledItemMenu: ComponentShowcaseItem = {\n  title: 'Disabled Item',\n  props: {\n    data: withDisabledItemMenuItems,\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultMenu,\n    withIconsMenu,\n    withDisabledItemMenu,\n  ],\n};\n\nconst withGroupsMenu: ComponentShowcaseItem = {\n  title: 'Groups',\n  props: {\n    data: withGroupsMenuItems,\n  },\n};\n\nconst withGroupsSection: ComponentShowcaseSection = {\n  title: 'With Groups',\n  items: [\n    withGroupsMenu,\n  ],\n};\n\nexport const menuShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    withGroupsSection,\n  ],\n};\n\nexport const menuSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'default',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'noDivider',\n  },\n];\n","import React from 'react';\nimport {\n  MenuProps,\n  MenuElement,\n} from 'react-native-ui-kitten';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { MenuShowcase } from './menuShowcase.component';\nimport {\n  menuShowcase,\n  menuSettings,\n} from './type';\n\nexport class MenuContainer extends React.Component {\n\n  private renderItem = (props: MenuProps): MenuElement => {\n    return (\n      <MenuShowcase{...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={menuShowcase}\n        settings={menuSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n","import React from 'react';\nimport { ViewProps } from 'react-native';\nimport {\n  Button,\n  Popover,\n  PopoverElement,\n  PopoverProps,\n  Text,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  popoverVisible: boolean;\n}\n\nexport class PopoverShowcase extends React.Component<PopoverProps, State> {\n\n  public state: State = {\n    popoverVisible: false,\n  };\n\n  private togglePopover = () => {\n    const popoverVisible: boolean = !this.state.popoverVisible;\n\n    this.setState({ popoverVisible });\n  };\n\n  private renderPopoverContent = (): React.ReactElement<ViewProps> => {\n    return (\n      <Text>\n        Hi! I'm Popover!\n      </Text>\n    );\n  };\n\n  public render(): PopoverElement {\n    return (\n      <Popover\n        {...this.props}\n        visible={this.state.popoverVisible}\n        content={this.renderPopoverContent()}\n        onBackdropPress={this.togglePopover}>\n        <Button onPress={this.togglePopover}>SHOW POPOVER</Button>\n      </Popover>\n    );\n  }\n}\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultPopover: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  items: [\n    defaultPopover,\n  ],\n};\n\nexport const popoverShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\nexport const popoverSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'placement',\n    value: 'left',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom end',\n  },\n];\n","import React from 'react';\nimport {\n  PopoverElement,\n  PopoverProps,\n} from 'react-native-ui-kitten';\nimport { PopoverShowcase } from './popoverShowcase.component';\nimport {\n  popoverShowcase,\n  popoverSettings,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class PopoverContainer extends React.Component {\n\n  private renderItem = (props: PopoverProps): PopoverElement => {\n    return (\n      <PopoverShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={popoverShowcase}\n        settings={popoverSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport {\n  Radio,\n  RadioElement,\n  RadioProps,\n} from 'react-native-ui-kitten';\n\ninterface RadioShowcaseComponentState {\n  checked: boolean;\n}\n\nclass RadioShowcaseComponent extends React.Component<RadioProps, RadioShowcaseComponentState> {\n\n  static defaultProps: RadioProps = {\n    checked: true,\n  };\n\n  public state: RadioShowcaseComponentState = {\n    checked: this.props.checked,\n  };\n\n  private onChange = (checked: boolean) => {\n    this.setState({ checked });\n  };\n\n  public render(): RadioElement {\n    return (\n      <Radio\n        {...this.props}\n        checked={this.state.checked}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nexport const RadioShowcase = (props?: RadioProps): RadioElement => {\n  return (\n    <RadioShowcaseComponent {...props}/>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst checkedRadio: ComponentShowcaseItem = {\n  title: 'Checked',\n  props: {\n    checked: true,\n  },\n};\n\nconst uncheckedRadio: ComponentShowcaseItem = {\n  title: 'Unchecked',\n  props: {\n    checked: false,\n  },\n};\n\nconst disabledCheckedRadio: ComponentShowcaseItem = {\n  title: 'Disabled Checked',\n  props: {\n    checked: true,\n    disabled: true,\n  },\n};\n\nconst disabledUncheckedRadio: ComponentShowcaseItem = {\n  title: 'Disabled Unchecked',\n  props: {\n    checked: false,\n    disabled: true,\n  },\n};\n\nconst rightTextRadio: ComponentShowcaseItem = {\n  title: 'Right Text',\n  props: {\n    text: 'Place your text',\n  },\n};\n\nconst leftTextRadio: ComponentShowcaseItem = {\n  title: 'Left Text',\n  props: {\n    style: { flexDirection: 'row-reverse' },\n    text: 'Place your text',\n  },\n};\n\nconst textDisabledRadio: ComponentShowcaseItem = {\n  title: 'Text Disabled',\n  props: {\n    disabled: true,\n    text: 'Place your text',\n  },\n};\n\nconst stateSection: ComponentShowcaseSection = {\n  title: 'State',\n  items: [\n    checkedRadio,\n    uncheckedRadio,\n    disabledCheckedRadio,\n    disabledUncheckedRadio,\n  ],\n};\n\nconst accessoriesSection: ComponentShowcaseSection = {\n  title: 'Accessories',\n  items: [\n    rightTextRadio,\n    leftTextRadio,\n    textDisabledRadio,\n  ],\n};\n\nexport const radioShowcase: ComponentShowcase = {\n  sections: [\n    stateSection,\n    accessoriesSection,\n  ],\n};\n\nexport const radioSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'status',\n    value: 'control',\n  },\n  {\n    propertyName: 'status',\n    value: 'basic',\n  },\n  {\n    propertyName: 'checked',\n    value: true,\n  },\n];\n","import React from 'react';\nimport {\n  RadioElement,\n  RadioProps,\n} from 'react-native-ui-kitten';\nimport { RadioShowcase } from './radioShowcase.component';\nimport {\n  radioSettings,\n  radioShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class RadioContainer extends React.Component {\n\n  private renderItem = (props: RadioProps): RadioElement => {\n    return (\n      <RadioShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={radioShowcase}\n        settings={radioSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Radio,\n  RadioGroup,\n  RadioGroupElement,\n  RadioGroupProps,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  selectedIndex: number;\n}\n\nexport class RadioGroupShowcase extends React.Component<RadioGroupProps, State> {\n\n  public state: State = {\n    selectedIndex: 0,\n  };\n\n  private onChange = (selectedIndex: number) => {\n    this.setState({ selectedIndex });\n  };\n\n  public render(): RadioGroupElement {\n    return (\n      <RadioGroup\n        selectedIndex={this.state.selectedIndex}\n        onChange={this.onChange}>\n        <Radio text='Option 1'/>\n        <Radio text='Option 2'/>\n        <Radio text='Option 3'/>\n      </RadioGroup>\n    );\n  }\n}\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\nconst filledButtonGroup: ComponentShowcaseItem = {\n  title: 'Filled',\n  props: {\n    appearance: 'filled',\n  },\n};\n\nconst outlineButtonGroup: ComponentShowcaseItem = {\n  title: 'Outline',\n  props: {\n    appearance: 'outline',\n  },\n};\n\nconst giantButtonGroup: ComponentShowcaseItem = {\n  title: 'Giant',\n  props: {\n    size: 'giant',\n  },\n};\n\nconst largeButtonGroup: ComponentShowcaseItem = {\n  title: 'Large',\n  props: {\n    size: 'large',\n  },\n};\n\nconst mediumButtonGroup: ComponentShowcaseItem = {\n  title: 'Medium',\n  props: {\n    size: 'medium',\n  },\n};\n\nconst smallButtonGroup: ComponentShowcaseItem = {\n  title: 'Small',\n  props: {\n    size: 'small',\n  },\n};\n\nconst tinyButtonGroup: ComponentShowcaseItem = {\n  title: 'Tiny',\n  props: {\n    size: 'tiny',\n  },\n};\n\nconst appearanceSection: ComponentShowcaseSection = {\n  title: 'Appearance',\n  items: [\n    filledButtonGroup,\n    outlineButtonGroup,\n  ],\n};\n\nexport const radioGroupShowcase: ComponentShowcase = {\n  sections: [\n    appearanceSection,\n  ],\n};\n","import React from 'react';\nimport {\n  RadioGroupElement,\n  RadioGroupProps,\n} from 'react-native-ui-kitten';\nimport { RadioGroupShowcase } from './radioGroupShowcase.component';\nimport { radioGroupShowcase } from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class RadioGroupContainer extends React.Component {\n\n  private renderItem = (props: RadioGroupProps): RadioGroupElement => {\n    return (\n      <RadioGroupShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={radioGroupShowcase}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  Spinner,\n  SpinnerProps,\n  SpinnerElement,\n} from 'react-native-ui-kitten';\n\nexport const SpinnerShowcase = (props?: SpinnerProps): SpinnerElement => {\n  if (props.status === 'white') {\n    return WhiteSpinner(props);\n  } else {\n    return DefaultSpinner(props);\n  }\n};\n\nconst DefaultSpinner = (props?: SpinnerProps): SpinnerElement => {\n  return (\n    <Spinner {...props} />\n  );\n};\n\nconst WhiteSpinner = (props?: SpinnerProps): React.ReactElement<ViewProps> => {\n  return (\n    <View style={styles.blackSpinnerContainer}>\n      <Spinner {...props} />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  blackSpinnerContainer: {\n    width: 40,\n    height: 40,\n    backgroundColor: '#7f7e82',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst giantSpinner: ComponentShowcaseItem = {\n  title: 'Giant',\n  props: {\n    size: 'giant',\n  },\n};\n\nconst largeSpinner: ComponentShowcaseItem = {\n  title: 'Large',\n  props: {\n    size: 'large',\n  },\n};\n\nconst mediumSpinner: ComponentShowcaseItem = {\n  title: 'Medium',\n  props: {\n    size: 'medium',\n  },\n};\n\nconst smallSpinner: ComponentShowcaseItem = {\n  title: 'Small',\n  props: {\n    size: 'small',\n  },\n};\n\nconst tinySpinner: ComponentShowcaseItem = {\n  title: 'Tiny',\n  props: {\n    size: 'tiny',\n  },\n};\n\nconst primarySpinner: ComponentShowcaseItem = {\n  title: 'Primary',\n  props: {\n    status: 'primary',\n  },\n};\n\nconst successSpinner: ComponentShowcaseItem = {\n  title: 'Success',\n  props: {\n    status: 'success',\n  },\n};\n\nconst infoSpinner: ComponentShowcaseItem = {\n  title: 'Info',\n  props: {\n    status: 'info',\n  },\n};\n\nconst warningSpinner: ComponentShowcaseItem = {\n  title: 'Warning',\n  props: {\n    status: 'warning',\n  },\n};\n\nconst dangerSpinner: ComponentShowcaseItem = {\n  title: 'Danger',\n  props: {\n    status: 'danger',\n  },\n};\n\nconst alternativeSpinner: ComponentShowcaseItem = {\n  title: 'Alternative',\n  props: {\n    status: 'alternative',\n  },\n};\n\nconst sizeSection: ComponentShowcaseSection = {\n  title: 'Size',\n  items: [\n    giantSpinner,\n    largeSpinner,\n    mediumSpinner,\n    smallSpinner,\n    tinySpinner,\n  ],\n};\n\nconst statusSection: ComponentShowcaseSection = {\n  title: 'Status',\n  items: [\n    primarySpinner,\n    successSpinner,\n    infoSpinner,\n    warningSpinner,\n    dangerSpinner,\n    alternativeSpinner,\n  ],\n};\n\nexport const spinnerShowcase: ComponentShowcase = {\n  sections: [\n    sizeSection,\n    statusSection,\n  ],\n};\n\nexport const spinnerSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'animating',\n    value: true,\n  },\n  {\n    propertyName: 'animating',\n    value: false,\n  },\n];\n\n","import React from 'react';\nimport {\n  SpinnerProps,\n  SpinnerElement,\n} from 'react-native-ui-kitten';\nimport { SpinnerShowcase } from './spinnerShowcase.component';\nimport {\n  spinnerSettings,\n  spinnerShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class SpinnerContainer extends React.Component {\n\n  private renderItem = (props: SpinnerProps): SpinnerElement => {\n    return (\n      <SpinnerShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={spinnerShowcase}\n        settings={spinnerSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  TabView,\n  TabViewElement,\n  TabViewProps,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  selectedIndex: number;\n}\n\nexport class TabViewShowcase extends React.Component<TabViewProps, State> {\n\n  public state: State = {\n    selectedIndex: 0,\n  };\n\n  private onSelect = (selectedIndex: number) => {\n    this.setState({ selectedIndex });\n  };\n\n  public render(): TabViewElement {\n    return (\n      <TabView\n        {...this.props}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Tab,\n  Text,\n  Layout,\n  StyleType,\n  IconElement,\n  Icon,\n} from 'react-native-ui-kitten';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\nconst StarIcon = (style: StyleType): IconElement => {\n  return (\n    <Icon {...style} name='star'/>\n  );\n};\n\nconst titleBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <Tab title='Tab 1'>\n        <Layout>\n          <Text>Tab 1</Text>\n        </Layout>\n      </Tab>,\n      <Tab title='Tab 2'>\n        <Layout>\n          <Text>Tab 2</Text>\n        </Layout>\n      </Tab>,\n      <Tab title='Tab 3'>\n        <Layout>\n          <Text>Tab 3</Text>\n        </Layout>\n      </Tab>,\n    ],\n  },\n};\n\nconst iconBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <Tab icon={StarIcon}>\n        <Layout>\n          <Text>Tab 1</Text>\n        </Layout>\n      </Tab>,\n      <Tab icon={StarIcon}>\n        <Layout>\n          <Text>Tab 2</Text>\n        </Layout>\n      </Tab>,\n      <Tab icon={StarIcon}>\n        <Layout>\n          <Text>Tab 3</Text>\n        </Layout>\n      </Tab>,\n    ],\n  },\n};\n\nconst iconTitleBottomNavigation: ComponentShowcaseItem = {\n  props: {\n    children: [\n      <Tab icon={Icon} title='Tab 1'>\n        <Layout>\n          <Text>Tab 1</Text>\n        </Layout>\n      </Tab>,\n      <Tab icon={Icon} title='Tab 2'>\n        <Layout>\n          <Text>Tab 2</Text>\n        </Layout>\n      </Tab>,\n      <Tab icon={Icon} title='Tab 3'>\n        <Layout>\n          <Text>Tab 3</Text>\n        </Layout>\n      </Tab>,\n    ],\n  },\n};\n\nconst titleSection: ComponentShowcaseSection = {\n  title: 'Title',\n  items: [\n    titleBottomNavigation,\n  ],\n};\n\nconst iconSection: ComponentShowcaseSection = {\n  title: 'Icon',\n  items: [\n    iconBottomNavigation,\n  ],\n};\n\nconst iconTitleSection: ComponentShowcaseSection = {\n  title: 'Icon Title',\n  items: [\n    iconTitleBottomNavigation,\n  ],\n};\n\nexport const tabViewShowcase: ComponentShowcase = {\n  sections: [\n    titleSection,\n    iconSection,\n    iconTitleSection,\n  ],\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  TabViewElement,\n  TabViewProps,\n} from 'react-native-ui-kitten';\nimport { TabViewShowcase } from './tabViewShowcase.component';\nimport { tabViewShowcase } from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class TabViewContainer extends React.Component {\n\n  private renderItem = (props: TabViewProps): TabViewElement => {\n    return (\n      <TabViewShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={tabViewShowcase}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import React from 'react';\nimport {\n  Button,\n  Tooltip,\n  TooltipElement,\n  TooltipProps,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  tooltipVisible: boolean;\n}\n\nexport class TooltipShowcase extends React.Component<TooltipProps, State> {\n\n  public state: State = {\n    tooltipVisible: false,\n  };\n\n  private toggleTooltip = () => {\n    const tooltipVisible: boolean = !this.state.tooltipVisible;\n\n    this.setState({ tooltipVisible });\n  };\n\n  public render(): TooltipElement {\n    return (\n      <Tooltip\n        {...this.props}\n        visible={this.state.tooltipVisible}\n        text='Hi! I am Tooltip!'\n        onBackdropPress={this.toggleTooltip}>\n        <Button onPress={this.toggleTooltip}>SHOW TOOLTIP</Button>\n      </Tooltip>\n    );\n  }\n}\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultTooltip: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  items: [\n    defaultTooltip,\n  ],\n};\n\nexport const tooltipShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\nexport const tooltipSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'placement',\n    value: 'left',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom end',\n  },\n];\n","import React from 'react';\nimport {\n  TooltipElement,\n  TooltipProps,\n} from 'react-native-ui-kitten';\nimport { TooltipShowcase } from './tooltipShowcase.component';\nimport {\n  tooltipShowcase,\n  tooltipSettings,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class TooltipContainer extends React.Component {\n\n  private renderItem = (props: TooltipProps): TooltipElement => {\n    return (\n      <TooltipShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={tooltipShowcase}\n        settings={tooltipSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport {\n  Text,\n  TextElement,\n  TextProps,\n} from 'react-native-ui-kitten';\n\nexport const TextShowcase = (props?: TextProps): TextElement => {\n  return (\n    <Text\n      {...props}>\n      Text\n    </Text>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst h1Text: ComponentShowcaseItem = {\n  title: 'H1 Headline',\n  props: {\n    category: 'h1',\n  },\n};\n\nconst h2Text: ComponentShowcaseItem = {\n  title: 'H2 Headline',\n  props: {\n    category: 'h2',\n  },\n};\n\nconst h3Text: ComponentShowcaseItem = {\n  title: 'H3 Headline',\n  props: {\n    category: 'h3',\n  },\n};\n\nconst h4Text: ComponentShowcaseItem = {\n  title: 'H4 Headline',\n  props: {\n    category: 'h4',\n  },\n};\n\nconst h5Text: ComponentShowcaseItem = {\n  title: 'H5 Headline',\n  props: {\n    category: 'h5',\n  },\n};\n\nconst h6Text: ComponentShowcaseItem = {\n  title: 'H6 Headline',\n  props: {\n    category: 'h6',\n  },\n};\n\nconst s1Text: ComponentShowcaseItem = {\n  title: 'S1 Subtitle',\n  props: {\n    category: 's1',\n  },\n};\n\nconst s2Text: ComponentShowcaseItem = {\n  title: 'S2 Subtitle',\n  props: {\n    category: 's2',\n  },\n};\n\nconst p1Text: ComponentShowcaseItem = {\n  title: 'P1 Paragraph',\n  props: {\n    category: 'p1',\n  },\n};\n\nconst p2Text: ComponentShowcaseItem = {\n  title: 'P2 Paragraph',\n  props: {\n    category: 'p2',\n  },\n};\n\nconst c1Text: ComponentShowcaseItem = {\n  title: 'C1 Caption',\n  props: {\n    category: 'c1',\n  },\n};\n\nconst c2Text: ComponentShowcaseItem = {\n  title: 'C2 Caption',\n  props: {\n    category: 'c2',\n  },\n};\n\nconst labelText: ComponentShowcaseItem = {\n  title: 'Label',\n  props: {\n    category: 'label',\n  },\n};\n\nconst categorySection: ComponentShowcaseSection = {\n  title: 'Category',\n  items: [\n    h1Text,\n    h2Text,\n    h3Text,\n    h4Text,\n    h5Text,\n    h6Text,\n    s1Text,\n    s2Text,\n    p1Text,\n    p2Text,\n    c1Text,\n    c2Text,\n    labelText,\n  ],\n};\n\nexport const textShowcase: ComponentShowcase = {\n  sections: [\n    categorySection,\n  ],\n};\n\nexport const textSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'alternative',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'hint',\n  },\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n];\n","import React from 'react';\nimport {\n  TextElement,\n  TextProps,\n} from 'react-native-ui-kitten';\nimport { TextShowcase } from './textShowcase.component';\nimport {\n  textSettings,\n  textShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class TextContainer extends React.Component {\n\n  private renderItem = (props: TextProps): TextElement => {\n    return (\n      <TextShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={textShowcase}\n        settings={textSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Toggle,\n  ToggleElement,\n  ToggleProps,\n} from 'react-native-ui-kitten';\n\ninterface ToggleShowcaseComponentState {\n  checked: boolean;\n}\n\nclass ToggleShowcaseComponent extends React.Component<ToggleProps, ToggleShowcaseComponentState> {\n\n  static defaultProps: ToggleProps = {\n    checked: true,\n  };\n\n  public state: ToggleShowcaseComponentState = {\n    checked: this.props.checked,\n  };\n\n  private onChange = (checked: boolean) => {\n    this.setState({ checked });\n  };\n\n  public render(): React.ReactElement<ToggleProps> {\n    return (\n      <Toggle\n        {...this.props}\n        checked={this.state.checked}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nexport const ToggleShowcase = (props?: ToggleProps): ToggleElement => {\n  return (\n    <ToggleShowcaseComponent {...props}/>\n  );\n};\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst leftTitleToggle: ComponentShowcaseItem = {\n  title: 'Right Text',\n  props: {\n    text: 'Place your text',\n  },\n};\n\nconst rightTitleToggle: ComponentShowcaseItem = {\n  title: 'Left Text',\n  props: {\n    style: { flexDirection: 'row-reverse' },\n    text: 'Place your text',\n  },\n};\n\nconst disabledTitleToggle: ComponentShowcaseItem = {\n  title: 'Text Disabled',\n  props: {\n    text: 'Place your text',\n    disabled: true,\n  },\n};\n\nconst checkedToggle: ComponentShowcaseItem = {\n  title: 'Checked',\n  props: {\n    checked: true,\n  },\n};\n\nconst uncheckedToggle: ComponentShowcaseItem = {\n  title: 'Unchecked',\n  props: {\n    checked: false,\n  },\n};\n\nconst disabledUncheckedToggle: ComponentShowcaseItem = {\n  title: 'Disabled Unchecked',\n  props: {\n    checked: false,\n    disabled: true,\n  },\n};\n\nconst disabledCheckedToggle: ComponentShowcaseItem = {\n  title: 'Disabled Checked',\n  props: {\n    checked: true,\n    disabled: true,\n  },\n};\n\nconst titleSection: ComponentShowcaseSection = {\n  title: 'Title',\n  items: [\n    leftTitleToggle,\n    rightTitleToggle,\n    disabledTitleToggle,\n  ],\n};\n\nconst stateSection: ComponentShowcaseSection = {\n  title: 'State',\n  items: [\n    checkedToggle,\n    uncheckedToggle,\n    disabledCheckedToggle,\n    disabledUncheckedToggle,\n  ],\n};\n\nexport const toggleShowcase: ComponentShowcase = {\n  sections: [\n    stateSection,\n    titleSection,\n  ],\n};\n\nexport const toggleSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n  {\n    propertyName: 'status',\n    value: 'control',\n  },\n  {\n    propertyName: 'status',\n    value: 'basic',\n  },\n];\n","import React from 'react';\nimport {\n  ToggleElement,\n  ToggleProps,\n} from 'react-native-ui-kitten';\nimport { ToggleShowcase } from './toggleShowcase.component';\nimport {\n  toggleSettings,\n  toggleShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class ToggleContainer extends React.Component {\n\n  private renderItem = (props: ToggleProps): ToggleElement => {\n    return (\n      <ToggleShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={toggleShowcase}\n        settings={toggleSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Icon,\n  TopNavigationAction,\n  StyleType,\n  IconElement,\n} from 'react-native-ui-kitten';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst RightControlIcon = (style: StyleType): IconElement => {\n  return (\n    <Icon {...style} name='star' />\n  );\n};\n\nconst rightControlsTopNavigation: ComponentShowcaseItem = {\n  props: {\n    title: 'Title',\n    subtitle: 'Subtitle',\n    leftControl: <TopNavigationAction icon={RightControlIcon}/>,\n    rightControls: [\n      <TopNavigationAction icon={RightControlIcon}/>,\n      <TopNavigationAction icon={RightControlIcon}/>,\n    ],\n  },\n};\n\nconst leftControlTopNavigation: ComponentShowcaseItem = {\n  props: {\n    title: 'Title',\n    subtitle: 'Subtitle',\n    leftControl: <TopNavigationAction icon={RightControlIcon}/>,\n  },\n};\n\nconst subtitleTopNavigation: ComponentShowcaseItem = {\n  props: {\n    title: 'Title',\n    subtitle: 'Subtitle',\n  },\n};\n\nconst titleTopNavigation: ComponentShowcaseItem = {\n  props: {\n    title: 'Title',\n  },\n};\n\nconst rightControlsSection: ComponentShowcaseSection = {\n  title: 'Right Controls',\n  items: [\n    rightControlsTopNavigation,\n  ],\n};\n\nconst leftControlSection: ComponentShowcaseSection = {\n  title: 'Left Control',\n  items: [\n    leftControlTopNavigation,\n  ],\n};\n\nconst subtitleSection: ComponentShowcaseSection = {\n  title: 'Subtitle',\n  items: [\n    subtitleTopNavigation,\n  ],\n};\n\nconst titleSection: ComponentShowcaseSection = {\n  title: 'Title',\n  items: [\n    titleTopNavigation,\n  ],\n};\n\nexport const topNavigationShowcase: ComponentShowcase = {\n  sections: [\n    titleSection,\n    subtitleSection,\n    leftControlSection,\n    rightControlsSection,\n  ],\n};\n\nexport const topNavigationSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'default',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'control',\n  },\n  {\n    propertyName: 'alignment',\n    value: 'start',\n  },\n  {\n    propertyName: 'alignment',\n    value: 'center',\n  },\n];\n","import React from 'react';\nimport {\n  TopNavigation,\n  TopNavigationElement,\n  TopNavigationProps,\n} from 'react-native-ui-kitten';\n\nexport const TopNavigationShowcase = (props?: TopNavigationProps): TopNavigationElement => {\n\n  return (\n    <TopNavigation {...props}/>\n  );\n};\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  TopNavigationElement,\n  TopNavigationProps,\n} from 'react-native-ui-kitten';\nimport {\n  topNavigationSettings,\n  topNavigationShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { TopNavigationShowcase } from './topNavigationShowcase.component';\n\nexport class TopNavigationContainer extends React.Component {\n\n  private renderItem = (props: TopNavigationProps): TopNavigationElement => {\n    return (\n      <TopNavigationShowcase\n        {...props}\n        style={[styles.component, props.style]}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={topNavigationShowcase}\n        settings={topNavigationSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  component: {\n    flex: 1,\n  },\n});\n\n","import React from 'react';\nimport {\n  OverflowMenu,\n  OverflowMenuProps,\n  OverflowMenuElement,\n  Button,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  menuVisible: boolean;\n  selectedMenuIndex: number;\n}\n\nexport class OverflowMenuShowcase extends React.Component<OverflowMenuProps, State> {\n\n  public state: State = {\n    menuVisible: false,\n    selectedMenuIndex: null,\n  };\n\n  private toggleMenu = (): void => {\n    const menuVisible: boolean = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  private onSelect = (selectedMenuIndex: number): void => {\n    this.setState({ selectedMenuIndex }, this.toggleMenu);\n  };\n\n  public render(): OverflowMenuElement {\n    const { menuVisible, selectedMenuIndex } = this.state;\n\n    return (\n      <OverflowMenu\n        {...this.props}\n        visible={menuVisible}\n        selectedIndex={selectedMenuIndex}\n        onSelect={this.onSelect}\n        onBackdropPress={this.toggleMenu}>\n        <Button onPress={this.toggleMenu}>\n          TOGGLE MENU\n        </Button>\n      </OverflowMenu>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Icon,\n  IconElement,\n  OverflowMenuItemType,\n  StyleType,\n} from 'react-native-ui-kitten';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst StarIcon = (style: StyleType): IconElement => (\n  <Icon {...style} name='star' />\n);\n\nconst defaultMenuItems: OverflowMenuItemType[] = [\n  { title: 'Item 1' },\n  { title: 'Item 2' },\n  { title: 'Item 3' },\n];\n\nconst withIconMenuItems: OverflowMenuItemType[] = [\n  {\n    title: 'Item 1',\n    icon: StarIcon,\n  },\n  {\n    title: 'Item 2',\n    icon: StarIcon,\n  },\n  {\n    title: 'Item 3',\n    icon: StarIcon,\n  },\n];\n\nconst withDisabledItemMenuItems: OverflowMenuItemType[] = [\n  {\n    title: 'Item 1',\n    icon: StarIcon,\n  },\n  {\n    title: 'Item 2',\n    icon: StarIcon,\n    disabled: true,\n  },\n  {\n    title: 'Item 3',\n    icon: StarIcon,\n  },\n];\n\nconst defaultOverflowMenu: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {\n    data: defaultMenuItems,\n  },\n};\n\nconst withIcons: ComponentShowcaseItem = {\n  title: 'Icon',\n  props: {\n    data: withIconMenuItems,\n  },\n};\n\nconst withDisabledItem: ComponentShowcaseItem = {\n  title: 'Icon',\n  props: {\n    data: withDisabledItemMenuItems,\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  items: [\n    defaultOverflowMenu,\n    withIcons,\n    withDisabledItem,\n  ],\n};\n\nexport const overflowMenuShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n\nexport const overflowMenuSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'default',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'noDivider',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'left end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'top end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'right end',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom start',\n  },\n  {\n    propertyName: 'placement',\n    value: 'bottom end',\n  },\n];\n","import React from 'react';\nimport {\n  OverflowMenuElement,\n  OverflowMenuProps,\n} from 'react-native-ui-kitten';\nimport { OverflowMenuShowcase } from './overflowMenuShowcase.component';\nimport {\n  overflowMenuShowcase,\n  overflowMenuSettings,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class OverflowMenuContainer extends React.Component {\n\n  private renderItem = (props: OverflowMenuProps): OverflowMenuElement => {\n    return (\n      <OverflowMenuShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={overflowMenuShowcase}\n        settings={overflowMenuSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport {\n  ImageSourcePropType,\n  View,\n} from 'react-native';\nimport {\n  Avatar,\n  Button,\n  Icon,\n  Input,\n  Layout,\n  LayoutElement,\n  Text,\n  Toggle,\n  StyleType,\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n  IconElement,\n} from 'react-native-ui-kitten';\n\ninterface ComponentProps {\n  profileImage: ImageSourcePropType;\n  isDark: () => boolean;\n  setTheme: (dark: boolean) => void;\n}\n\ninterface State {\n  passwordVisible: boolean;\n}\n\ntype SampleComponentProps = ComponentProps & ThemedComponentProps;\n\nclass SampleComponent extends React.Component<SampleComponentProps, State> {\n\n\n  public state: State = {\n    passwordVisible: false,\n  };\n\n  private onPasswordIconPress = () => {\n    const passwordVisible: boolean = !this.state.passwordVisible;\n    this.setState({ passwordVisible });\n  };\n\n  private renderPasswordIcon = (style: StyleType): IconElement => {\n    const icon: string = this.state.passwordVisible ? 'eye' : 'eye-off';\n\n    return (\n      <Icon name={icon} {...style}/>\n    );\n  };\n\n  public render(): LayoutElement {\n    const { themedStyle, profileImage, isDark, setTheme } = this.props;\n\n    return (\n      <Layout\n        style={themedStyle.container}\n        level='4'>\n        <Layout style={themedStyle.cardContainer}>\n          <Layout\n            style={themedStyle.cardHeader}\n            level='3'>\n            <View style={themedStyle.themeToggleContainer}>\n              <Text\n                style={themedStyle.themeText}\n                category='s2'>\n                Dark Mode\n              </Text>\n              <Toggle\n                size='small'\n                checked={isDark()}\n                onChange={setTheme}\n              />\n            </View>\n            <Avatar\n              style={themedStyle.profileImage}\n              source={profileImage}\n            />\n            <View style={themedStyle.welcomeContainer}>\n              <Text category='h4'>Welcome</Text>\n              <Text category='s1'>Sign in to your account</Text>\n            </View>\n          </Layout>\n          <Layout\n            style={themedStyle.formContainer}\n            level='1'>\n            <Input\n              style={themedStyle.formInput}\n              textStyle={themedStyle.formInputBox}\n              label='Email'\n              placeholder='contact@akveo.com'\n            />\n            <Input\n              style={themedStyle.formInput}\n              textStyle={themedStyle.formInputBox}\n              secureTextEntry={!this.state.passwordVisible}\n              label='Password'\n              placeholder='********'\n              icon={this.renderPasswordIcon}\n              onIconPress={this.onPasswordIconPress}\n            />\n            <Button style={themedStyle.signInButton}>SIGN IN</Button>\n          </Layout>\n        </Layout>\n      </Layout>\n    );\n  }\n}\n\nexport const Sample = withStyles(SampleComponent, (theme: ThemeType) => ({\n  container: {\n    flex: 1,\n    paddingHorizontal: 24,\n    paddingVertical: 24,\n  },\n  cardContainer: {\n    flex: 1,\n    flexDirection: 'row',\n    borderRadius: 4,\n    overflow: 'hidden',\n  },\n  cardHeader: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    minWidth: 192,\n    paddingHorizontal: 24,\n  },\n  themeToggleContainer: {\n    position: 'absolute',\n    left: 16,\n    bottom: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  themeText: {\n    marginHorizontal: 8,\n  },\n  profileImage: {\n    width: 96,\n    height: 96,\n    borderWidth: 4,\n    borderColor: theme['border-basic-color-4'],\n  },\n  welcomeContainer: {\n    paddingHorizontal: 16,\n  },\n  formContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    paddingHorizontal: 16,\n  },\n  formInput: {\n    marginVertical: 4,\n  },\n  formInputBox: {\n    outlineWidth: 0,\n  },\n  signInButton: {\n    marginVertical: 16,\n  },\n}));\n\n","import React from 'react';\nimport { Sample } from './sample.component';\nimport {\n  ThemeContextType,\n  ThemeContext,\n  ThemeKey,\n} from '../../../themes';\nimport { ImageSourcePropType } from 'react-native';\n\nexport class SampleContainer extends React.Component {\n\n  private profileImage: ImageSourcePropType = require('../../../assets/brand-logo.png');\n\n  private isDarkTheme = (context: ThemeContextType): boolean => {\n    return context.name === 'Eva Dark';\n  };\n\n  private toggleTheme = (context: ThemeContextType, dark: boolean) => {\n    const nextTheme: ThemeKey = dark ? 'Eva Dark' : 'Eva Light';\n\n    context.toggleTheme(nextTheme);\n  };\n\n  private renderContent = (context: ThemeContextType): React.ReactNode => {\n    return (\n      <Sample\n        profileImage={this.profileImage}\n        isDark={() => this.isDarkTheme(context)}\n        setTheme={(dark: boolean) => this.toggleTheme(context, dark)}\n      />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ThemeContext.Consumer>\n        {this.renderContent}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Modal,\n  ModalProps,\n  Text,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  modalVisible: boolean;\n}\n\nexport class ModalShowcase extends React.Component<ModalProps, State> {\n\n  public state: State = {\n    modalVisible: false,\n  };\n\n  private toggleModal = (modalVisible: boolean) => {\n    this.setState({ modalVisible });\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <View style={styles.container}>\n        <Button onPress={() => this.toggleModal(true)}>\n          Show Modal\n        </Button>\n        <Modal\n          {...this.props}\n          visible={this.state.modalVisible}\n          onBackdropPress={() => this.toggleModal(false)}>\n          <Text>Hi! This is Modal</Text>\n          <Button\n            style={styles.button}\n            onPress={() => this.toggleModal(false)}>\n            Hide me\n          </Button>\n        </Modal>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'space-between',\n  },\n  button: {\n    marginTop: 12,\n  },\n});\n","import { StyleSheet } from 'react-native';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\nconst styles = StyleSheet.create({\n  modal: {\n    backgroundColor: '#636e80',\n    width: 200,\n    height: 200,\n    padding: 12,\n    alignItems: 'center',\n    justifyContent: 'center',\n    borderRadius: 8,\n  },\n  backdropStyle: {\n    backgroundColor: 'black',\n    opacity: 0.5,\n  },\n  customModalPosition: {\n    left: 100,\n    top: 100,\n  },\n});\n\nconst defaultModal: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {},\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default Modal',\n  items: [\n    defaultModal,\n  ],\n};\n\nconst customStyledModal: ComponentShowcaseItem = {\n  title: 'Styled Modal',\n  props: {\n    style: styles.modal,\n  },\n};\n\nconst customStyledModalBackdrop: ComponentShowcaseItem = {\n  title: 'Styled Backdrop',\n  props: {\n    style: styles.modal,\n    backdropStyle: styles.backdropStyle,\n  },\n};\n\nconst customModalPosition: ComponentShowcaseItem = {\n  title: 'Custom Position',\n  props: {\n    style: [ styles.customModalPosition, styles.modal ],\n  },\n};\n\nconst customStyledSection: ComponentShowcaseSection = {\n  title: 'Styling',\n  items: [\n    customStyledModal,\n    customStyledModalBackdrop,\n    customModalPosition,\n  ],\n};\n\nconst customModalBackdropAllowed: ComponentShowcaseItem = {\n  title: 'Close On Backdrop: true',\n  props: {\n    allowBackdrop: true,\n    style: styles.modal,\n    backdropStyle: styles.backdropStyle,\n  },\n};\n\nconst customModalBackdropNotAllowed: ComponentShowcaseItem = {\n  title: 'Close On Backdrop: false',\n  props: {\n    closeOnBackdrop: false,\n    style: styles.modal,\n    backdropStyle: styles.backdropStyle,\n  },\n};\n\nconst customBackdropAllowingSection: ComponentShowcaseSection = {\n  title: 'Backdrop Closing Permissions',\n  items: [\n    customModalBackdropAllowed,\n    customModalBackdropNotAllowed,\n  ],\n};\n\nexport const modalShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    customStyledSection,\n    customBackdropAllowingSection,\n  ],\n};\n","import React from 'react';\nimport {\n  ModalElement,\n  ModalProps,\n} from 'react-native-ui-kitten';\nimport { ModalShowcase } from './modalShowcase.component';\nimport { modalShowcase } from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class ModalContainer extends React.Component {\n\n  private renderItem = (props: ModalProps): ModalElement => {\n    return (\n      <ModalShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={modalShowcase}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Select,\n  SelectOption,\n  SelectProps,\n  SelectElement,\n} from 'react-native-ui-kitten';\n\ninterface SelectShowcaseComponentState {\n  selectedOption: SelectOption;\n}\n\ninterface AdditionalProps {\n  preselectedItem?: SelectOption;\n}\n\ntype Props = SelectProps & AdditionalProps;\n\nclass SelectShowcaseComponent extends React.Component<Props, SelectShowcaseComponentState> {\n\n  public constructor(props: SelectProps) {\n    super(props);\n    this.state = {\n      selectedOption: this.getInitialSelectedOption(),\n    };\n  }\n\n  private getInitialSelectedOption = (): SelectOption => {\n    const { multiSelect, preselectedItem } = this.props;\n\n    if (multiSelect) {\n      return preselectedItem ? preselectedItem : [];\n    } else {\n      return preselectedItem ? preselectedItem : null;\n    }\n  };\n\n  private setSelectedOption = (selectedOption: SelectOption): void => {\n    this.setState({ selectedOption });\n  };\n\n  public render(): SelectElement {\n    return (\n      <Select\n        {...this.props}\n        style={styles.dropdown}\n        selectedOption={this.state.selectedOption}\n        onSelect={this.setSelectedOption}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  dropdown: {\n    width: 200,\n  },\n});\n\nexport const SelectShowcase = (props: SelectProps): SelectElement => {\n  return (\n    <SelectShowcaseComponent {...props}/>\n  );\n};\n","import React from 'react';\nimport {\n  Icon,\n  IconElement,\n  SelectOptionType,\n  StyleType,\n} from 'react-native-ui-kitten';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\n\nconst defaultSelectOption: SelectOptionType[] = [\n  {\n    text: 'Option 1',\n    disabled: true,\n  },\n  { text: 'Option 2' },\n  { text: 'Option 3' },\n  { text: 'Option 4' },\n  { text: 'Option 5' },\n  { text: 'Option 6' },\n  { text: 'Option 7' },\n  { text: 'Option 8' },\n];\n\nconst withGroupsSelectOption: SelectOptionType[] = [\n  { text: 'Option 1' },\n  {\n    text: 'Option 2',\n    items: [\n      {\n        text: 'Option 21',\n        disabled: true,\n      },\n      { text: 'Option 22' },\n      { text: 'Option 23' },\n    ],\n  },\n  // { text: 'Option 3' },\n  // { text: 'Option 4' },\n  // { text: 'Option 5' },\n];\n\nconst renderIcon = (style: StyleType, visible: boolean): IconElement => {\n  const iconName = visible ? 'arrow-ios-upward' : 'arrow-ios-downward';\n\n  return (\n    <Icon {...style} name={iconName}/>\n  );\n};\n\nconst defaultSelect: ComponentShowcaseItem = {\n  title: 'Default',\n  props: {\n    data: defaultSelectOption,\n  },\n};\n\nconst disabledSelect: ComponentShowcaseItem = {\n  title: 'Disabled',\n  props: {\n    data: defaultSelectOption,\n    disabled: true,\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default Select',\n  items: [\n    defaultSelect,\n    disabledSelect,\n  ],\n};\n\nconst multiSelectSelect: ComponentShowcaseItem = {\n  title: 'Multiselect',\n  props: {\n    multiSelect: true,\n    data: defaultSelectOption,\n  },\n};\n\nconst multiSelectSection: ComponentShowcaseSection = {\n  title: 'Multiselect Select',\n  items: [\n    multiSelectSelect,\n  ],\n};\n\nconst groupSelect: ComponentShowcaseItem = {\n  title: 'With Groups',\n  props: {\n    data: withGroupsSelectOption,\n  },\n};\n\nconst groupSelectMultiselect: ComponentShowcaseItem = {\n  title: 'Multiselect',\n  props: {\n    multiSelect: true,\n    data: withGroupsSelectOption,\n  },\n};\n\nconst withGroupsSection: ComponentShowcaseSection = {\n  title: 'Groups Select',\n  items: [\n    groupSelect,\n    // groupSelectMultiselect,\n  ],\n};\n\nconst withIconSelect: ComponentShowcaseItem = {\n  title: 'With icon',\n  props: {\n    data: defaultSelectOption,\n    icon: renderIcon,\n    multiSelect: true,\n  },\n};\n\nconst withIconSection: ComponentShowcaseSection = {\n  title: 'With icon',\n  items: [\n    withIconSelect,\n  ],\n};\n\nconst withLabelSelect: ComponentShowcaseItem = {\n  title: 'Label',\n  props: {\n    data: defaultSelectOption,\n    label: 'Label',\n  },\n};\n\nconst withCustomPlaceholderSelect: ComponentShowcaseItem = {\n  title: 'Placeholder',\n  props: {\n    data: defaultSelectOption,\n    placeholder: 'Place your Text',\n  },\n};\n\nconst customTextsSection: ComponentShowcaseSection = {\n  title: 'Texts',\n  items: [\n    withLabelSelect,\n    withCustomPlaceholderSelect,\n  ],\n};\n\nconst preselectedReference: ComponentShowcaseItem = {\n  title: 'Ref',\n  props: {\n    data: defaultSelectOption,\n    preselectedItem: defaultSelectOption[1],\n  },\n};\n\nconst preselectedReferenceMultiSelect: ComponentShowcaseItem = {\n  title: 'Multi Ref',\n  props: {\n    multiSelect: true,\n    data: defaultSelectOption,\n    preselectedItem: [defaultSelectOption[1]],\n  },\n};\n\nconst preselectedReferenceSection: ComponentShowcaseSection = {\n  title: 'Preselected Reference',\n  items: [\n    preselectedReference,\n    preselectedReferenceMultiSelect,\n  ],\n};\n\nconst preselectedInline: ComponentShowcaseItem = {\n  title: 'Inline',\n  props: {\n    data: defaultSelectOption,\n    preselectedItem: { text: 'Option 3' },\n    keyExtractor: (item: SelectOptionType) => item.text,\n  },\n};\n\nconst preselectedInlineMultiSelect: ComponentShowcaseItem = {\n  title: 'Multi Inline',\n  props: {\n    multiSelect: true,\n    data: defaultSelectOption,\n    preselectedItem: [{ text: 'Option 3' }],\n    keyExtractor: (item: SelectOptionType) => item.text,\n  },\n};\n\nconst preselectedInlineSection: ComponentShowcaseSection = {\n  title: 'Preselected Inline',\n  items: [\n    preselectedInline,\n    preselectedInlineMultiSelect,\n  ],\n};\n\nexport const selectShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    multiSelectSection,\n    withGroupsSection,\n    withIconSection,\n    customTextsSection,\n    preselectedReferenceSection,\n    preselectedInlineSection,\n  ],\n};\n\nexport const selectSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n];\n","import React from 'react';\nimport {\n  SelectProps,\n  SelectElement,\n} from 'react-native-ui-kitten';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { SelectShowcase } from './selectShowcase.component';\nimport {\n  selectShowcase,\n  selectSettings,\n} from './type';\n\nexport class SelectContainer extends React.Component {\n\n  private renderItem = (props: SelectProps): SelectElement => {\n    return (\n      <SelectShowcase {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={selectShowcase}\n        settings={selectSettings}\n        renderItem={this.renderItem}>\n      </ShowcaseContainer>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Datepicker,\n  DatepickerElement,\n  DatepickerProps,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  date: Date;\n}\n\nexport class DatepickerShowcase extends React.Component<{}, State> {\n\n  public state: State = {\n    date: null,\n  };\n\n  private setDate = (date: Date): void => {\n    this.setState({ date });\n  };\n\n  public render(): DatepickerElement {\n    return (\n      <Datepicker\n        {...this.props}\n        date={this.state.date}\n        onSelect={this.setDate}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  RangeDatepicker,\n  CalendarRange,\n  RangeDatepickerElement,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  range: CalendarRange<Date>;\n}\n\nexport class RangeDatepickerShowcase extends React.Component<{}, State> {\n\n  public state: State = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  private setDate = (range: CalendarRange<Date>): void => {\n    this.setState({ range });\n  };\n\n  public render(): RangeDatepickerElement {\n    return (\n      <RangeDatepicker\n        {...this.props}\n        style={styles.datepicker}\n        range={this.state.range}\n        onSelect={this.setDate}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  datepicker: {\n    marginBottom: 20,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Layout } from 'react-native-ui-kitten';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { DatepickerShowcase } from './datepickerShowcase.component';\nimport { RangeDatepickerShowcase } from './rangeDatepickerShowcase.component';\n\nexport class DatepickerContainer extends React.Component {\n\n  private renderItem = (): React.ReactElement<any> => {\n    return null;\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        style={styles.container}\n        showcase={{ sections: [] }}\n        renderItem={this.renderItem}>\n        <Layout style={styles.showcaseContainer}>\n          <DatepickerShowcase />\n        </Layout>\n        <Layout style={styles.showcaseContainer}>\n          <RangeDatepickerShowcase />\n        </Layout>\n      </ShowcaseContainer>\n    );\n  }\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    padding: 8,\n  },\n  showcaseContainer: {\n    paddingVertical: 8,\n  },\n});\n","import React from 'react';\nimport {\n  RangeCalendar,\n  RangeCalendarProps,\n  CalendarElement,\n  CalendarRange,\n} from 'react-native-ui-kitten';\n\ninterface State {\n  range: CalendarRange<Date>;\n}\n\ntype Props = RangeCalendarProps<Date>;\n\nexport class RangeCalendarShowcase extends React.Component<Props, State> {\n\n  public state: State = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  private onSelect = (range: CalendarRange<Date>) => {\n    this.setState({ range });\n  };\n\n  public render(): CalendarElement<Date> {\n    return (\n      <RangeCalendar\n        {...this.props}\n        range={this.state.range}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n} from '../common/type';\n\nconst now: Date = new Date();\n\nconst defaultCalendar: ComponentShowcaseItem = {\n  props: {\n    min: new Date(now.getFullYear() - 12, 0, 1),\n    max: new Date(now.getFullYear() + 12, 0, 1),\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultCalendar,\n  ],\n};\n\nexport const calendarShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n  ],\n};\n","import React from 'react';\nimport { RangeCalendarProps } from 'react-native-ui-kitten';\nimport { ShowcaseContainer } from '../common/showcase.container';\nimport { RangeCalendarShowcase } from './rangeCalendarShowcase.component';\nimport { calendarShowcase } from './type';\n\nexport class RangeCalendarContainer extends React.Component {\n\n  private renderItem = (props: RangeCalendarProps<Date>): React.ReactElement<RangeCalendarProps<Date>> => {\n    return (\n      <RangeCalendarShowcase style={{flex: 1}} {...props}/>\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={calendarShowcase}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Card,\n  CardProps,\n  CardElement,\n} from 'react-native-ui-kitten';\n\nexport const CardShowcase = (props: CardProps): CardElement => {\n  return (\n    <Card {...props}/>\n  );\n};\n","import React from 'react';\nimport {\n  View,\n  ViewProps,\n  StyleSheet,\n  Image,\n} from 'react-native';\nimport {\n  Text,\n  CardFooterElement,\n  CardHeaderElement,\n  CardHeader,\n  Button,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\nconst headerImageUri: string = 'https://cdn.pixabay.com/photo/2017/01/20/00/30/maldives-1993704__340.jpg';\n\nexport const CardBodyContent = (): React.ReactElement<ViewProps> => {\n  return (\n    <View>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </View>\n  );\n};\n\nexport const EvaCardHeader = (): CardHeaderElement => {\n  return (\n    <CardHeader\n      title='Title'\n      description='Description'\n    />\n  );\n};\n\nexport const CustomCardHeader = (): CardHeaderElement => {\n  return (\n    <View>\n      <Image\n        source={{ uri: headerImageUri }}\n        style={styles.headerImage}\n      />\n      <View style={styles.headerTextContainer}>\n        <Text\n          category='h6'\n          style={styles.headerText}>\n          Title\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nexport const CardFooter = (): CardFooterElement => {\n  return (\n    <View style={styles.footerContainer}>\n      <Button\n        size='small'\n        style={styles.footerControl}>\n        Accept\n      </Button>\n      <Button\n        size='small'\n        status='basic'>\n        Cancel\n      </Button>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  bodyText: {\n    fontSize: 15,\n    lineHeight: 20,\n    color: 'gray',\n  },\n  headerTextContainer: {\n    paddingHorizontal: 24,\n    paddingVertical: 16,\n  },\n  headerText: {\n    color: '#6e5f5e',\n  },\n  headerImage: {\n    width: '100%',\n    height: 230,\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginRight: 12,\n  },\n});\n","import React from 'react';\nimport {\n  ComponentShowcase,\n  ComponentShowcaseItem,\n  ComponentShowcaseSection,\n  ComponentShowcaseSetting,\n} from '../common/type';\nimport {\n  CardBodyContent,\n  CardFooter,\n  CustomCardHeader,\n  EvaCardHeader,\n} from './cardExamples';\n\nconst defaultCard: ComponentShowcaseItem = {\n  props: {\n    children: <CardBodyContent/>,\n  },\n};\n\nconst defaultSection: ComponentShowcaseSection = {\n  title: 'Default',\n  items: [\n    defaultCard,\n  ],\n};\n\nconst evaHeaderCard: ComponentShowcaseItem = {\n  props: {\n    children: <CardBodyContent/>,\n    header: EvaCardHeader,\n  },\n};\n\nconst evaHeaderSection: ComponentShowcaseSection = {\n  title: 'Eva Header',\n  items: [\n    evaHeaderCard,\n  ],\n};\n\nconst customHeaderCard: ComponentShowcaseItem = {\n  props: {\n    children: <CardBodyContent/>,\n    header: CustomCardHeader,\n  },\n};\n\nconst customHeaderSection: ComponentShowcaseSection = {\n  title: 'Custom Header',\n  items: [\n    customHeaderCard,\n  ],\n};\n\nconst footerCard: ComponentShowcaseItem = {\n  props: {\n    children: <CardBodyContent/>,\n    footer: CardFooter,\n  },\n};\n\nconst footerSection: ComponentShowcaseSection = {\n  title: 'Footer',\n  items: [\n    footerCard,\n  ],\n};\n\nconst headerFooterCard: ComponentShowcaseItem = {\n  props: {\n    children: <CardBodyContent/>,\n    header: EvaCardHeader,\n    footer: CardFooter,\n  },\n};\n\nconst headerFooterSection: ComponentShowcaseSection = {\n  title: 'Header + Footer',\n  items: [\n    headerFooterCard,\n  ],\n};\n\nexport const cardShowcase: ComponentShowcase = {\n  sections: [\n    defaultSection,\n    evaHeaderSection,\n    customHeaderSection,\n    footerSection,\n    headerFooterSection,\n  ],\n};\n\nexport const cardSettings: ComponentShowcaseSetting[] = [\n  {\n    propertyName: 'appearance',\n    value: 'outline',\n  },\n  {\n    propertyName: 'appearance',\n    value: 'filled',\n  },\n  {\n    propertyName: 'status',\n    value: 'primary',\n  },\n  {\n    propertyName: 'status',\n    value: 'success',\n  },\n  {\n    propertyName: 'status',\n    value: 'info',\n  },\n  {\n    propertyName: 'status',\n    value: 'warning',\n  },\n  {\n    propertyName: 'status',\n    value: 'danger',\n  },\n];\n","import React from 'react';\nimport {\n  CardElement,\n  CardProps,\n} from 'react-native-ui-kitten';\nimport { CardShowcase } from './cardShowcase.component';\nimport {\n  cardSettings,\n  cardShowcase,\n} from './type';\nimport { ShowcaseContainer } from '../common/showcase.container';\n\nexport class CardContainer extends React.Component {\n\n  private renderItem = (props: CardProps): CardElement => {\n    return (\n      <CardShowcase {...props} />\n    );\n  };\n\n  public render(): React.ReactNode {\n    return (\n      <ShowcaseContainer\n        showcase={cardShowcase}\n        settings={cardSettings}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport {\n  ListRenderItemInfo,\n  Platform,\n} from 'react-native';\nimport { NavigationScreenProps } from 'react-navigation';\nimport { Link } from '@react-navigation/web';\nimport {\n  List,\n  ListElement,\n  ListItem,\n  ListItemElement,\n  ThemedComponentProps,\n  ThemeType,\n  withStyles,\n} from 'react-native-ui-kitten';\nimport { RouteType } from '../../navigation';\n\nexport const routes: RouteType[] = [\n  { name: 'Avatar' },\n  { name: 'Bottom Navigation' },\n  { name: 'Button' },\n  { name: 'Button Group' },\n  { name: 'Calendar' },\n  { name: 'Card' },\n  { name: 'Range Calendar' },\n  { name: 'Checkbox' },\n  { name: 'Datepicker' },\n  { name: 'Drawer' },\n  { name: 'Icon' },\n  { name: 'Input' },\n  { name: 'Layout' },\n  { name: 'List' },\n  { name: 'Menu' },\n  { name: 'Modal' },\n  { name: 'Overflow Menu' },\n  { name: 'Popover' },\n  { name: 'Radio' },\n  { name: 'Radio Group' },\n  { name: 'Select' },\n  { name: 'Spinner' },\n  { name: 'Tab View' },\n  { name: 'Text' },\n  { name: 'Toggle' },\n  { name: 'Tooltip' },\n  { name: 'Top Navigation' },\n  { name: 'Sample' },\n];\n\ntype Props = ThemedComponentProps & NavigationScreenProps;\n\nclass HomeScreen extends React.Component<Props> {\n\n  private onItemPressMobile = (index: number) => {\n    const { [index]: route } = routes;\n\n    this.props.navigation.navigate(route.name);\n  };\n\n  private renderWebListItem = (info: ListRenderItemInfo<RouteType>): ListItemElement => {\n    return (\n      <Link routeName={info.item.name}>\n        <ListItem title={info.item.name}/>\n      </Link>\n    );\n  };\n\n  private renderMobileListItem = (info: ListRenderItemInfo<RouteType>): ListItemElement => {\n    return (\n      <ListItem\n        title={info.item.name}\n        onPress={this.onItemPressMobile}\n      />\n    );\n  };\n\n  private renderItem = (info: ListRenderItemInfo<RouteType>): ListItemElement => {\n    return Platform.select({\n      default: this.renderMobileListItem(info),\n      web: this.renderWebListItem(info),\n    });\n  };\n\n  public render(): ListElement {\n    return (\n      <List\n        style={this.props.themedStyle.container}\n        data={routes}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nexport default withStyles(HomeScreen, (theme: ThemeType) => ({\n  container: {\n    flex: 1,\n    backgroundColor: theme['background-basic-color-1'],\n  },\n}));\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarRemoteImagesShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.item}\n      size='tiny'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='small'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='medium'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='large'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      size='giant'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  item: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarShapeShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.item}\n      shape='round'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      shape='rounded'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n    <Avatar\n      style={styles.item}\n      shape='square'\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  item: {\n    marginVertical: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Avatar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const AvatarInlineStylingShowcase = () => (\n  <Layout style={styles.container}>\n    <Avatar\n      style={styles.avatar}\n      source={{ uri: 'https://images.unsplash.com/photo-1494790108377-be9c29b29330' }}\n    />\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  avatar: {\n    width: 96,\n    height: 96,\n    borderRadius: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        style={styles.bottomNavigation}\n        indicatorStyle={styles.indicator}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  bottomNavigation: { backgroundColor: 'white' },\n  indicator: { backgroundColor: 'black' },\n});\n","import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nexport const BottomNavigationTabInlineStylingShowcase = () => (\n  <BottomNavigationTab\n    style={styles.tab}\n    titleStyle={styles.tabTitle}\n    title='TAB 1'\n  />\n);\n\nconst styles = StyleSheet.create({\n  tab: { backgroundColor: '#EDF1F7' },\n  tabTitle: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nexport const BottomNavigationTabSimpleUsageShowcase = () => (\n  <BottomNavigationTab title='TAB 1'/>\n);\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { BottomNavigationTab } from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Image\n    style={style}\n    source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/layout.png'}}\n  />\n);\n\nexport const BottomNavigationTabWithExternalSourceIconShowcase = () => (\n  <BottomNavigationTab\n    title='DASHBOARD'\n    icon={DashboardIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  BottomNavigationTab,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nexport const BottomNavigationTabWithIconShowcase = () => (\n  <BottomNavigationTab\n    title='DASHBOARD'\n    icon={DashboardIcon}\n  />\n);\n","// IMPORTANT: To use Icon component make sure to follow this guide:\n// https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n\nimport React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nconst SettingsIcon = (style) => (\n  <Icon {...style} name='settings'/>\n);\n\nexport class BottomNavigationWithIconsShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab\n          title='DASHBOARD'\n          icon={DashboardIcon}\n        />\n        <BottomNavigationTab\n          title='SETTINGS'\n          icon={SettingsIcon}\n        />\n      </BottomNavigation>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  BottomNavigation,\n  BottomNavigationTab,\n} from 'react-native-ui-kitten';\n\nexport class BottomNavigationWithoutIndicatorShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onTabSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <BottomNavigation\n        appearance='noIndicator'\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onTabSelect}>\n        <BottomNavigationTab title='DASHBOARD'/>\n        <BottomNavigationTab title='SETTINGS'/>\n      </BottomNavigation>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonAppearancesShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='filled'>FILLED</Button>\n    <Button style={styles.button} appearance='outline'>OUTLINE</Button>\n    <Button style={styles.button} appearance='ghost'>GHOST</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGhostShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='ghost' status='primary'>PRIMARY</Button>\n    <Button style={styles.button} appearance='ghost' status='success'>SUCCESS</Button>\n    <Button style={styles.button} appearance='ghost' status='info'>INFO</Button>\n    <Button style={styles.button} appearance='ghost' status='warning'>WARNING</Button>\n    <Button style={styles.button} appearance='ghost' status='danger'>DANGER</Button>\n    <Button style={styles.button} appearance='ghost' status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonOutlineShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} appearance='outline' status='primary'>PRIMARY</Button>\n    <Button style={styles.button} appearance='outline' status='success'>SUCCESS</Button>\n    <Button style={styles.button} appearance='outline' status='info'>INFO</Button>\n    <Button style={styles.button} appearance='outline' status='warning'>WARNING</Button>\n    <Button style={styles.button} appearance='outline' status='danger'>DANGER</Button>\n    <Button style={styles.button} appearance='outline' status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ButtonWithIconShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} status='primary' icon={StarIcon}>PRIMARY</Button>\n    <Button style={styles.button} status='success' icon={StarIcon}>SUCCESS</Button>\n    <Button style={styles.button} status='danger' icon={StarIcon}/>\n    <Button style={styles.button} appearance='ghost' status='danger' icon={StarIcon}/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button}>ACTIVE</Button>\n    <Button style={styles.button} disabled={true}>DISABLED</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} size='tiny'>TINY</Button>\n    <Button style={styles.button} size='small'>SMALL</Button>\n    <Button style={styles.button} size='medium'>MEDIUM</Button>\n    <Button style={styles.button} size='large'>LARGE</Button>\n    <Button style={styles.button} size='giant'>GIANT</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonStatusShowcase = () => (\n  <Layout style={styles.container}>\n    <Button style={styles.button} status='primary'>PRIMARY</Button>\n    <Button style={styles.button} status='success'>SUCCESS</Button>\n    <Button style={styles.button} status='info'>INFO</Button>\n    <Button style={styles.button} status='warning'>WARNING</Button>\n    <Button style={styles.button} status='danger'>DANGER</Button>\n    <Button style={styles.button} status='basic'>BASIC</Button>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  button: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupAppearanceShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      appearance='filled'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      appearance='outline'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  buttonGroup: {\n    marginVertical: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupInlineStylingShowcase = () => (\n  <ButtonGroup style={styles.buttonGroup}>\n    <Button style={styles.button}>L</Button>\n    <Button style={styles.button}>M</Button>\n    <Button style={styles.button}>R</Button>\n  </ButtonGroup>\n);\n\nconst styles = StyleSheet.create({\n  buttonGroup: {\n    margin: 16,\n    borderRadius: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupSimpleUsageShowcase = () => (\n  <ButtonGroup style={styles.container}>\n    <Button style={styles.button}>L</Button>\n    <Button style={styles.button}>M</Button>\n    <Button style={styles.button}>R</Button>\n  </ButtonGroup>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    margin: 16,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupSizeShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='tiny'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='small'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='medium'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='large'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      size='giant'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  buttonGroup: {\n    marginVertical: 8,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  ButtonGroup,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport const ButtonGroupStatusShowcase = () => (\n  <Layout style={styles.container}>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='primary'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='success'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='info'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='warning'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n    <ButtonGroup\n      style={styles.buttonGroup}\n      status='danger'>\n      <Button style={styles.button}>L</Button>\n      <Button style={styles.button}>M</Button>\n      <Button style={styles.button}>R</Button>\n    </ButtonGroup>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  buttonGroup: {\n    marginBottom: 10,\n  },\n  button: {\n    flex: 1,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarBoundingMonthShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          boundingMonth={false}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst now = new Date();\n\nexport class CalendarBoundsShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          min={new Date(now.getFullYear(), now.getMonth(), 15)}\n          max={new Date(now.getFullYear(), now.getMonth() + 1, 15)}\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class CalendarCustomDayShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  renderDay = ({ date }, style) => (\n    <View\n      style={[styles.dayContainer, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      <Text style={[style.text, styles.value]}>\n        {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n      </Text>\n    </View>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n          renderDay={this.renderDay}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nconst i18n = {\n  dayNames: {\n    short: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    long: ['星期天', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n  },\n  monthNames: {\n    short: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    long: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n  },\n};\n\nexport class CalendarCustomLocaleShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('zh', { i18n });\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarFilterShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  filter = (date) => {\n    return date.getDay() !== 0 && date.getDay() !== 6;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n          filter={this.filter}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport moment from 'moment';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nexport class CalendarMomentShowcase extends React.Component {\n\n  state = {\n    date: moment(),\n  };\n\n  dateService = new MomentDateService();\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CalendarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Calendar,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nexport class CalendarStartDayOfWeekShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('en', { startDayOfWeek: 1 });\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Calendar\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 376,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  RangeCalendar,\n} from 'react-native-ui-kitten';\n\nexport class RangeCalendarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  onSelect = (range) => {\n    this.setState({ range });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <RangeCalendar\n          range={this.state.range}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport {\n  Image,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\nconst headerImageUri: string = 'https://cdn.pixabay.com/photo/2017/01/20/00/30/maldives-1993704__340.jpg';\n\nexport const CustomHeader = () => {\n  return (\n    <View>\n      <Image\n        source={{ uri: headerImageUri }}\n        style={styles.headerImage}\n      />\n      <View style={styles.headerTextContainer}>\n        <Text\n          category='h6'\n          style={styles.headerText}>\n          Title\n        </Text>\n      </View>\n    </View>\n  );\n};\n\nexport const CardCustomHeaderShowcase = () => (\n  <Layout style={styles.container}>\n    <Card header={CustomHeader}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n  headerTextContainer: {\n    paddingHorizontal: 24,\n    paddingVertical: 16,\n  },\n  headerText: {\n    color: '#6e5f5e',\n  },\n  headerImage: {\n    width: '100%',\n    height: 230,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Card,\n  CardHeader,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nconst Header = () => (\n  <CardHeader\n    title='Title'\n    description='Description'\n  />\n);\n\nexport const CardEvaHeaderShowcase = () => (\n  <Layout style={styles.container}>\n    <Card header={Header}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n  Button,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nconst Footer = () => {\n  return (\n    <View style={styles.footerContainer}>\n      <Button\n        size='small'\n        style={styles.footerControl}>\n        Accept\n      </Button>\n      <Button\n        size='small'\n        status='basic'>\n        Cancel\n      </Button>\n    </View>\n  );\n};\n\nexport const CardFooterShowcase = () => (\n  <Layout style={styles.container}>\n    <Card footer={Footer}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginRight: 12,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n  Button,\n  CardHeader,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nconst Footer = () => {\n  return (\n    <View style={styles.footerContainer}>\n      <Button\n        size='small'\n        style={styles.footerControl}>\n        Accept\n      </Button>\n      <Button\n        size='small'\n        status='basic'>\n        Cancel\n      </Button>\n    </View>\n  );\n};\n\nconst Header = () => (\n  <CardHeader\n    title='Title'\n    description='Description'\n  />\n);\n\nexport const CardHeaderFooterShowcase = () => (\n  <Layout style={styles.container}>\n    <Card\n      header={Header}\n      footer={Footer}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n  footerContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n  },\n  footerControl: {\n    marginRight: 12,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Card,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nexport const CardSimpleUsageShowcase = () => (\n  <Layout style={styles.container}>\n    <Card>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 6,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Card,\n  CardHeader,\n  Text,\n  List,\n} from 'react-native-ui-kitten';\n\nconst bodyText: string = 'A nebula is an interstellar cloud of dust, hydrogen, helium and other ionized gases. ' +\n  'Originally, nebula was a name for any diffuse astronomical object, including galaxies beyond the Milky Way.';\n\nexport class CardStatusesShowcase extends React.Component {\n\n  statuses = [\n    'primary',\n    'success',\n    'info',\n    'warning',\n    'danger',\n  ];\n\n  renderHeader = () => (\n    <CardHeader\n      title='Title'\n      description='Description'\n    />\n  );\n\n  renderItem = (info) => (\n    <Card\n      status={info.item}\n      style={styles.card}\n      header={this.renderHeader}>\n      <Text style={styles.bodyText}>\n        {bodyText}\n      </Text>\n    </Card>\n  );\n\n  render() {\n    return (\n      <List\n        style={styles.container}\n        data={this.statuses}\n        renderItem={this.renderItem}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 500,\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  card: {\n    marginVertical: 4,\n  },\n  bodyText: {\n    color: '#8f8b8b',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked1: false,\n  };\n\n  onChecked1Change = (checked1) => {\n    this.setState({ checked1 });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          text='Active'\n          checked={this.state.checked1}\n          onChange={this.onChecked1Change}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          text='Disabled'\n          disabled={true}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          text='Checked Disabled'\n          disabled={true}\n          checked={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  checkbox: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          status='primary'\n          text='Primary'\n          checked={this.state.primaryChecked}\n          onChange={this.onPrimaryChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='success'\n          text='Success'\n          checked={this.state.successChecked}\n          onChange={this.onSuccessChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='info'\n          text='Info'\n          checked={this.state.infoChecked}\n          onChange={this.onInfoChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='warning'\n          text='Warning'\n          checked={this.state.warningChecked}\n          onChange={this.onWarningChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='danger'\n          text='Danger'\n          checked={this.state.dangerChecked}\n          onChange={this.onDangerChange}\n        />\n        <CheckBox\n          style={styles.checkbox}\n          status='basic'\n          text='Basic'\n          checked={this.state.basicChecked}\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  checkbox: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport class CheckboxTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckedChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <CheckBox\n        style={styles.checkbox}\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onCheckedChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    margin: 8,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { CheckBox } from 'react-native-ui-kitten';\n\nexport class CheckboxInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckedChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <CheckBox\n        style={styles.checkbox}\n        textStyle={styles.text}\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onCheckedChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  checkbox: {\n    margin: 8,\n  },\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  CheckBox,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class CheckboxIndeterminateShowcase extends React.Component {\n\n  state = {\n    mainCheckboxChecked: false,\n    mainCheckboxIndeterminate: false,\n    checkbox1Checked: false,\n    checkbox2Checked: false,\n    checkbox3Checked: false,\n  };\n\n  onMainCheckboxChange = (checked) => {\n    if (checked) {\n      this.setState({\n        checkbox1Checked: true,\n        checkbox2Checked: true,\n        checkbox3Checked: true,\n      });\n    } else {\n      this.setState({\n        checkbox1Checked: false,\n        checkbox2Checked: false,\n        checkbox3Checked: false,\n      });\n    }\n    this.setState({ mainCheckboxChecked: checked });\n  };\n\n  onCheckbox1Change = (checked) => {\n    this.setState({ checkbox1Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  onCheckbox2Change = (checked) => {\n    this.setState({ checkbox2Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  onCheckbox3Change = (checked) => {\n    this.setState({ checkbox3Checked: checked }, this.setMainCheckboxDependingState);\n  };\n\n  setMainCheckboxDependingState = () => {\n    const { checkbox1Checked, checkbox2Checked, checkbox3Checked } = this.state;\n    const states = [checkbox1Checked, checkbox2Checked, checkbox3Checked];\n    const someChecked = states.some((item) => item === true);\n    const everyChecked = states.every((item) => item === true);\n\n    if (someChecked && !everyChecked) {\n      this.setState({\n        mainCheckboxChecked: true,\n        mainCheckboxIndeterminate: true,\n      });\n    } else if (!someChecked && !everyChecked) {\n      this.setState({\n        mainCheckboxChecked: false,\n        mainCheckboxIndeterminate: false,\n      });\n    } else if (everyChecked) {\n      this.setState({\n        mainCheckboxChecked: true,\n        mainCheckboxIndeterminate: false,\n      });\n    }\n  };\n\n  render() {\n    const {\n      mainCheckboxChecked,\n      mainCheckboxIndeterminate,\n      checkbox1Checked,\n      checkbox2Checked,\n      checkbox3Checked,\n    } = this.state;\n\n    return (\n      <Layout style={styles.container}>\n        <CheckBox\n          style={styles.checkbox}\n          text='Main'\n          checked={mainCheckboxChecked}\n          indeterminate={mainCheckboxIndeterminate}\n          onChange={this.onMainCheckboxChange}\n        />\n        <CheckBox\n          text='Checkbox 1'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox1Checked}\n          onChange={this.onCheckbox1Change}\n        />\n        <CheckBox\n          text='Checkbox 2'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox2Checked}\n          onChange={this.onCheckbox2Change}\n        />\n        <CheckBox\n          text='Checkbox 3'\n          style={[styles.checkbox, styles.leftSpace]}\n          checked={checkbox3Checked}\n          onChange={this.onCheckbox3Change}\n        />\n      </Layout>\n    );\n  }\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  checkbox: {\n    marginVertical: 4,\n  },\n  leftSpace: {\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerBoundingMonthShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          boundingMonth={false}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerCustomDayShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  renderDay = ({ date }, style) => (\n    <View\n      style={[styles.dayContainer, style.container]}>\n      <Text style={style.text}>{`${date.getDate()}`}</Text>\n      <Text style={[style.text, styles.value]}>\n        {`${100 * date.getDate() + Math.pow(date.getDate(), 2)}$`}\n      </Text>\n    </View>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          onSelect={this.onSelect}\n          renderDay={this.renderDay}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n  dayContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    aspectRatio: 1,\n  },\n  value: {\n    fontSize: 12,\n    fontWeight: '400',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerFilterShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  filter = (date) => {\n    return date.getDay() !== 0 && date.getDay() !== 6;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          filter={this.filter}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n  NativeDateService,\n} from 'react-native-ui-kitten';\n\nconst i18n = {\n  dayNames: {\n    short: ['周日', '周一', '周二', '周三', '周四', '周五', '周六'],\n    long: ['星期天', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'],\n  },\n  monthNames: {\n    short: ['1月', '2月', '3月', '4月', '5月', '6月', '7月', '8月', '9月', '10月', '11月', '12月'],\n    long: ['一月', '二月', '三月', '四月', '五月', '六月', '七月', '八月', '九月', '十月', '十一月', '十二月'],\n  },\n};\n\nexport class DatepickerCustomLocaleShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  dateService = new NativeDateService('zh', i18n);\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Moment make sure to install Moment Date Service\n * npm i @ui-kitten/moment\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport moment from 'moment';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\nimport { MomentDateService } from '@ui-kitten/moment';\n\nexport class DatepickerMomentShowcase extends React.Component {\n\n  dateService = new MomentDateService();\n\n  state = {\n    date: moment(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          dateService={this.dateService}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DatepickerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Datepicker,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst CalendarIcon = (style) => (\n  <Icon {...style} name='calendar'/>\n);\n\nexport class DatepickerWithIconShowcase extends React.Component {\n\n  state = {\n    date: new Date(),\n  };\n\n  onSelect = (date) => {\n    this.setState({ date });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Datepicker\n          date={this.state.date}\n          icon={CalendarIcon}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  RangeDatepicker,\n} from 'react-native-ui-kitten';\n\nexport class RangeDatepickerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    range: {\n      startDate: null,\n      endDate: null,\n    },\n  };\n\n  onSelect = (range) => {\n    this.setState({ range });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <RangeDatepicker\n          range={this.state.range}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 400,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DrawerSimpleUsageShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nconst MessagesIcon = (style) => (\n  <Icon {...style} name='email'/>\n);\n\nconst SettingsIcon = (style) => (\n  <Icon {...style} name='settings'/>\n);\n\nexport class DrawerWithIconsShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard', icon: DashboardIcon },\n    { title: 'Messages', icon: MessagesIcon },\n    { title: 'Settings', icon: SettingsIcon },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderFooter,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nconst PersonIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nexport class DrawerHeaderShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderProfileHeader = () => (\n    <DrawerHeaderFooter\n      title='John Doe'\n      description='React Native Developer'\n      icon={PersonIcon}\n    />\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            header={this.renderProfileHeader}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { DrawerHeaderFooter } from 'react-native-ui-kitten';\n\nexport const DrawerHeaderFooterInlineStylingShowcase = () => (\n  <DrawerHeaderFooter\n    style={styles.drawerHeader}\n    titleStyle={styles.drawerHeaderTitle}\n    descriptionStyle={styles.drawerHeaderDescription}\n    title='John Doe'\n    description='React Native Developer'\n  />\n);\n\nconst styles = StyleSheet.create({\n  drawerHeader: { backgroundColor: 'black' },\n  drawerHeaderTitle: { color: 'white' },\n  drawerHeaderDescription: { color: 'gray' },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  DrawerHeaderFooter,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst ProfileIcon = (style) => (\n  <Icon {...style} name='person'/>\n);\n\nexport const DrawerHeaderFooterSimpleUsageShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={ProfileIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  DrawerHeaderFooter,\n  Icon,\n} from 'react-native-ui-kitten';\n\nconst LogoutIcon = (style) => (\n  <Icon {...style} name='log-out'/>\n);\n\nconst LogoutButton = (style) => (\n  <Button style={style} icon={LogoutIcon}/>\n);\n\nexport const DrawerHeaderFooterWithAccessoryShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    accessory={LogoutButton}\n  />\n);\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { DrawerHeaderFooter } from 'react-native-ui-kitten';\n\nconst ProfileIcon = (style) => (\n  <Image style={style} source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/profile.png'}}/>\n);\n\nexport const DrawerHeaderFooterWithExternalSourceIconShowcase = () => (\n  <DrawerHeaderFooter\n    title='John Doe'\n    description='React Native Developer'\n    icon={ProfileIcon}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  DrawerHeaderFooter,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class DrawerFooterShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderFooter = () => (\n    <DrawerHeaderFooter description='Drawer Footer'/>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            footer={this.renderFooter}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class DrawerCustomHeaderShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages' },\n    { title: 'Settings' },\n    { title: 'Articles' },\n    { title: 'Ecommerce' },\n    { title: 'Chat' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  renderHeader = () => (\n    <Layout level='2'>\n      <Text category='h6'>Drawer Header</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            header={this.renderHeader}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { SafeAreaView } from 'react-navigation';\nimport {\n  Drawer,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nconst NotificationBadge = (style) => (\n  <Layout style={[style, styles.badge]}>\n    <Text>NEW</Text>\n  </Layout>\n);\n\nexport class DrawerNotificationBadgeItemShowcase extends React.Component {\n\n  drawerData = [\n    { title: 'Dashboard' },\n    { title: 'Messages', accessory: NotificationBadge },\n    { title: 'Settings' },\n    { title: 'Articles' },\n  ];\n\n  onRouteSelect = (index) => {\n    // const { [index]: route } = this.drawerData;\n    // navigate with React Navigation\n    // this.props.navigation.navigate(route.title);\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <SafeAreaView>\n          <Drawer\n            data={this.drawerData}\n            onSelect={this.onRouteSelect}\n          />\n        </SafeAreaView>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  badge: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 24,\n    width: 48,\n    paddingHorizontal: 24,\n    borderRadius: 12,\n    backgroundColor: 'orange',\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n *\n * Visit react-native-svg documentation for more details on styling\n * https://github.com/react-native-community/react-native-svg#common-props\n */\n\nimport React from 'react';\nimport { Icon } from 'react-native-ui-kitten';\n\nexport const IconSimpleUsageShowcase = () => (\n  <Icon name='star' width={32} height={32} fill='#3366FF' />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconWithinButtonShowcase extends React.Component {\n\n  state = {\n    liked: false,\n  };\n\n  onPress = () => {\n    const liked = !this.state.liked;\n    this.setState({ liked });\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      name={this.state.liked ? 'heart' : 'heart-outline'}\n      {...style}\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        LIKE\n      </Button>\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Input,\n} from 'react-native-ui-kitten';\n\nexport class IconWithinInputShowcase extends React.Component {\n\n  state = {\n    value: '',\n    secureTextEntry: true,\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  onIconPress = () => {\n    const secureTextEntry = !this.state.secureTextEntry;\n    this.setState({ secureTextEntry });\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      name={!this.state.secureTextEntry ? 'eye' : 'eye-off'}\n    />\n  );\n\n  render() {\n    return (\n      <Input\n        placeholder='Password'\n        value={this.state.value}\n        secureTextEntry={this.state.secureTextEntry}\n        onChangeText={this.onChangeText}\n        icon={this.renderIcon}\n        onIconPress={this.onIconPress}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Button } from 'react-native-ui-kitten';\n\nconst RemoteBulbIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/outline/png/128/bulb-outline.png' }}\n  />\n);\n\nexport const IconExternalSourceShowcase = (props) => (\n  <Button icon={RemoteBulbIcon}>\n    Login with Facebook\n  </Button>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconAnimationShowcase extends React.Component {\n\n  iconRef = React.createRef();\n\n  onPress = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      ref={this.iconRef}\n      name='star'\n      animation='shake'\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        START ANIMATION\n      </Button>\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n} from 'react-native-ui-kitten';\n\nexport class IconAnimationInfiniteShowcase extends React.Component {\n\n  iconRef = React.createRef();\n\n  onPress = () => {\n    this.iconRef.current.startAnimation();\n  };\n\n  renderIcon = (style) => (\n    <Icon\n      {...style}\n      ref={this.iconRef}\n      name='star'\n      animation='shake'\n      animationConfig={{ cycles: -1 }}\n    />\n  );\n\n  render() {\n    return (\n      <Button\n        icon={this.renderIcon}\n        onPress={this.onPress}>\n        START ANIMATION\n      </Button>\n    );\n  }\n}\n","/**\n * Visit react-native-svg documentation for more details on styling\n * https://github.com/react-native-community/react-native-svg#common-props\n */\n\nimport React from 'react';\nimport { Icon } from 'react-native-ui-kitten';\n\nexport const IconInlineStylingShowcase = (props) => (\n  <Icon\n    name='github'\n    width={32}\n    height={32}\n    fill='#FF7E6D'\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputInlineStylingShowcase extends React.Component {\n\n  state = {\n    inputValue: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.inputValue}\n        placeholder='Place your Text'\n        style={styles.input}\n        textStyle={styles.inputText}\n        labelStyle={styles.inputLabel}\n        captionTextStyle={styles.inputCaption}\n        onChangeText={this.onChangeText}\n        label='LABEL'\n        caption='CAPTION'\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  input: { borderRadius: 24 },\n  inputText: { color: '#3366FF' },\n  inputLabel: { color: '#3366FF' },\n  inputCaption: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputSimpleUsageShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          value={this.state.value}\n          onChangeText={this.onChangeText}\n          placeholder='Active'\n        />\n        <Input\n          style={styles.input}\n          disabled={true}\n          placeholder='Disabled'\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n  },\n  input: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputSizeShowcase extends React.Component {\n\n  state = {\n    smallValue: '',\n    mediumValue: '',\n    largeValue: '',\n  };\n\n  onSmallTextChange = (smallValue) => {\n    this.setState({ smallValue });\n  };\n\n  onMediumTextChange = (mediumValue) => {\n    this.setState({ mediumValue });\n  };\n\n  onLargeTextChange = (largeValue) => {\n    this.setState({ largeValue });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          size='small'\n          placeholder='Small'\n          value={this.state.smallValue}\n          onChangeText={this.onSmallTextChange}\n        />\n        <Input\n          style={styles.input}\n          size='medium'\n          placeholder='Medium'\n          value={this.state.mediumValue}\n          onChangeText={this.onMediumTextChange}\n        />\n        <Input\n          style={styles.input}\n          size='large'\n          placeholder='Large'\n          value={this.state.largeValue}\n          onChangeText={this.onLargeTextChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  input: {\n    marginVertical: 4,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Input,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class InputStatusShowcase extends React.Component {\n\n  state = {\n    primaryValue: '',\n    successValue: '',\n    infoValue: '',\n    warningValue: '',\n    dangerValue: '',\n  };\n\n  onPrimaryTextChange = (primaryValue) => {\n    this.setState({ primaryValue });\n  };\n\n  onSuccessTextChange = (successValue) => {\n    this.setState({ successValue });\n  };\n\n  onInfoTextChange = (infoValue) => {\n    this.setState({ infoValue });\n  };\n\n  onWarningTextChange = (warningValue) => {\n    this.setState({ warningValue });\n  };\n\n  onDangerTextChange = (dangerValue) => {\n    this.setState({ dangerValue });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Input\n          style={styles.input}\n          status='primary'\n          placeholder='Primary'\n          value={this.state.primaryValue}\n          onChangeText={this.onPrimaryTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='success'\n          placeholder='Success'\n          value={this.state.successValue}\n          onChangeText={this.onSuccessTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='info'\n          placeholder='Info'\n          value={this.state.infoValue}\n          onChangeText={this.onInfoTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='warning'\n          placeholder='Warning'\n          value={this.state.warningValue}\n          onChangeText={this.onWarningTextChange}\n        />\n        <Input\n          style={styles.input}\n          status='danger'\n          placeholder='Danger'\n          value={this.state.dangerValue}\n          onChangeText={this.onDangerTextChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  input: {\n    marginVertical: 4,\n  },\n});\n\n","import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputWithCaptionShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  isValidValue = () => {\n    return this.state.value.length >= 6;\n  };\n\n  render() {\n    const isValidInputValue = this.isValidValue();\n    return (\n      <Input\n        placeholder='Place your Text'\n        status={isValidInputValue ? 'success' : 'danger'}\n        caption={isValidInputValue ? '' : 'Invalid value'}\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { Icon, Input } from 'react-native-ui-kitten';\n\nexport class InputWithIconShowcase extends React.Component {\n\n  state = {\n    value: '',\n    secureTextEntry: true,\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  onIconPress = () => {\n    const secureTextEntry = !this.state.secureTextEntry;\n    this.setState({ secureTextEntry });\n  };\n\n  renderIcon = (style) => {\n    const iconName = this.state.secureTextEntry ? 'eye-off' : 'eye';\n    return (\n      <Icon {...style} name={iconName}/>\n    );\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        placeholder='Place your Text'\n        icon={this.renderIcon}\n        secureTextEntry={this.state.secureTextEntry}\n        onIconPress={this.onIconPress}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { Icon, Input } from 'react-native-ui-kitten';\nimport { Image } from 'react-native';\n\nexport class InputWithExternalSourceIconShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  renderIcon = (style) => {\n    return (\n      <Image\n        style={style}\n        source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/eye-off.png'}}\n      />\n    );\n  };\n\n  render() {\n    return (\n      <Input\n        value={this.state.value}\n        placeholder='Place your Text'\n        icon={this.renderIcon}\n        secureTextEntry={true}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Input } from 'react-native-ui-kitten';\n\nexport class InputWithLabelShowcase extends React.Component {\n\n  state = {\n    value: '',\n  };\n\n  onChangeText = (value) => {\n    this.setState({ value });\n  };\n\n  render() {\n    return (\n      <Input\n        label='LABEL'\n        placeholder='Place your Text'\n        value={this.state.value}\n        onChangeText={this.onChangeText}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutSimpleUsageShowcase = () => {\n\n  return (\n    <Layout style={styles.container}>\n      <Text>Welcome To React Native UI Kitten!</Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutLevelShowcase = () => {\n\n  return (\n    <Layout style={styles.container} level='4'>\n      <Layout style={styles.container} level='3'>\n        <Layout style={styles.container} level='2'>\n          <Layout style={[styles.container, styles.contentContainer]}>\n            <Text>Welcome To React Native UI Kitten!</Text>\n          </Layout>\n        </Layout>\n      </Layout>\n    </Layout>\n\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  contentContainer: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const LayoutInlineStylingShowcase = () => {\n\n  return (\n    <Layout style={[styles.container, styles.additionalContainerStyle]}>\n      <Text>Welcome To React Native UI Kitten!</Text>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  additionalContainerStyle: {\n    borderColor: 'red',\n    borderWidth: 2,\n    borderRadius: 8,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","/**\n * This example demonstrates how simply could be composed List Item\n * with classic layouts like icon at the left, forward button at the right, etc.\n *\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n  description: 'Description for Item',\n};\n\nexport const ListCompositeItemShowcase = () => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItemAccessory = (style) => (\n    <Button style={style}>FOLLOW</Button>\n  );\n\n  const renderItemIcon = (style) => (\n    <Icon {...style} name='person' />\n  );\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n      icon={renderItemIcon}\n      accessory={renderItemAccessory}\n    />\n  );\n\n  return (\n    <List\n      style={styles.list}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    height: 150,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n  description: 'Description for Item',\n};\n\nexport const ListInlineStylingShowcase = (props) => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItem = ({ item, index }) => (\n    <ListItem\n      title={`${item.title} ${index + 1}`}\n      description={`${item.description} ${index + 1}`}\n    />\n  );\n\n  return (\n    <List\n      contentContainerStyle={styles.contentContainer}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  contentContainer: { paddingHorizontal: 8 },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { ListItem } from 'react-native-ui-kitten';\n\nexport const ListItemInlineStylingShowcase = (props) => (\n  <ListItem\n    style={styles.listItem}\n    titleStyle={styles.listItemTitle}\n    descriptionStyle={styles.listItemDescription}\n    title='Title'\n    description='Description'\n  />\n);\n\nconst styles = StyleSheet.create({\n  listItem: { borderRadius: 8 },\n  listItemTitle: { color: '#3366ff' },\n  listItemDescription: { color: '#2E3A59' },\n});\n","import React from 'react';\nimport { ListItem } from 'react-native-ui-kitten';\n\nexport const ListItemSimpleUsageShowcase = (props) => (\n  <ListItem title='Title' />\n);\n","import React from 'react';\nimport {\n  CheckBox,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nexport class ListItemWithAccessoryShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onCheckBoxCheckedChange = (index) => {\n    const checked = !this.state.checked;\n    this.setState({ checked });\n  };\n\n  renderAccessory = (style, index) => (\n    <CheckBox\n      style={style}\n      checked={this.state.checked}\n      onChange={() => this.onCheckBoxCheckedChange(index)}\n    />\n  );\n\n  render() {\n    return (\n      <ListItem\n        title='Title'\n        description='Description'\n        accessory={this.renderAccessory}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { ListItem } from 'react-native-ui-kitten';\n\nconst RemoteStarIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nexport const ListItemWithExternalIconShowcase = (props) => (\n  <ListItem\n    title='Title'\n    description='Description'\n    icon={RemoteStarIcon}\n  />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport const ListItemWithIconShowcase = (props) => (\n  <ListItem\n    title='Title'\n    description='Description'\n    icon={StarIcon}\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  List,\n  ListItem,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Item',\n};\n\nexport const ListSimpleUsageShowcase = (props) => {\n\n  const data = new Array(8).fill(SAMPLE_DATA);\n\n  const renderItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`} />\n  );\n\n  return (\n    <List\n      style={styles.list}\n      data={data}\n      renderItem={renderItem}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  list: {\n    height: 150,\n  },\n});\n","import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    { title: 'Item 2', disabled: true },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuWithSubMenuShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    {\n      title: 'Item 2',\n      subItems: [\n        { title: 'Sub Item 1' },\n        { title: 'Sub Item 2' },\n      ],\n    },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuAppearanceShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Item 1' },\n    { title: 'Item 2' },\n    { title: 'Item 3' },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        appearance='noDivider'\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Menu,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport class MenuWithIconsShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    {\n      title: 'Item 1',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 2',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 3',\n      icon: StarIcon,\n    },\n    {\n      title: 'Item 4',\n      icon: StarIcon,\n    },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Menu } from 'react-native-ui-kitten';\n\nexport class MenuInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: null,\n  };\n\n  data = [\n    {\n      title: 'Item 1',\n      titleStyle: styles.menuItemTitle,\n    },\n    { title: 'Item 2' },\n    {\n      title: 'Item 3',\n      titleStyle: styles.menuItemTitle,\n    },\n    { title: 'Item 4' },\n  ];\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <Menu\n        data={this.data}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  menuItemTitle: {\n    color: 'black',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuWithoutDividerShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2' },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          appearance='noDivider'\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport {\n  Image,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nconst RemoteStarIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/star.png' }}\n  />\n);\n\nexport class OverflowMenuExternalSourceIconsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1', icon: RemoteStarIcon },\n    { title: 'Menu Item 2', icon: RemoteStarIcon },\n    { title: 'Menu Item 3', icon: RemoteStarIcon },\n    { title: 'Menu Item 4', icon: RemoteStarIcon },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuSimpleUsageShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2' },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nexport class OverflowMenuWithDisabledItemsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1' },\n    { title: 'Menu Item 2', disabled: true },\n    { title: 'Menu Item 3' },\n    { title: 'Menu Item 4' },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Icon,\n  Layout,\n  OverflowMenu,\n} from 'react-native-ui-kitten';\n\nconst StarIcon = (style) => (\n  <Icon {...style} name='star'/>\n);\n\nexport class OverflowMenuWithIconsShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n    selectedIndex: null,\n  };\n\n  data = [\n    { title: 'Menu Item 1', icon: StarIcon },\n    { title: 'Menu Item 2', icon: StarIcon },\n    { title: 'Menu Item 3', icon: StarIcon },\n    { title: 'Menu Item 4', icon: StarIcon },\n  ];\n\n  onItemSelect = (selectedIndex) => {\n    this.setState({ selectedIndex }, this.toggleMenu);\n  };\n\n  toggleMenu = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <OverflowMenu\n          data={this.data}\n          visible={this.state.menuVisible}\n          selectedIndex={this.state.selectedIndex}\n          onSelect={this.onItemSelect}\n          onBackdropPress={this.toggleMenu}>\n          <Button onPress={this.toggleMenu}>\n            TOGGLE MENU\n          </Button>\n        </OverflowMenu>\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 256,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Layout,\n  Popover,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class PopoverSimpleUsageShowcase extends React.Component {\n\n  state = {\n    popoverVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const popoverVisible = !this.state.popoverVisible;\n    this.setState({ popoverVisible });\n  };\n\n  renderPopoverContent = () => (\n    <Layout style={styles.popoverContent}>\n      <Text>Hi! This is popover.</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <Popover\n        visible={this.state.popoverVisible}\n        content={this.renderPopoverContent()}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE POPOVER\n        </Button>\n      </Popover>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Popover,\n  Button,\n  Text,\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class PopoverPlacementShowcase extends React.Component {\n\n  state = {\n    visible: false,\n    placement: { text: 'top' },\n  };\n\n  placements = [\n    { text: 'top' },\n    { text: 'top start' },\n    { text: 'top end' },\n    { text: 'left' },\n    { text: 'left start' },\n    { text: 'left end' },\n    { text: 'right' },\n    { text: 'right start' },\n    { text: 'right end' },\n    { text: 'bottom' },\n    { text: 'bottom start' },\n    { text: 'bottom end' },\n  ];\n\n  setVisible = () => {\n    const visible = !this.state.visible;\n\n    this.setState({ visible });\n  };\n\n  setPlacement = (placement) => {\n    this.setState({ placement });\n  };\n\n  renderPopoverContent = () => (\n    <Layout style={styles.popoverContent}>\n      <Text>Hi! This is popover.</Text>\n    </Layout>\n  );\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Select\n          label='Select Popover Placement'\n          data={this.placements}\n          selectedOption={this.state.placement}\n          onSelect={this.setPlacement}\n        />\n        <View style={styles.subContainer}>\n          <Popover\n            visible={this.state.visible}\n            placement={this.state.placement.text}\n            content={this.renderPopoverContent()}\n            onBackdropPress={this.setVisible}>\n            <Button\n              size='giant'\n              onPress={this.setVisible}>\n              SHOW POPOVER\n            </Button>\n          </Popover>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  subContainer: {\n    height: 400,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    width: 150,\n  },\n  popoverContent: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  select: {\n    position: 'absolute',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Radio,\n} from 'react-native-ui-kitten';\n\nexport class RadioSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Radio\n          style={styles.radio}\n          text='Active'\n          checked={this.state.checked}\n          onChange={this.onChange}\n        />\n        <Radio\n          style={styles.radio}\n          text='Disabled'\n          disabled={true}\n        />\n        <Radio\n          style={styles.radio}\n          text='Checked Disabled'\n          checked={true}\n          disabled={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  radio: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n\n","import React from 'react';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioWithTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        text='Place your Text'\n        checked={this.state.checked}\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Radio,\n} from 'react-native-ui-kitten';\n\nexport class RadioStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Radio\n          style={styles.radio}\n          status='primary'\n          text='Primary'\n          checked={this.state.primaryChecked}\n          onChange={this.onPrimaryChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='success'\n          text='Success'\n          checked={this.state.successChecked}\n          onChange={this.onSuccessChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='info'\n          text='Info'\n          checked={this.state.infoChecked}\n          onChange={this.onInfoChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='warning'\n          text='Warning'\n          checked={this.state.warningChecked}\n          onChange={this.onWarningChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='danger'\n          text='Danger'\n          checked={this.state.dangerChecked}\n          onChange={this.onDangerChange}\n        />\n        <Radio\n          style={styles.radio}\n          status='basic'\n          text='Basic'\n          checked={this.state.basicChecked}\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  radio: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Radio } from 'react-native-ui-kitten';\n\nexport class RadioInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Radio\n        style={styles.radio}\n        textStyle={styles.radioText}\n        checked={this.state.checked}\n        text='Place your text'\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  radio: {\n    width: 32,\n    height: 32,\n  },\n  radioText: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Radio,\n  RadioGroup,\n} from 'react-native-ui-kitten';\n\nexport class RadioGroupSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onChange = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <RadioGroup\n        style={styles.container}\n        selectedIndex={this.state.selectedIndex}\n        onChange={this.onChange}>\n        <Radio style={styles.radio} text='Option 1' />\n        <Radio style={styles.radio} text='Option 2' />\n        <Radio style={styles.radio} text='Option 3' />\n      </RadioGroup>\n    );\n  }\n}\n\nexport const styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n    paddingHorizontal: 8,\n  },\n  radio: {\n    marginVertical: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectSimpleUsageShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3', disabled: true },\n    { text: 'Option 4' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          style={styles.select}\n          data={this.data}\n          placeholder='Active'\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n        <Select\n          style={styles.select}\n          data={this.data}\n          placeholder='Disabled'\n          disabled={true}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    height: 230,\n    paddingVertical: 8,\n    paddingHorizontal: 4,\n  },\n  select: {\n    flex: 1,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectMultiSelectShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: [],\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          multiSelect={true}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectWithGroupsShowcase extends React.Component {\n\n  items = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    {\n      text: 'Option 3',\n      items: [\n        { text: 'SubOption 1' },\n        { text: 'SubOption 2' },\n      ],\n    },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.items}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 280,\n    padding: 16,\n  },\n});\n\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Select,\n  Icon,\n  Layout,\n} from 'react-native-ui-kitten';\n\nexport class SelectCustomIconShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  renderIcon = (style, visible) => {\n    const iconName = visible ? 'arrow-ios-upward' : 'arrow-ios-downward';\n    return (\n      <Icon {...style} name={iconName}/>\n    );\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          selectedOption={this.state.selectedOption}\n          icon={this.renderIcon}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectStatusShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOptionPrimary: null,\n    selectedOptionSuccess: null,\n    selectedOptionInfo: null,\n    selectedOptionDanger: null,\n    selectedOptionWarning: null,\n    selectedOptionBasic: null,\n  };\n\n  onPrimarySelect = (selectedOptionPrimary) => {\n    this.setState({ selectedOptionPrimary });\n  };\n\n  onSuccessSelect = (selectedOptionSuccess) => {\n    this.setState({ selectedOptionSuccess });\n  };\n\n  onInfoSelect = (selectedOptionInfo) => {\n    this.setState({ selectedOptionInfo });\n  };\n\n  onDangerSelect = (selectedOptionDanger) => {\n    this.setState({ selectedOptionDanger });\n  };\n\n  onWarningSelect = (selectedOptionWarning) => {\n    this.setState({ selectedOptionWarning });\n  };\n\n  onBasicSelect = (selectedOptionBasic) => {\n    this.setState({ selectedOptionBasic });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          status='primary'\n          placeholder='Primary'\n          selectedOption={this.state.selectedOptionPrimary}\n          onSelect={this.onPrimarySelect}\n        />\n        <Select\n          data={this.data}\n          status='success'\n          placeholder='Success'\n          selectedOption={this.state.selectedOptionSuccess}\n          onSelect={this.onSuccessSelect}\n        />\n        <Select\n          data={this.data}\n          status='info'\n          placeholder='Info'\n          selectedOption={this.state.selectedOptionInfo}\n          onSelect={this.onInfoSelect}\n        />\n        <Select\n          data={this.data}\n          status='warning'\n          placeholder='Warning'\n          selectedOption={this.state.selectedOptionWarning}\n          onSelect={this.onWarningSelect}\n        />\n        <Select\n          data={this.data}\n          status='danger'\n          placeholder='Danger'\n          selectedOption={this.state.selectedOptionDanger}\n          onSelect={this.onDangerSelect}\n        />\n        <Select\n          data={this.data}\n          status='basic'\n          placeholder='Basic'\n          selectedOption={this.state.selectedOptionBasic}\n          onSelect={this.onBasicSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectInlineStylingShowcase extends React.Component {\n\n  private data = [\n    { text: 'Option 1' },\n    { text: 'Option 2', textStyle: styles.option2 },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: null,\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          labelStyle={styles.labelStyle}\n          placeholderStyle={styles.placeholderStyle}\n          controlStyle={styles.controlStyle}\n          data={this.data}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n  labelStyle: {\n    color: 'gray',\n  },\n  placeholderStyle: {\n    color: 'gray',\n  },\n  controlStyle: {\n    borderRadius: 8,\n  },\n  option2: {\n    color: 'red',\n    fontSize: 18,\n  },\n});\n","/**\n * IMPORTANT: Do not forget to set keyExtractor property in such case!\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectMultiPreselectedInlineShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: [\n      { text: 'Option 2' },\n      { text: 'Option 3' },\n    ],\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  extractKey = (item) => {\n    return item.text;\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          multiSelect={true}\n          selectedOption={this.state.selectedOption}\n          keyExtractor={this.extractKey}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class SelectMultiPreselectedReferenceShowcase extends React.Component {\n\n  data = [\n    { text: 'Option 1' },\n    { text: 'Option 2' },\n    { text: 'Option 3' },\n  ];\n\n  state = {\n    selectedOption: [this.data[1], this.data[2]],\n  };\n\n  onSelect = (selectedOption) => {\n    this.setState({ selectedOption });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Select\n          data={this.data}\n          multiSelect={true}\n          selectedOption={this.state.selectedOption}\n          onSelect={this.onSelect}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: 230,\n    padding: 16,\n  },\n});\n\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  List,\n  ListItem,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nconst SAMPLE_DATA = {\n  title: 'Title for Item',\n};\n\nexport class SpinnerDataLoadingShowcase extends React.Component {\n\n  state = {\n    data: [],\n  };\n\n  componentDidMount() {\n    setTimeout(this.loadData, 5000);\n  }\n\n  loadData = () => {\n    const data = new Array(8).fill(SAMPLE_DATA);\n    this.setState({ data });\n  };\n\n  private renderLoading = () => (\n    <View style={styles.loading}>\n      <Spinner/>\n    </View>\n  );\n\n  renderDataItem = ({ item, index }) => (\n    <ListItem title={`${item.title} ${index + 1}`}/>\n  );\n\n  renderData = () => (\n    <List\n      data={this.state.data}\n      renderItem={this.renderDataItem}\n    />\n  );\n\n  render() {\n    const isLoaded: boolean = this.state.data.length > 0;\n    return isLoaded ? this.renderData() : this.renderLoading();\n  }\n}\n\nconst styles = StyleSheet.create({\n  loading: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import React from 'react';\nimport { Spinner } from 'react-native-ui-kitten';\n\nexport const SpinnerSimpleUsageShowcase = () => (\n  <Spinner/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nexport const SpinnerSizesShowcase = () => (\n  <Layout style={styles.container}>\n    <Spinner size='tiny'/>\n    <Spinner size='small'/>\n    <Spinner size='medium'/>\n    <Spinner size='large'/>\n    <Spinner size='giant'/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Spinner,\n} from 'react-native-ui-kitten';\n\nexport const SpinnerStatusesShowcase = () => (\n  <Layout style={styles.container}>\n    <Spinner status='primary'/>\n    <Spinner status='success'/>\n    <Spinner status='info'/>\n    <Spinner status='warning'/>\n    <Spinner status='danger'/>\n    <Spinner status='alternative'/>\n  </Layout>\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport {\n  Tab,\n  TabBar,\n} from 'react-native-ui-kitten';\n\nexport class TabBarSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onBarSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <TabBar\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onBarSelect}>\n        <Tab title='Tab 1'/>\n        <Tab title='Tab 2'/>\n        <Tab title='Tab 3'/>\n      </TabBar>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Tab } from 'react-native-ui-kitten';\n\nexport const TabInlineStylingShowcase = (props) => (\n  <Tab\n    style={styles.tab}\n    titleStyle={styles.tabTitle}\n    title='DASHBOARD'\n  />\n);\n\nconst styles = StyleSheet.create({\n  tab: { backgroundColor: '#EDF1F7' },\n  tabTitle: { color: '#3366FF' },\n});\n","import React from 'react';\nimport { Tab } from 'react-native-ui-kitten';\n\nexport const TabSimpleUsageShowcase = (props) => (\n  <Tab title='Tab Title' />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TabViewInlineStylingShowcase = (props) => (\n  <TabView\n    style={styles.tabView}\n    tabBarStyle={styles.tabBar}\n    indicatorStyle={styles.tabViewIndicator}>\n    <Tab title='DASHBOARD'>\n      <Text>DASHBOARD</Text>\n    </Tab>\n    <Tab title='SETTINGS'>\n      <Text>SETTINGS</Text>\n    </Tab>\n  </TabView>\n);\n\nconst styles = StyleSheet.create({\n  tabView: { backgroundColor: '#EDF1F7' },\n  tabBar: { backgroundColor: '#C5CEE0' },\n  tabViewIndicator: { backgroundColor: '#3366FF' },\n});\n","import React from 'react';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class TabViewLazyLoadingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  shouldLoadTabContent = (index) => {\n    return index === this.state.selectedIndex;\n  };\n\n  render() {\n    return (\n      <TabView\n        selectedIndex={this.state.selectedIndex}\n        shouldLoadComponent={this.shouldLoadTabContent}\n        onSelect={this.onSelect}>\n        <Tab title='DASHBOARD'>\n          <Text>DASHBOARD</Text>\n        </Tab>\n        <Tab title='SETTINGS'>\n          <Text>SETTINGS</Text>\n        </Tab>\n      </TabView>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  Tab,\n  TabView,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class TabViewSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <TabView\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}>\n        <Tab title='DASHBOARD'>\n          <Text>DASHBOARD</Text>\n        </Tab>\n        <Tab title='SETTINGS'>\n          <Text>SETTINGS</Text>\n        </Tab>\n      </TabView>\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { Tab } from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Image style={style} source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/layout.png' }}/>\n);\n\nexport const TabWithExternalSourceIconShowcase = (props) => (\n  <Tab title='DASHBOARD' icon={DashboardIcon}/>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Tab,\n} from 'react-native-ui-kitten';\n\nconst DashboardIcon = (style) => (\n  <Icon {...style} name='layout'/>\n);\n\nexport const TabWithIconShowcase = (props) => (\n  <Tab title='DASHBOARD' icon={DashboardIcon}/>\n);\n","import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextAppearancesShowcase = () => (\n  <Layout>\n    <Text appearance='default'>Default</Text>\n    <Text appearance='alternative'>Alternative</Text>\n    <Text appearance='hint'>Hint</Text>\n  </Layout>\n);\n","import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextCategoriesShowcase = () => (\n  <Layout>\n    <Text category='h1'>H1</Text>\n    <Text category='h2'>H2</Text>\n    <Text category='h3'>H3</Text>\n    <Text category='h4'>H4</Text>\n    <Text category='h5'>H5</Text>\n    <Text category='h6'>H6</Text>\n    <Text category='s1'>S1</Text>\n    <Text category='s2'>S2</Text>\n    <Text category='p1'>P1</Text>\n    <Text category='p2'>P2</Text>\n    <Text category='c1'>C1</Text>\n    <Text category='c2'>C2</Text>\n    <Text category='label'>LABEL</Text>\n  </Layout>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Text } from 'react-native-ui-kitten';\n\nexport const TextInlineStylingShowcase = () => (\n  <Text style={styles.text}>Sample Text</Text>\n);\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { Text } from 'react-native-ui-kitten';\n\nexport const TextSimpleUsageShowcase = () => (\n  <Text>Sample Text</Text>\n);\n","import React from 'react';\nimport {\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport const TextStatusesShowcase = () => (\n  <Layout>\n    <Text status='primary'>Primary</Text>\n    <Text status='success'>Success</Text>\n    <Text status='info'>Info</Text>\n    <Text status='warning'>Warning</Text>\n    <Text status='danger'>Danger</Text>\n  </Layout>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleSimpleUsageShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onToggleValueChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          text='Active'\n          checked={this.state.checked}\n          onChange={this.onToggleValueChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          text='Disabled'\n          disabled={true}\n        />\n        <Toggle\n          style={styles.toggle}\n          text='Checked Disabled'\n          checked={true}\n          disabled={true}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleStatusShowcase extends React.Component {\n\n  state = {\n    primaryChecked: false,\n    successChecked: false,\n    infoChecked: false,\n    warningChecked: false,\n    dangerChecked: false,\n    basicChecked: false,\n  };\n\n  onPrimaryChange = (primaryChecked) => {\n    this.setState({ primaryChecked });\n  };\n\n  onSuccessChange = (successChecked) => {\n    this.setState({ successChecked });\n  };\n\n  onInfoChange = (infoChecked) => {\n    this.setState({ infoChecked });\n  };\n\n  onWarningChange = (warningChecked) => {\n    this.setState({ warningChecked });\n  };\n\n  onDangerChange = (dangerChecked) => {\n    this.setState({ dangerChecked });\n  };\n\n  onBasicChange = (basicChecked) => {\n    this.setState({ basicChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.primaryChecked}\n          text='Primary'\n          status='primary'\n          onChange={this.onPrimaryChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.successChecked}\n          text='Success'\n          status='success'\n          onChange={this.onSuccessChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.infoChecked}\n          text='Info'\n          status='info'\n          onChange={this.onInfoChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.warningChecked}\n          text='Warning'\n          status='warning'\n          onChange={this.onWarningChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.dangerChecked}\n          text='Danger'\n          status='danger'\n          onChange={this.onDangerChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.basicChecked}\n          text='Basic'\n          status='basic'\n          onChange={this.onBasicChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Toggle,\n} from 'react-native-ui-kitten';\n\nexport class ToggleSizeShowcase extends React.Component {\n\n  state = {\n    tinyChecked: false,\n    smallChecked: false,\n    mediumChecked: false,\n    largeChecked: false,\n    giantChecked: false,\n  };\n\n  onTinyChange = (tinyChecked) => {\n    this.setState({ tinyChecked });\n  };\n\n  onSmallChange = (smallChecked) => {\n    this.setState({ smallChecked });\n  };\n\n  onMediumChange = (mediumChecked) => {\n    this.setState({ mediumChecked });\n  };\n\n  onLargeChange = (largeChecked) => {\n    this.setState({ largeChecked });\n  };\n\n  onGiantChange = (giantChecked) => {\n    this.setState({ giantChecked });\n  };\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.tinyChecked}\n          text='Tiny'\n          size='tiny'\n          onChange={this.onTinyChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.smallChecked}\n          text='Small'\n          size='small'\n          onChange={this.onSmallChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.mediumChecked}\n          text='Medium'\n          size='medium'\n          onChange={this.onMediumChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.largeChecked}\n          text='Large'\n          size='large'\n          onChange={this.onLargeChange}\n        />\n        <Toggle\n          style={styles.toggle}\n          checked={this.state.giantChecked}\n          text='Giant'\n          size='giant'\n          onChange={this.onGiantChange}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingVertical: 4,\n    paddingHorizontal: 4,\n  },\n  toggle: {\n    marginVertical: 4,\n    marginHorizontal: 4,\n  },\n});\n","import React from 'react';\nimport { Toggle } from 'react-native-ui-kitten';\n\nexport class ToggleWithTextShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Toggle\n        checked={this.state.checked}\n        text='Place your Text'\n        onChange={this.onChange}\n      />\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Toggle } from 'react-native-ui-kitten';\n\nexport class ToggleInlineStylingShowcase extends React.Component {\n\n  state = {\n    checked: false,\n  };\n\n  onToggleValueChange = (checked) => {\n    this.setState({ checked });\n  };\n\n  render() {\n    return (\n      <Toggle\n        checked={this.state.checked}\n        text='Place your Text'\n        textStyle={styles.text}\n        onChange={this.onToggleValueChange}\n      />\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  text: {\n    color: '#3366FF',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nexport class TooltipInlineStylingShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        textStyle={styles.tooltipText}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tooltipText: {\n    color: 'white',\n    fontSize: 18,\n  },\n});\n","import React from 'react';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nexport class TooltipSimpleUsageShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport { Image } from 'react-native';\nimport {\n  Button,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nconst InfoIcon = (style) => (\n  <Image\n    style={style}\n    source={{ uri: 'https://akveo.github.io/eva-icons/fill/png/128/info.png' }}\n  />\n);\n\nexport class TooltipWithExternalSourceIconShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        icon={InfoIcon}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Button,\n  Icon,\n  Tooltip,\n} from 'react-native-ui-kitten';\n\nconst InfoIcon = (style) => (\n  <Icon {...style} name='info'/>\n);\n\nexport class TooltipWithIconShowcase extends React.Component {\n\n  state = {\n    tooltipVisible: false,\n  };\n\n  onToggleButtonPress = () => {\n    const tooltipVisible = !this.state.tooltipVisible;\n    this.setState({ tooltipVisible });\n  };\n\n  render() {\n    return (\n      <Tooltip\n        visible={this.state.tooltipVisible}\n        text={'Hi! I\\'m a Tooltip'}\n        icon={InfoIcon}\n        onBackdropPress={this.onToggleButtonPress}>\n        <Button onPress={this.onToggleButtonPress}>\n          TOGGLE TOOLTIP\n        </Button>\n      </Tooltip>\n    );\n  }\n}\n","import React from 'react';\nimport {\n  View,\n  StyleSheet,\n} from 'react-native';\nimport {\n  Tooltip,\n  Button,\n  Select,\n} from 'react-native-ui-kitten';\n\nexport class TooltipPlacementShowcase extends React.Component {\n\n  state = {\n    visible: false,\n    placement: { text: 'top' },\n  };\n\n  placements = [\n    { text: 'top' },\n    { text: 'top start' },\n    { text: 'top end' },\n    { text: 'left' },\n    { text: 'left start' },\n    { text: 'left end' },\n    { text: 'right' },\n    { text: 'right start' },\n    { text: 'right end' },\n    { text: 'bottom' },\n    { text: 'bottom start' },\n    { text: 'bottom end' },\n  ];\n\n  setVisible = () => {\n    const visible = !this.state.visible;\n\n    this.setState({ visible });\n  };\n\n  setPlacement = (placement) => {\n    this.setState({ placement });\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <Select\n          label='Select Tooltip Placement'\n          data={this.placements}\n          selectedOption={this.state.placement}\n          onSelect={this.setPlacement}\n        />\n        <View style={styles.subContainer}>\n          <Tooltip\n            visible={this.state.visible}\n            placement={this.state.placement.text}\n            text='Hi! This is tooltip.'\n            onBackdropPress={this.setVisible}>\n            <Button\n              size='giant'\n              onPress={this.setVisible}>\n              SHOW TOOLTIP\n            </Button>\n          </Tooltip>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  subContainer: {\n    height: 400,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  button: {\n    width: 150,\n  },\n  select: {\n    position: 'absolute',\n  },\n});\n","import React from 'react';\nimport { Image } from 'react-native';\nimport { TopNavigationAction } from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Image\n    style={style}\n    source={{uri: 'https://akveo.github.io/eva-icons/fill/png/128/arrow-back.png'}}\n  />\n);\n\nexport const TopNavigationActionExternalSourceIconShowcase = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst EditIcon = (style) => (\n  <Icon {...style} name='edit' />\n);\n\nexport const TopNavigationActionInlineStylingShowcase = () => (\n  <TopNavigationAction\n    style={styles.action}\n    icon={EditIcon}\n  />\n);\n\nconst styles = StyleSheet.create({\n  action: { marginHorizontal: 4 },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst EditIcon = (style) => (\n  <Icon {...style} name='edit'/>\n);\n\nconst MenuIcon = (style) => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nconst BackAction = (props) => (\n  <TopNavigationAction {...props} icon={BackIcon}/>\n);\n\nconst EditAction = (props) => (\n  <TopNavigationAction {...props} icon={EditIcon}/>\n);\n\nconst MenuAction = (props) => (\n  <TopNavigationAction {...props} icon={MenuIcon}/>\n);\n\nexport const TopNavigationActionsShowcase = () => {\n\n  const onBackPress = () => {\n  };\n\n  const renderLeftControl = () => (\n    <BackAction onPress={onBackPress}/>\n  );\n\n  const renderRightControls = () => [\n    <EditAction/>,\n    <MenuAction/>,\n  ];\n\n  return (\n    <TopNavigation\n      title='Application Title'\n      leftControl={renderLeftControl()}\n      rightControls={renderRightControls()}\n    />\n  );\n};\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nexport const TopNavigationActionSimpleUsageShowcase = () => (\n  <TopNavigationAction icon={BackIcon} />\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  Layout,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationAlignmentsShowcase = () => (\n  <Layout>\n    <TopNavigation\n      title='Start'\n      alignment='start'\n      leftControl={BackAction()}\n    />\n    <TopNavigation\n      title='Center'\n      alignment='center'\n      leftControl={BackAction()}\n    />\n  </Layout>\n);\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationInlineStylingShowcase = () => (\n  <TopNavigation\n    style={styles.topNavigation}\n    title='Title'\n    subtitle='Subtitle'\n    leftControl={BackAction()}\n    titleStyle={styles.title}\n    subtitleStyle={styles.subtitle}\n  />\n);\n\nconst styles = StyleSheet.create({\n  topNavigation: { backgroundColor: '#1A2138' },\n  title: { color: '#EDF1F7' },\n  subtitle: { color: '#C5CEE0' },\n});\n","/**\n * IMPORTANT: To use Icon component make sure to follow this guide:\n * https://akveo.github.io/react-native-ui-kitten/docs/guides/eva-icons\n */\n\nimport React from 'react';\nimport {\n  Icon,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back' />\n);\n\nconst BackAction = () => (\n  <TopNavigationAction icon={BackIcon}/>\n);\n\nexport const TopNavigationSimpleUsageShowcase = () => (\n  <TopNavigation\n    leftControl={BackAction()}\n    title='Application Title'\n  />\n);\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Icon,\n  Layout,\n  OverflowMenu,\n  TopNavigation,\n  TopNavigationAction,\n} from 'react-native-ui-kitten';\n\nconst BackIcon = (style) => (\n  <Icon {...style} name='arrow-back'/>\n);\n\nconst MenuIcon = (style) => (\n  <Icon {...style} name='more-vertical'/>\n);\n\nconst InfoIcon = (style) => (\n  <Icon {...style} name='info'/>\n);\n\nconst LogoutIcon = (style) => (\n  <Icon {...style} name='log-out'/>\n);\n\nexport class TopNavigationWithMenuShowcase extends React.Component {\n\n  state = {\n    menuVisible: false,\n  };\n\n  menuData = [\n    { title: 'About', icon: InfoIcon },\n    { title: 'Logout', icon: LogoutIcon },\n  ];\n\n  onMenuActionPress = () => {\n    const menuVisible = !this.state.menuVisible;\n    this.setState({ menuVisible });\n  };\n\n  onMenuItemSelect = (index) => {\n    // Handle Item Select\n\n    this.setState({ menuVisible: false });\n  };\n\n  renderMenuAction = () => (\n    <OverflowMenu\n      visible={this.state.menuVisible}\n      data={this.menuData}\n      placement='bottom end'\n      onSelect={this.onMenuItemSelect}\n      onBackdropPress={this.onMenuActionPress}>\n      <TopNavigationAction\n        icon={MenuIcon}\n        onPress={this.onMenuActionPress}\n      />\n    </OverflowMenu>\n  );\n\n  renderBackAction = () => (\n    <TopNavigationAction icon={BackIcon} />\n  );\n\n  render() {\n    return (\n      <Layout style={styles.container}>\n        <TopNavigation\n          title='Application Title'\n          leftControl={this.renderBackAction()}\n          rightControls={this.renderMenuAction()}\n        />\n      </Layout>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    minHeight: 192,\n  },\n});\n\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ViewPager,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerInlineStylingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <ViewPager\n        style={styles.container}\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onSelect}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n  },\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  ViewPager,\n  Layout,\n  Text,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerLazyLoadingShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onSelect = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  shouldLoadComponent = (index) => {\n    return index === this.state.selectedIndex;\n  };\n\n  render() {\n    return (\n      <ViewPager\n        selectedIndex={this.state.selectedIndex}\n        shouldLoadComponent={this.shouldLoadComponent}\n        onSelect={this.onSelect}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport {\n  Layout,\n  Text,\n  ViewPager,\n} from 'react-native-ui-kitten';\n\nexport class ViewPagerSimpleUsageShowcase extends React.Component {\n\n  state = {\n    selectedIndex: 0,\n  };\n\n  onIndexChange = (selectedIndex) => {\n    this.setState({ selectedIndex });\n  };\n\n  render() {\n    return (\n      <ViewPager\n        selectedIndex={this.state.selectedIndex}\n        onSelect={this.onIndexChange}>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 1</Text>\n        </Layout>\n        <Layout\n          level='2'\n          style={styles.tab}>\n          <Text category='h5'>Tab 2</Text>\n        </Layout>\n      </ViewPager>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  tab: {\n    height: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n","import React from 'react';\nimport {\n  StyleSheet,\n  View,\n  ViewProps,\n} from 'react-native';\nimport {\n  NavigationRoute,\n  SafeAreaView,\n  DrawerItemsProps,\n} from 'react-navigation';\nimport {\n  Divider,\n  Drawer,\n  DrawerHeaderElement,\n  DrawerHeaderFooter,\n  Icon,\n  MenuItemType,\n  Text,\n  DrawerHeaderFooterElement,\n  StyleType,\n  IconElement,\n  DrawerElement,\n} from 'react-native-ui-kitten';\n\nexport class DrawerNavigation extends React.Component<DrawerItemsProps> {\n\n  private onItemSelect = (index: number) => {\n    const { [index]: selectedRoute } = this.props.items;\n    this.props.navigation.navigate(selectedRoute.routeName);\n  };\n\n  private createDrawerItem = (source: NavigationRoute): MenuItemType => {\n    return {\n      title: source.routeName,\n      // @ts-ignore\n      accessory: this.shouldRenderBadge(source) && this.renderBadge,\n    };\n  };\n\n  private shouldRenderBadge = (source: NavigationRoute): boolean => {\n    return source.routeName === 'Drawer';\n  };\n\n  private renderBadge = (style: StyleType): React.ReactElement<ViewProps> => {\n    return (\n      <View style={[style, styles.badge]}>\n        <Text category='c2'>NEW</Text>\n      </View>\n    );\n  };\n\n  private renderIcon = (style: StyleType): IconElement => {\n    return (\n      <Icon name='star' {...style}/>\n    );\n  };\n\n  private renderHeader = (): DrawerHeaderElement => {\n    return (\n      <React.Fragment>\n        <DrawerHeaderFooter\n          disabled={true}\n          title='UI Kitten'\n          description='Playground Module'\n          icon={this.renderIcon}\n        />\n        <Divider/>\n      </React.Fragment>\n    );\n  };\n\n  private renderFooter = (): DrawerHeaderFooterElement => {\n    return (\n      <React.Fragment>\n        <Divider/>\n        <DrawerHeaderFooter\n          disabled={true}\n          description='Version 4.2.0'\n        />\n      </React.Fragment>\n    );\n  };\n\n  public render(): DrawerElement {\n    const drawerItems: MenuItemType[] = this.props.items.map(this.createDrawerItem);\n\n    return (\n      <SafeAreaView style={[styles.safeArea]}>\n        <Drawer\n          header={this.renderHeader}\n          footer={this.renderFooter}\n          data={drawerItems}\n          onSelect={this.onItemSelect}\n        />\n      </SafeAreaView>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  safeArea: {\n    flex: 1,\n  },\n  badge: {\n    paddingHorizontal: 8,\n    height: 24,\n    width: 48,\n    borderRadius: 12,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: 'orange',\n  },\n});\n","import React from 'react';\nimport {\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\nimport {\n  Button,\n  Layout,\n  LayoutProps,\n  OverflowMenu,\n  OverflowMenuItemType,\n  IconElement,\n  Icon,\n  Text,\n} from 'react-native-ui-kitten';\nimport {\n  ThemeContext,\n  ThemeContextType,\n  ThemeKey,\n  themes,\n} from '../../src/themes';\n\ninterface Props {\n  showcaseId: string;\n}\n\nexport type SharingHeightContainerProps = LayoutProps & Props;\n\nconst ColorPaletteIcon = (style): IconElement => (\n  <Icon {...style} name='color-palette' />\n);\n\nexport const sharingHeightContainer = (Component: React.ComponentType,\n                                       showcaseId: string): React.ReactElement<SharingHeightContainerProps> => {\n\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const themeContext: ThemeContextType = React.useContext(ThemeContext);\n\n  const onThemesButtonPress = (): void => {\n    setMenuVisible(!menuVisible);\n  };\n\n  const onThemeSelect = (index: number): void => {\n    const { [index]: selectedTheme } = Object.keys(themes);\n\n    themeContext.toggleTheme(selectedTheme as ThemeKey);\n    setMenuVisible(false);\n  };\n\n  const onLayout = (event: LayoutChangeEvent): void => {\n    if (Platform.OS === 'web') {\n      postLayoutChangeEvent(event);\n    }\n  };\n\n  const postLayoutChangeEvent = ({ nativeEvent }: LayoutChangeEvent): void => {\n    const layoutChangeMessage: { height: number; id: string; } = {\n      id: showcaseId,\n      height: nativeEvent.layout.height,\n    };\n    window.parent.postMessage(layoutChangeMessage, '*');\n  };\n\n  const createThemeMenuItem = (theme: ThemeKey): OverflowMenuItemType => {\n    return {\n      title: theme,\n    };\n  };\n\n  const createThemesMenuItems = (): OverflowMenuItemType[] => {\n    return Object.keys(themes).map(createThemeMenuItem);\n  };\n\n  return (\n    <Layout\n      style={styles.container}\n      onLayout={onLayout}>\n      <View style={styles.optionsContainer}>\n        <Text\n          appearance='hint'\n          category='c1'>\n          Powered by React Native Web\n        </Text>\n        <OverflowMenu\n          visible={menuVisible}\n          onSelect={onThemeSelect}\n          data={createThemesMenuItems()}\n          onBackdropPress={onThemesButtonPress}>\n          <Button\n            appearance='ghost'\n            status='basic'\n            size='small'\n            icon={ColorPaletteIcon}\n            onPress={onThemesButtonPress}>\n            {themeContext.name}\n          </Button>\n        </OverflowMenu>\n      </View>\n      <Component/>\n    </Layout>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    minHeight: 170,\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n});\n","import React from \"react\";\nimport { Platform } from \"react-native\";\nimport { createAppContainer, NavigationRouteConfigMap, createStackNavigator, createDrawerNavigator } from \"react-navigation\";\nimport { createBrowserApp } from \"@react-navigation/web\";\nimport { AvatarContainer, BottomNavigationContainer, ButtonContainer, ButtonGroupContainer, CheckBoxContainer, DrawerContainer, Home, InputContainer, LayoutContainer, ListContainer, ModalContainer, OverflowMenuContainer, PopoverContainer, RadioContainer, RadioGroupContainer, SampleContainer, TabViewContainer, TextContainer, ToggleContainer, TooltipContainer, TopNavigationContainer, SelectContainer, SpinnerContainer, IconContainer, MenuContainer, CalendarContainer, DatepickerContainer, RangeCalendarContainer, CardContainer, AvatarInlineStylingShowcase, AvatarRemoteImagesShowcase, AvatarShapeShowcase, AvatarSimpleUsageShowcase, AvatarSizeShowcase, BottomNavigationInlineStylingShowcase, BottomNavigationSimpleUsageShowcase, BottomNavigationTabInlineStylingShowcase, BottomNavigationTabSimpleUsageShowcase, BottomNavigationTabWithExternalSourceIconShowcase, BottomNavigationTabWithIconShowcase, BottomNavigationWithIconsShowcase, BottomNavigationWithoutIndicatorShowcase, ButtonAppearancesShowcase, ButtonGhostShowcase, ButtonOutlineShowcase, ButtonSimpleUsageShowcase, ButtonSizeShowcase, ButtonStatusShowcase, ButtonWithIconShowcase, ButtonGroupAppearanceShowcase, ButtonGroupInlineStylingShowcase, ButtonGroupSimpleUsageShowcase, ButtonGroupSizeShowcase, ButtonGroupStatusShowcase, CalendarBoundingMonthShowcase, CalendarBoundsShowcase, CalendarCustomDayShowcase, CalendarCustomLocaleShowcase, CalendarFilterShowcase, CalendarMomentShowcase, CalendarSimpleUsageShowcase, CalendarStartDayOfWeekShowcase, RangeCalendarSimpleUsageShowcase, CardCustomHeaderShowcase, CardEvaHeaderShowcase, CardFooterShowcase, CardHeaderFooterShowcase, CardSimpleUsageShowcase, CardStatusesShowcase, CheckboxIndeterminateShowcase, CheckboxInlineStylingShowcase, CheckboxSimpleUsageShowcase, CheckboxStatusShowcase, CheckboxTextShowcase, DatepickerBoundingMonthShowcase, DatepickerCustomDayShowcase, DatepickerCustomLocaleShowcase, DatepickerFilterShowcase, DatepickerMomentShowcase, DatepickerSimpleUsageShowcase, DatepickerWithIconShowcase, RangeDatepickerSimpleUsageShowcase, DrawerCustomHeaderShowcase, DrawerFooterShowcase, DrawerHeaderShowcase, DrawerHeaderFooterInlineStylingShowcase, DrawerHeaderFooterSimpleUsageShowcase, DrawerHeaderFooterWithAccessoryShowcase, DrawerHeaderFooterWithExternalSourceIconShowcase, DrawerNotificationBadgeItemShowcase, DrawerSimpleUsageShowcase, DrawerWithIconsShowcase, IconAnimationShowcase, IconAnimationInfiniteShowcase, IconExternalSourceShowcase, IconInlineStylingShowcase, IconSimpleUsageShowcase, IconWithinButtonShowcase, IconWithinInputShowcase, InputInlineStylingShowcase, InputSimpleUsageShowcase, InputSizeShowcase, InputStatusShowcase, InputWithCaptionShowcase, InputWithExternalSourceIconShowcase, InputWithIconShowcase, InputWithLabelShowcase, LayoutInlineStylingShowcase, LayoutLevelShowcase, LayoutSimpleUsageShowcase, ListCompositeItemShowcase, ListInlineStylingShowcase, ListItemInlineStylingShowcase, ListItemSimpleUsageShowcase, ListItemWithAccessoryShowcase, ListItemWithExternalIconShowcase, ListItemWithIconShowcase, ListSimpleUsageShowcase, MenuAppearanceShowcase, MenuInlineStylingShowcase, MenuSimpleUsageShowcase, MenuWithIconsShowcase, MenuWithSubMenuShowcase, OverflowMenuWithoutDividerShowcase, OverflowMenuExternalSourceIconsShowcase, OverflowMenuSimpleUsageShowcase, OverflowMenuWithDisabledItemsShowcase, OverflowMenuWithIconsShowcase, PopoverPlacementShowcase, PopoverSimpleUsageShowcase, RadioInlineStylingShowcase, RadioSimpleUsageShowcase, RadioStatusShowcase, RadioWithTextShowcase, RadioGroupSimpleUsageShowcase, SelectCustomIconShowcase, SelectInlineStylingShowcase, SelectMultiPreselectedInlineShowcase, SelectMultiPreselectedReferenceShowcase, SelectMultiSelectShowcase, SelectSimpleUsageShowcase, SelectStatusShowcase, SelectWithGroupsShowcase, SpinnerDataLoadingShowcase, SpinnerSimpleUsageShowcase, SpinnerSizesShowcase, SpinnerStatusesShowcase, TabBarSimpleUsageShowcase, TabInlineStylingShowcase, TabSimpleUsageShowcase, TabViewInlineStylingShowcase, TabViewLazyLoadingShowcase, TabViewSimpleUsageShowcase, TabWithExternalSourceIconShowcase, TabWithIconShowcase, TextAppearancesShowcase, TextCategoriesShowcase, TextInlineStylingShowcase, TextSimpleUsageShowcase, TextStatusesShowcase, ToggleInlineStylingShowcase, ToggleSimpleUsageShowcase, ToggleSizeShowcase, ToggleStatusShowcase, ToggleWithTextShowcase, TooltipInlineStylingShowcase, TooltipPlacementShowcase, TooltipSimpleUsageShowcase, TooltipWithExternalSourceIconShowcase, TooltipWithIconShowcase, TopNavigationActionExternalSourceIconShowcase, TopNavigationActionInlineStylingShowcase, TopNavigationActionsShowcase, TopNavigationActionSimpleUsageShowcase, TopNavigationAlignmentsShowcase, TopNavigationInlineStylingShowcase, TopNavigationSimpleUsageShowcase, TopNavigationWithMenuShowcase, ViewPagerInlineStylingShowcase, ViewPagerLazyLoadingShowcase, ViewPagerSimpleUsageShowcase } from \"../ui/screen\";\nimport { DrawerNavigation } from \"./drawerNavigation.component\";\nimport { sharingHeightContainer } from \"./sharingHeight.container\";\n\nexport interface RouteType {\n    name: string;\n}\n\nconst routes: NavigationRouteConfigMap = {\n      ['Home']: Home,\n      ['Avatar']: AvatarContainer,\n      ['Bottom Navigation']: BottomNavigationContainer,\n      ['Button']: ButtonContainer,\n      ['Button Group']: ButtonGroupContainer,\n      ['Calendar']: CalendarContainer,\n      ['Card']: CardContainer,\n      ['Range Calendar']: RangeCalendarContainer,\n      ['Checkbox']: CheckBoxContainer,\n      ['Drawer']: DrawerContainer,\n      ['Datepicker']: DatepickerContainer,\n      ['Icon']: IconContainer,\n      ['Input']: InputContainer,\n      ['Layout']: LayoutContainer,\n      ['List']: ListContainer,\n      ['Menu']: MenuContainer,\n      ['Modal']: ModalContainer,\n      ['Popover']: PopoverContainer,\n      ['Radio']: RadioContainer,\n      ['Radio Group']: RadioGroupContainer,\n      ['Spinner']: SpinnerContainer,\n      ['Tab View']: TabViewContainer,\n      ['Tooltip']: TooltipContainer,\n      ['Text']: TextContainer,\n      ['Toggle']: ToggleContainer,\n      ['Top Navigation']: TopNavigationContainer,\n      ['Overflow Menu']: OverflowMenuContainer,\n      ['Sample']: SampleContainer,\n      ['Select']: SelectContainer,\n    ['AvatarInlineStyling']: () => sharingHeightContainer(AvatarInlineStylingShowcase, 'AvatarInlineStyling')\n    ,['AvatarRemoteImages']: () => sharingHeightContainer(AvatarRemoteImagesShowcase, 'AvatarRemoteImages')\n    ,['AvatarShape']: () => sharingHeightContainer(AvatarShapeShowcase, 'AvatarShape')\n    ,['AvatarSimpleUsage']: () => sharingHeightContainer(AvatarSimpleUsageShowcase, 'AvatarSimpleUsage')\n    ,['AvatarSize']: () => sharingHeightContainer(AvatarSizeShowcase, 'AvatarSize')\n    ,['BottomNavigationInlineStyling']: () => sharingHeightContainer(BottomNavigationInlineStylingShowcase, 'BottomNavigationInlineStyling')\n    ,['BottomNavigationSimpleUsage']: () => sharingHeightContainer(BottomNavigationSimpleUsageShowcase, 'BottomNavigationSimpleUsage')\n    ,['BottomNavigationTabInlineStyling']: () => sharingHeightContainer(BottomNavigationTabInlineStylingShowcase, 'BottomNavigationTabInlineStyling')\n    ,['BottomNavigationTabSimpleUsage']: () => sharingHeightContainer(BottomNavigationTabSimpleUsageShowcase, 'BottomNavigationTabSimpleUsage')\n    ,['BottomNavigationTabWithExternalSourceIcon']: () => sharingHeightContainer(BottomNavigationTabWithExternalSourceIconShowcase, 'BottomNavigationTabWithExternalSourceIcon')\n    ,['BottomNavigationTabWithIcon']: () => sharingHeightContainer(BottomNavigationTabWithIconShowcase, 'BottomNavigationTabWithIcon')\n    ,['BottomNavigationWithIcons']: () => sharingHeightContainer(BottomNavigationWithIconsShowcase, 'BottomNavigationWithIcons')\n    ,['BottomNavigationWithoutIndicator']: () => sharingHeightContainer(BottomNavigationWithoutIndicatorShowcase, 'BottomNavigationWithoutIndicator')\n    ,['ButtonAppearances']: () => sharingHeightContainer(ButtonAppearancesShowcase, 'ButtonAppearances')\n    ,['ButtonGhost']: () => sharingHeightContainer(ButtonGhostShowcase, 'ButtonGhost')\n    ,['ButtonOutline']: () => sharingHeightContainer(ButtonOutlineShowcase, 'ButtonOutline')\n    ,['ButtonSimpleUsage']: () => sharingHeightContainer(ButtonSimpleUsageShowcase, 'ButtonSimpleUsage')\n    ,['ButtonSize']: () => sharingHeightContainer(ButtonSizeShowcase, 'ButtonSize')\n    ,['ButtonStatus']: () => sharingHeightContainer(ButtonStatusShowcase, 'ButtonStatus')\n    ,['ButtonWithIcon']: () => sharingHeightContainer(ButtonWithIconShowcase, 'ButtonWithIcon')\n    ,['ButtonGroupAppearance']: () => sharingHeightContainer(ButtonGroupAppearanceShowcase, 'ButtonGroupAppearance')\n    ,['ButtonGroupInlineStyling']: () => sharingHeightContainer(ButtonGroupInlineStylingShowcase, 'ButtonGroupInlineStyling')\n    ,['ButtonGroupSimpleUsage']: () => sharingHeightContainer(ButtonGroupSimpleUsageShowcase, 'ButtonGroupSimpleUsage')\n    ,['ButtonGroupSize']: () => sharingHeightContainer(ButtonGroupSizeShowcase, 'ButtonGroupSize')\n    ,['ButtonGroupStatus']: () => sharingHeightContainer(ButtonGroupStatusShowcase, 'ButtonGroupStatus')\n    ,['CalendarBoundingMonth']: () => sharingHeightContainer(CalendarBoundingMonthShowcase, 'CalendarBoundingMonth')\n    ,['CalendarBounds']: () => sharingHeightContainer(CalendarBoundsShowcase, 'CalendarBounds')\n    ,['CalendarCustomDay']: () => sharingHeightContainer(CalendarCustomDayShowcase, 'CalendarCustomDay')\n    ,['CalendarCustomLocale']: () => sharingHeightContainer(CalendarCustomLocaleShowcase, 'CalendarCustomLocale')\n    ,['CalendarFilter']: () => sharingHeightContainer(CalendarFilterShowcase, 'CalendarFilter')\n    ,['CalendarMoment']: () => sharingHeightContainer(CalendarMomentShowcase, 'CalendarMoment')\n    ,['CalendarSimpleUsage']: () => sharingHeightContainer(CalendarSimpleUsageShowcase, 'CalendarSimpleUsage')\n    ,['CalendarStartDayOfWeek']: () => sharingHeightContainer(CalendarStartDayOfWeekShowcase, 'CalendarStartDayOfWeek')\n    ,['RangeCalendarSimpleUsage']: () => sharingHeightContainer(RangeCalendarSimpleUsageShowcase, 'RangeCalendarSimpleUsage')\n    ,['CardCustomHeader']: () => sharingHeightContainer(CardCustomHeaderShowcase, 'CardCustomHeader')\n    ,['CardEvaHeader']: () => sharingHeightContainer(CardEvaHeaderShowcase, 'CardEvaHeader')\n    ,['CardFooter']: () => sharingHeightContainer(CardFooterShowcase, 'CardFooter')\n    ,['CardHeaderFooter']: () => sharingHeightContainer(CardHeaderFooterShowcase, 'CardHeaderFooter')\n    ,['CardSimpleUsage']: () => sharingHeightContainer(CardSimpleUsageShowcase, 'CardSimpleUsage')\n    ,['CardStatuses']: () => sharingHeightContainer(CardStatusesShowcase, 'CardStatuses')\n    ,['CheckboxIndeterminate']: () => sharingHeightContainer(CheckboxIndeterminateShowcase, 'CheckboxIndeterminate')\n    ,['CheckboxInlineStyling']: () => sharingHeightContainer(CheckboxInlineStylingShowcase, 'CheckboxInlineStyling')\n    ,['CheckboxSimpleUsage']: () => sharingHeightContainer(CheckboxSimpleUsageShowcase, 'CheckboxSimpleUsage')\n    ,['CheckboxStatus']: () => sharingHeightContainer(CheckboxStatusShowcase, 'CheckboxStatus')\n    ,['CheckboxText']: () => sharingHeightContainer(CheckboxTextShowcase, 'CheckboxText')\n    ,['DatepickerBoundingMonth']: () => sharingHeightContainer(DatepickerBoundingMonthShowcase, 'DatepickerBoundingMonth')\n    ,['DatepickerCustomDay']: () => sharingHeightContainer(DatepickerCustomDayShowcase, 'DatepickerCustomDay')\n    ,['DatepickerCustomLocale']: () => sharingHeightContainer(DatepickerCustomLocaleShowcase, 'DatepickerCustomLocale')\n    ,['DatepickerFilter']: () => sharingHeightContainer(DatepickerFilterShowcase, 'DatepickerFilter')\n    ,['DatepickerMoment']: () => sharingHeightContainer(DatepickerMomentShowcase, 'DatepickerMoment')\n    ,['DatepickerSimpleUsage']: () => sharingHeightContainer(DatepickerSimpleUsageShowcase, 'DatepickerSimpleUsage')\n    ,['DatepickerWithIcon']: () => sharingHeightContainer(DatepickerWithIconShowcase, 'DatepickerWithIcon')\n    ,['RangeDatepickerSimpleUsage']: () => sharingHeightContainer(RangeDatepickerSimpleUsageShowcase, 'RangeDatepickerSimpleUsage')\n    ,['DrawerCustomHeader']: () => sharingHeightContainer(DrawerCustomHeaderShowcase, 'DrawerCustomHeader')\n    ,['DrawerFooter']: () => sharingHeightContainer(DrawerFooterShowcase, 'DrawerFooter')\n    ,['DrawerHeader']: () => sharingHeightContainer(DrawerHeaderShowcase, 'DrawerHeader')\n    ,['DrawerHeaderFooterInlineStyling']: () => sharingHeightContainer(DrawerHeaderFooterInlineStylingShowcase, 'DrawerHeaderFooterInlineStyling')\n    ,['DrawerHeaderFooterSimpleUsage']: () => sharingHeightContainer(DrawerHeaderFooterSimpleUsageShowcase, 'DrawerHeaderFooterSimpleUsage')\n    ,['DrawerHeaderFooterWithAccessory']: () => sharingHeightContainer(DrawerHeaderFooterWithAccessoryShowcase, 'DrawerHeaderFooterWithAccessory')\n    ,['DrawerHeaderFooterWithExternalSourceIcon']: () => sharingHeightContainer(DrawerHeaderFooterWithExternalSourceIconShowcase, 'DrawerHeaderFooterWithExternalSourceIcon')\n    ,['DrawerNotificationBadgeItem']: () => sharingHeightContainer(DrawerNotificationBadgeItemShowcase, 'DrawerNotificationBadgeItem')\n    ,['DrawerSimpleUsage']: () => sharingHeightContainer(DrawerSimpleUsageShowcase, 'DrawerSimpleUsage')\n    ,['DrawerWithIcons']: () => sharingHeightContainer(DrawerWithIconsShowcase, 'DrawerWithIcons')\n    ,['IconAnimation']: () => sharingHeightContainer(IconAnimationShowcase, 'IconAnimation')\n    ,['IconAnimationInfinite']: () => sharingHeightContainer(IconAnimationInfiniteShowcase, 'IconAnimationInfinite')\n    ,['IconExternalSource']: () => sharingHeightContainer(IconExternalSourceShowcase, 'IconExternalSource')\n    ,['IconInlineStyling']: () => sharingHeightContainer(IconInlineStylingShowcase, 'IconInlineStyling')\n    ,['IconSimpleUsage']: () => sharingHeightContainer(IconSimpleUsageShowcase, 'IconSimpleUsage')\n    ,['IconWithinButton']: () => sharingHeightContainer(IconWithinButtonShowcase, 'IconWithinButton')\n    ,['IconWithinInput']: () => sharingHeightContainer(IconWithinInputShowcase, 'IconWithinInput')\n    ,['InputInlineStyling']: () => sharingHeightContainer(InputInlineStylingShowcase, 'InputInlineStyling')\n    ,['InputSimpleUsage']: () => sharingHeightContainer(InputSimpleUsageShowcase, 'InputSimpleUsage')\n    ,['InputSize']: () => sharingHeightContainer(InputSizeShowcase, 'InputSize')\n    ,['InputStatus']: () => sharingHeightContainer(InputStatusShowcase, 'InputStatus')\n    ,['InputWithCaption']: () => sharingHeightContainer(InputWithCaptionShowcase, 'InputWithCaption')\n    ,['InputWithExternalSourceIcon']: () => sharingHeightContainer(InputWithExternalSourceIconShowcase, 'InputWithExternalSourceIcon')\n    ,['InputWithIcon']: () => sharingHeightContainer(InputWithIconShowcase, 'InputWithIcon')\n    ,['InputWithLabel']: () => sharingHeightContainer(InputWithLabelShowcase, 'InputWithLabel')\n    ,['LayoutInlineStyling']: () => sharingHeightContainer(LayoutInlineStylingShowcase, 'LayoutInlineStyling')\n    ,['LayoutLevel']: () => sharingHeightContainer(LayoutLevelShowcase, 'LayoutLevel')\n    ,['LayoutSimpleUsage']: () => sharingHeightContainer(LayoutSimpleUsageShowcase, 'LayoutSimpleUsage')\n    ,['ListCompositeItem']: () => sharingHeightContainer(ListCompositeItemShowcase, 'ListCompositeItem')\n    ,['ListInlineStyling']: () => sharingHeightContainer(ListInlineStylingShowcase, 'ListInlineStyling')\n    ,['ListItemInlineStyling']: () => sharingHeightContainer(ListItemInlineStylingShowcase, 'ListItemInlineStyling')\n    ,['ListItemSimpleUsage']: () => sharingHeightContainer(ListItemSimpleUsageShowcase, 'ListItemSimpleUsage')\n    ,['ListItemWithAccessory']: () => sharingHeightContainer(ListItemWithAccessoryShowcase, 'ListItemWithAccessory')\n    ,['ListItemWithExternalIcon']: () => sharingHeightContainer(ListItemWithExternalIconShowcase, 'ListItemWithExternalIcon')\n    ,['ListItemWithIcon']: () => sharingHeightContainer(ListItemWithIconShowcase, 'ListItemWithIcon')\n    ,['ListSimpleUsage']: () => sharingHeightContainer(ListSimpleUsageShowcase, 'ListSimpleUsage')\n    ,['MenuAppearance']: () => sharingHeightContainer(MenuAppearanceShowcase, 'MenuAppearance')\n    ,['MenuInlineStyling']: () => sharingHeightContainer(MenuInlineStylingShowcase, 'MenuInlineStyling')\n    ,['MenuSimpleUsage']: () => sharingHeightContainer(MenuSimpleUsageShowcase, 'MenuSimpleUsage')\n    ,['MenuWithIcons']: () => sharingHeightContainer(MenuWithIconsShowcase, 'MenuWithIcons')\n    ,['MenuWithSubMenu']: () => sharingHeightContainer(MenuWithSubMenuShowcase, 'MenuWithSubMenu')\n    ,['OverflowMenuWithoutDivider']: () => sharingHeightContainer(OverflowMenuWithoutDividerShowcase, 'OverflowMenuWithoutDivider')\n    ,['OverflowMenuExternalSourceIcons']: () => sharingHeightContainer(OverflowMenuExternalSourceIconsShowcase, 'OverflowMenuExternalSourceIcons')\n    ,['OverflowMenuSimpleUsage']: () => sharingHeightContainer(OverflowMenuSimpleUsageShowcase, 'OverflowMenuSimpleUsage')\n    ,['OverflowMenuWithDisabledItems']: () => sharingHeightContainer(OverflowMenuWithDisabledItemsShowcase, 'OverflowMenuWithDisabledItems')\n    ,['OverflowMenuWithIcons']: () => sharingHeightContainer(OverflowMenuWithIconsShowcase, 'OverflowMenuWithIcons')\n    ,['PopoverPlacement']: () => sharingHeightContainer(PopoverPlacementShowcase, 'PopoverPlacement')\n    ,['PopoverSimpleUsage']: () => sharingHeightContainer(PopoverSimpleUsageShowcase, 'PopoverSimpleUsage')\n    ,['RadioInlineStyling']: () => sharingHeightContainer(RadioInlineStylingShowcase, 'RadioInlineStyling')\n    ,['RadioSimpleUsage']: () => sharingHeightContainer(RadioSimpleUsageShowcase, 'RadioSimpleUsage')\n    ,['RadioStatus']: () => sharingHeightContainer(RadioStatusShowcase, 'RadioStatus')\n    ,['RadioWithText']: () => sharingHeightContainer(RadioWithTextShowcase, 'RadioWithText')\n    ,['RadioGroupSimpleUsage']: () => sharingHeightContainer(RadioGroupSimpleUsageShowcase, 'RadioGroupSimpleUsage')\n    ,['SelectCustomIcon']: () => sharingHeightContainer(SelectCustomIconShowcase, 'SelectCustomIcon')\n    ,['SelectInlineStyling']: () => sharingHeightContainer(SelectInlineStylingShowcase, 'SelectInlineStyling')\n    ,['SelectMultiPreselectedInline']: () => sharingHeightContainer(SelectMultiPreselectedInlineShowcase, 'SelectMultiPreselectedInline')\n    ,['SelectMultiPreselectedReference']: () => sharingHeightContainer(SelectMultiPreselectedReferenceShowcase, 'SelectMultiPreselectedReference')\n    ,['SelectMultiSelect']: () => sharingHeightContainer(SelectMultiSelectShowcase, 'SelectMultiSelect')\n    ,['SelectSimpleUsage']: () => sharingHeightContainer(SelectSimpleUsageShowcase, 'SelectSimpleUsage')\n    ,['SelectStatus']: () => sharingHeightContainer(SelectStatusShowcase, 'SelectStatus')\n    ,['SelectWithGroups']: () => sharingHeightContainer(SelectWithGroupsShowcase, 'SelectWithGroups')\n    ,['SpinnerDataLoading']: () => sharingHeightContainer(SpinnerDataLoadingShowcase, 'SpinnerDataLoading')\n    ,['SpinnerSimpleUsage']: () => sharingHeightContainer(SpinnerSimpleUsageShowcase, 'SpinnerSimpleUsage')\n    ,['SpinnerSizes']: () => sharingHeightContainer(SpinnerSizesShowcase, 'SpinnerSizes')\n    ,['SpinnerStatuses']: () => sharingHeightContainer(SpinnerStatusesShowcase, 'SpinnerStatuses')\n    ,['TabBarSimpleUsage']: () => sharingHeightContainer(TabBarSimpleUsageShowcase, 'TabBarSimpleUsage')\n    ,['TabInlineStyling']: () => sharingHeightContainer(TabInlineStylingShowcase, 'TabInlineStyling')\n    ,['TabSimpleUsage']: () => sharingHeightContainer(TabSimpleUsageShowcase, 'TabSimpleUsage')\n    ,['TabViewInlineStyling']: () => sharingHeightContainer(TabViewInlineStylingShowcase, 'TabViewInlineStyling')\n    ,['TabViewLazyLoading']: () => sharingHeightContainer(TabViewLazyLoadingShowcase, 'TabViewLazyLoading')\n    ,['TabViewSimpleUsage']: () => sharingHeightContainer(TabViewSimpleUsageShowcase, 'TabViewSimpleUsage')\n    ,['TabWithExternalSourceIcon']: () => sharingHeightContainer(TabWithExternalSourceIconShowcase, 'TabWithExternalSourceIcon')\n    ,['TabWithIcon']: () => sharingHeightContainer(TabWithIconShowcase, 'TabWithIcon')\n    ,['TextAppearances']: () => sharingHeightContainer(TextAppearancesShowcase, 'TextAppearances')\n    ,['TextCategories']: () => sharingHeightContainer(TextCategoriesShowcase, 'TextCategories')\n    ,['TextInlineStyling']: () => sharingHeightContainer(TextInlineStylingShowcase, 'TextInlineStyling')\n    ,['TextSimpleUsage']: () => sharingHeightContainer(TextSimpleUsageShowcase, 'TextSimpleUsage')\n    ,['TextStatuses']: () => sharingHeightContainer(TextStatusesShowcase, 'TextStatuses')\n    ,['ToggleInlineStyling']: () => sharingHeightContainer(ToggleInlineStylingShowcase, 'ToggleInlineStyling')\n    ,['ToggleSimpleUsage']: () => sharingHeightContainer(ToggleSimpleUsageShowcase, 'ToggleSimpleUsage')\n    ,['ToggleSize']: () => sharingHeightContainer(ToggleSizeShowcase, 'ToggleSize')\n    ,['ToggleStatus']: () => sharingHeightContainer(ToggleStatusShowcase, 'ToggleStatus')\n    ,['ToggleWithText']: () => sharingHeightContainer(ToggleWithTextShowcase, 'ToggleWithText')\n    ,['TooltipInlineStyling']: () => sharingHeightContainer(TooltipInlineStylingShowcase, 'TooltipInlineStyling')\n    ,['TooltipPlacement']: () => sharingHeightContainer(TooltipPlacementShowcase, 'TooltipPlacement')\n    ,['TooltipSimpleUsage']: () => sharingHeightContainer(TooltipSimpleUsageShowcase, 'TooltipSimpleUsage')\n    ,['TooltipWithExternalSourceIcon']: () => sharingHeightContainer(TooltipWithExternalSourceIconShowcase, 'TooltipWithExternalSourceIcon')\n    ,['TooltipWithIcon']: () => sharingHeightContainer(TooltipWithIconShowcase, 'TooltipWithIcon')\n    ,['TopNavigationActionExternalSourceIcon']: () => sharingHeightContainer(TopNavigationActionExternalSourceIconShowcase, 'TopNavigationActionExternalSourceIcon')\n    ,['TopNavigationActionInlineStyling']: () => sharingHeightContainer(TopNavigationActionInlineStylingShowcase, 'TopNavigationActionInlineStyling')\n    ,['TopNavigationActions']: () => sharingHeightContainer(TopNavigationActionsShowcase, 'TopNavigationActions')\n    ,['TopNavigationActionSimpleUsage']: () => sharingHeightContainer(TopNavigationActionSimpleUsageShowcase, 'TopNavigationActionSimpleUsage')\n    ,['TopNavigationAlignments']: () => sharingHeightContainer(TopNavigationAlignmentsShowcase, 'TopNavigationAlignments')\n    ,['TopNavigationInlineStyling']: () => sharingHeightContainer(TopNavigationInlineStylingShowcase, 'TopNavigationInlineStyling')\n    ,['TopNavigationSimpleUsage']: () => sharingHeightContainer(TopNavigationSimpleUsageShowcase, 'TopNavigationSimpleUsage')\n    ,['TopNavigationWithMenu']: () => sharingHeightContainer(TopNavigationWithMenuShowcase, 'TopNavigationWithMenu')\n    ,['ViewPagerInlineStyling']: () => sharingHeightContainer(ViewPagerInlineStylingShowcase, 'ViewPagerInlineStyling')\n    ,['ViewPagerLazyLoading']: () => sharingHeightContainer(ViewPagerLazyLoadingShowcase, 'ViewPagerLazyLoading')\n    ,['ViewPagerSimpleUsage']: () => sharingHeightContainer(ViewPagerSimpleUsageShowcase, 'ViewPagerSimpleUsage')\n    };\nconst MenuNavigator = createStackNavigator(routes, {\n      initialRouteName: 'Home',\n      headerMode: Platform.select({\n        ios: 'screen',\n        android: 'screen',\n        default: 'none',\n      }),\n    });\nconst DrawerNavigator = createDrawerNavigator({\n      ...routes,\n      ['Home']: MenuNavigator,\n    }, {\n      contentComponent: DrawerNavigation,\n      initialRouteName: 'Home',\n    });\nexport let Router: any;\nswitch (Platform.OS) {\n  case 'web':\n    Router = createBrowserApp(MenuNavigator, { history: 'hash' });\n    break;\n  default:\n    Router = createAppContainer(DrawerNavigator);\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { AntDesign } from '@expo/vector-icons';\n\nexport const AntDesignIconsPack = {\n  name: 'ant',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nfunction IconProvider(name) {\n  return {\n    toReactElement: (props) => AntDesignIcon({ name, ...props }),\n  };\n}\n\nfunction AntDesignIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <AntDesign\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Feather } from '@expo/vector-icons';\n\nexport const FeatherIconsPack = {\n  name: 'feather',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nfunction IconProvider(name) {\n  return {\n    toReactElement: (props) => FeatherIcon({ name, ...props }),\n  };\n}\n\nfunction FeatherIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <Feather\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import React from 'react';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { StyleSheet } from 'react-native';\n\nexport const FontAwesomeIconsPack = {\n  name: 'font-awesome',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nfunction IconProvider(name) {\n  return {\n    toReactElement: (props) => FontAwesomeIcon({ name, ...props }),\n  };\n}\n\nfunction FontAwesomeIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <FontAwesome\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { MaterialIcons } from '@expo/vector-icons';\n\nexport const MaterialIconsPack = {\n  name: 'material',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nfunction IconProvider(name) {\n  return {\n    toReactElement: (props) => MaterialIcon({ name, ...props }),\n  };\n}\n\nfunction MaterialIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <MaterialIcons\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import React from 'react';\nimport { mapping as evaMapping } from '@eva-design/eva';\nimport { EvaIconsPack } from '@ui-kitten/eva-icons';\nimport {\n  ApplicationProvider,\n  ApplicationProviderProps,\n  IconPack,\n  IconRegistry,\n} from 'react-native-ui-kitten';\nimport { Router } from './navigation';\nimport {\n  AntDesignIconsPack,\n  FeatherIconsPack,\n  FontAwesomeIconsPack,\n  MaterialCommunityIconsPack,\n  MaterialIconsPack,\n} from './icons';\nimport {\n  ThemeContext,\n  ThemeContextType,\n  ThemeKey,\n  themes,\n} from './themes';\n\ninterface State {\n  theme: ThemeKey;\n}\n\nconst icons: IconPack<any>[] = [\n  EvaIconsPack,\n  AntDesignIconsPack,\n  FeatherIconsPack,\n  FontAwesomeIconsPack,\n  MaterialIconsPack,\n  MaterialCommunityIconsPack,\n];\n\nexport default class App extends React.Component<{}, State> {\n\n  public state: State = {\n    theme: 'Eva Light',\n  };\n\n  private get appConfig(): ApplicationProviderProps {\n    const { [this.state.theme]: currentTheme } = themes;\n\n    return {\n      mapping: evaMapping,\n      theme: currentTheme,\n    };\n  }\n\n  private get themeContext(): ThemeContextType {\n    return {\n      name: this.state.theme,\n      toggleTheme: this.toggleTheme,\n    };\n  }\n\n  private toggleTheme = (theme: ThemeKey): void => {\n    this.setState({ theme });\n  };\n\n  public render(): React.ReactFragment {\n    return (\n      <React.Fragment>\n        <IconRegistry icons={icons}/>\n        <ApplicationProvider {...this.appConfig}>\n          <ThemeContext.Provider value={this.themeContext}>\n            <Router/>\n          </ThemeContext.Provider>\n        </ApplicationProvider>\n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { MaterialCommunityIcons } from '@expo/vector-icons';\n\nexport const MaterialCommunityIconsPack = {\n  name: 'material-community',\n  icons: createIconsMap(),\n};\n\nfunction createIconsMap() {\n  return new Proxy({}, {\n    get(target, name) {\n      return IconProvider(name);\n    },\n  });\n}\n\nfunction IconProvider(name) {\n  return {\n    toReactElement: (props) => MaterialCommunityIcon({ name, ...props }),\n  };\n}\n\nfunction MaterialCommunityIcon(props) {\n  const { name, style } = props;\n  const { height, tintColor, ...iconStyle } = StyleSheet.flatten(style);\n  return (\n    <MaterialCommunityIcons\n      name={name}\n      size={height}\n      color={tintColor}\n      style={iconStyle}\n    />\n  );\n}\n","import App from './src/app.component';\n\nexport default App;\n","var map = {\n\t\"./af\": 256,\n\t\"./af.js\": 256,\n\t\"./ar\": 257,\n\t\"./ar-dz\": 258,\n\t\"./ar-dz.js\": 258,\n\t\"./ar-kw\": 259,\n\t\"./ar-kw.js\": 259,\n\t\"./ar-ly\": 260,\n\t\"./ar-ly.js\": 260,\n\t\"./ar-ma\": 261,\n\t\"./ar-ma.js\": 261,\n\t\"./ar-sa\": 262,\n\t\"./ar-sa.js\": 262,\n\t\"./ar-tn\": 263,\n\t\"./ar-tn.js\": 263,\n\t\"./ar.js\": 257,\n\t\"./az\": 264,\n\t\"./az.js\": 264,\n\t\"./be\": 265,\n\t\"./be.js\": 265,\n\t\"./bg\": 266,\n\t\"./bg.js\": 266,\n\t\"./bm\": 267,\n\t\"./bm.js\": 267,\n\t\"./bn\": 268,\n\t\"./bn.js\": 268,\n\t\"./bo\": 269,\n\t\"./bo.js\": 269,\n\t\"./br\": 270,\n\t\"./br.js\": 270,\n\t\"./bs\": 271,\n\t\"./bs.js\": 271,\n\t\"./ca\": 272,\n\t\"./ca.js\": 272,\n\t\"./cs\": 273,\n\t\"./cs.js\": 273,\n\t\"./cv\": 274,\n\t\"./cv.js\": 274,\n\t\"./cy\": 275,\n\t\"./cy.js\": 275,\n\t\"./da\": 276,\n\t\"./da.js\": 276,\n\t\"./de\": 277,\n\t\"./de-at\": 278,\n\t\"./de-at.js\": 278,\n\t\"./de-ch\": 279,\n\t\"./de-ch.js\": 279,\n\t\"./de.js\": 277,\n\t\"./dv\": 280,\n\t\"./dv.js\": 280,\n\t\"./el\": 281,\n\t\"./el.js\": 281,\n\t\"./en-SG\": 282,\n\t\"./en-SG.js\": 282,\n\t\"./en-au\": 283,\n\t\"./en-au.js\": 283,\n\t\"./en-ca\": 284,\n\t\"./en-ca.js\": 284,\n\t\"./en-gb\": 285,\n\t\"./en-gb.js\": 285,\n\t\"./en-ie\": 286,\n\t\"./en-ie.js\": 286,\n\t\"./en-il\": 287,\n\t\"./en-il.js\": 287,\n\t\"./en-nz\": 288,\n\t\"./en-nz.js\": 288,\n\t\"./eo\": 289,\n\t\"./eo.js\": 289,\n\t\"./es\": 290,\n\t\"./es-do\": 291,\n\t\"./es-do.js\": 291,\n\t\"./es-us\": 292,\n\t\"./es-us.js\": 292,\n\t\"./es.js\": 290,\n\t\"./et\": 293,\n\t\"./et.js\": 293,\n\t\"./eu\": 294,\n\t\"./eu.js\": 294,\n\t\"./fa\": 295,\n\t\"./fa.js\": 295,\n\t\"./fi\": 296,\n\t\"./fi.js\": 296,\n\t\"./fo\": 297,\n\t\"./fo.js\": 297,\n\t\"./fr\": 298,\n\t\"./fr-ca\": 299,\n\t\"./fr-ca.js\": 299,\n\t\"./fr-ch\": 300,\n\t\"./fr-ch.js\": 300,\n\t\"./fr.js\": 298,\n\t\"./fy\": 301,\n\t\"./fy.js\": 301,\n\t\"./ga\": 302,\n\t\"./ga.js\": 302,\n\t\"./gd\": 303,\n\t\"./gd.js\": 303,\n\t\"./gl\": 304,\n\t\"./gl.js\": 304,\n\t\"./gom-latn\": 305,\n\t\"./gom-latn.js\": 305,\n\t\"./gu\": 306,\n\t\"./gu.js\": 306,\n\t\"./he\": 307,\n\t\"./he.js\": 307,\n\t\"./hi\": 308,\n\t\"./hi.js\": 308,\n\t\"./hr\": 309,\n\t\"./hr.js\": 309,\n\t\"./hu\": 310,\n\t\"./hu.js\": 310,\n\t\"./hy-am\": 311,\n\t\"./hy-am.js\": 311,\n\t\"./id\": 312,\n\t\"./id.js\": 312,\n\t\"./is\": 313,\n\t\"./is.js\": 313,\n\t\"./it\": 314,\n\t\"./it-ch\": 315,\n\t\"./it-ch.js\": 315,\n\t\"./it.js\": 314,\n\t\"./ja\": 316,\n\t\"./ja.js\": 316,\n\t\"./jv\": 317,\n\t\"./jv.js\": 317,\n\t\"./ka\": 318,\n\t\"./ka.js\": 318,\n\t\"./kk\": 319,\n\t\"./kk.js\": 319,\n\t\"./km\": 320,\n\t\"./km.js\": 320,\n\t\"./kn\": 321,\n\t\"./kn.js\": 321,\n\t\"./ko\": 322,\n\t\"./ko.js\": 322,\n\t\"./ku\": 323,\n\t\"./ku.js\": 323,\n\t\"./ky\": 324,\n\t\"./ky.js\": 324,\n\t\"./lb\": 325,\n\t\"./lb.js\": 325,\n\t\"./lo\": 326,\n\t\"./lo.js\": 326,\n\t\"./lt\": 327,\n\t\"./lt.js\": 327,\n\t\"./lv\": 328,\n\t\"./lv.js\": 328,\n\t\"./me\": 329,\n\t\"./me.js\": 329,\n\t\"./mi\": 330,\n\t\"./mi.js\": 330,\n\t\"./mk\": 331,\n\t\"./mk.js\": 331,\n\t\"./ml\": 332,\n\t\"./ml.js\": 332,\n\t\"./mn\": 333,\n\t\"./mn.js\": 333,\n\t\"./mr\": 334,\n\t\"./mr.js\": 334,\n\t\"./ms\": 335,\n\t\"./ms-my\": 336,\n\t\"./ms-my.js\": 336,\n\t\"./ms.js\": 335,\n\t\"./mt\": 337,\n\t\"./mt.js\": 337,\n\t\"./my\": 338,\n\t\"./my.js\": 338,\n\t\"./nb\": 339,\n\t\"./nb.js\": 339,\n\t\"./ne\": 340,\n\t\"./ne.js\": 340,\n\t\"./nl\": 341,\n\t\"./nl-be\": 342,\n\t\"./nl-be.js\": 342,\n\t\"./nl.js\": 341,\n\t\"./nn\": 343,\n\t\"./nn.js\": 343,\n\t\"./pa-in\": 344,\n\t\"./pa-in.js\": 344,\n\t\"./pl\": 345,\n\t\"./pl.js\": 345,\n\t\"./pt\": 346,\n\t\"./pt-br\": 347,\n\t\"./pt-br.js\": 347,\n\t\"./pt.js\": 346,\n\t\"./ro\": 348,\n\t\"./ro.js\": 348,\n\t\"./ru\": 349,\n\t\"./ru.js\": 349,\n\t\"./sd\": 350,\n\t\"./sd.js\": 350,\n\t\"./se\": 351,\n\t\"./se.js\": 351,\n\t\"./si\": 352,\n\t\"./si.js\": 352,\n\t\"./sk\": 353,\n\t\"./sk.js\": 353,\n\t\"./sl\": 354,\n\t\"./sl.js\": 354,\n\t\"./sq\": 355,\n\t\"./sq.js\": 355,\n\t\"./sr\": 356,\n\t\"./sr-cyrl\": 357,\n\t\"./sr-cyrl.js\": 357,\n\t\"./sr.js\": 356,\n\t\"./ss\": 358,\n\t\"./ss.js\": 358,\n\t\"./sv\": 359,\n\t\"./sv.js\": 359,\n\t\"./sw\": 360,\n\t\"./sw.js\": 360,\n\t\"./ta\": 361,\n\t\"./ta.js\": 361,\n\t\"./te\": 362,\n\t\"./te.js\": 362,\n\t\"./tet\": 363,\n\t\"./tet.js\": 363,\n\t\"./tg\": 364,\n\t\"./tg.js\": 364,\n\t\"./th\": 365,\n\t\"./th.js\": 365,\n\t\"./tl-ph\": 366,\n\t\"./tl-ph.js\": 366,\n\t\"./tlh\": 367,\n\t\"./tlh.js\": 367,\n\t\"./tr\": 368,\n\t\"./tr.js\": 368,\n\t\"./tzl\": 369,\n\t\"./tzl.js\": 369,\n\t\"./tzm\": 370,\n\t\"./tzm-latn\": 371,\n\t\"./tzm-latn.js\": 371,\n\t\"./tzm.js\": 370,\n\t\"./ug-cn\": 372,\n\t\"./ug-cn.js\": 372,\n\t\"./uk\": 373,\n\t\"./uk.js\": 373,\n\t\"./ur\": 374,\n\t\"./ur.js\": 374,\n\t\"./uz\": 375,\n\t\"./uz-latn\": 376,\n\t\"./uz-latn.js\": 376,\n\t\"./uz.js\": 375,\n\t\"./vi\": 377,\n\t\"./vi.js\": 377,\n\t\"./x-pseudo\": 378,\n\t\"./x-pseudo.js\": 378,\n\t\"./yo\": 379,\n\t\"./yo.js\": 379,\n\t\"./zh-cn\": 380,\n\t\"./zh-cn.js\": 380,\n\t\"./zh-hk\": 381,\n\t\"./zh-hk.js\": 381,\n\t\"./zh-tw\": 382,\n\t\"./zh-tw.js\": 382\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 615;","module.exports = __webpack_public_path__ + \"static/media/brand-logo.a78e4b51.png\";"],"sourceRoot":""}